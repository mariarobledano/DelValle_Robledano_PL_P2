Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    IF
    NEWLINE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> global_statement_list
Rule 2     global_statement_list -> global_statement
Rule 3     global_statement_list -> global_statement_list global_statement
Rule 4     global_statement -> declaration
Rule 5     global_statement -> assignment
Rule 6     global_statement -> function_def
Rule 7     global_statement -> type_def
Rule 8     global_statement -> instance
Rule 9     statement_list -> statement SEMICOLON
Rule 10    statement_list -> statement_list statement SEMICOLON
Rule 11    statement -> declaration
Rule 12    statement -> assignment
Rule 13    statement -> return_stmt
Rule 14    statement -> instance
Rule 15    statement -> type_def
Rule 16    declaration -> type id_list
Rule 17    declaration -> type id_list ASSIGN expression
Rule 18    assignment -> expression ASSIGN expression
Rule 19    return_stmt -> RETURN expression
Rule 20    function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
Rule 21    param_list -> param
Rule 22    param_list -> param_list SEMICOLON param
Rule 23    param_list -> empty
Rule 24    param -> type ID
Rule 25    type -> base_type
Rule 26    type -> base_type LBRACKET NUMBER RBRACKET
Rule 27    base_type -> INT
Rule 28    base_type -> FLOAT
Rule 29    base_type -> CHAR
Rule 30    base_type -> BOOL
Rule 31    id_list -> ID
Rule 32    id_list -> id_list COMMA ID
Rule 33    type_def -> TYPE ID COLON LBRACE field_list RBRACE
Rule 34    field_list -> field
Rule 35    field_list -> field_list field
Rule 36    field -> type ID
Rule 37    instance -> ID ID
Rule 38    expression -> expression PLUS expression
Rule 39    expression -> expression MINUS expression
Rule 40    expression -> expression TIMES expression
Rule 41    expression -> expression DIVIDE expression
Rule 42    expression -> expression EQ expression
Rule 43    expression -> expression GT expression
Rule 44    expression -> expression GE expression
Rule 45    expression -> expression LT expression
Rule 46    expression -> expression LE expression
Rule 47    expression -> expression AND expression
Rule 48    expression -> expression OR expression
Rule 49    expression -> MINUS expression
Rule 50    expression -> NOT expression
Rule 51    expression -> LPAREN expression RPAREN
Rule 52    expression -> NUMBER
Rule 53    expression -> FLOAT_NUMBER
Rule 54    expression -> TRUE
Rule 55    expression -> FALSE
Rule 56    expression -> CHARACTER
Rule 57    expression -> ID
Rule 58    expression -> expression LBRACKET expression RBRACKET
Rule 59    expression -> expression DOT ID
Rule 60    expression -> ID LPAREN arg_list RPAREN
Rule 61    arg_list -> expression
Rule 62    arg_list -> arg_list COMMA expression
Rule 63    arg_list -> empty
Rule 64    empty -> <empty>

Terminals, with rules where they appear

AND                  : 47
ASSIGN               : 17 18
BOOL                 : 30
CHAR                 : 29
CHARACTER            : 56
COLON                : 20 33
COMMA                : 32 62
DEF                  : 20
DIVIDE               : 41
DOT                  : 59
ELSE                 : 
EQ                   : 42
FALSE                : 55
FLOAT                : 28
FLOAT_NUMBER         : 53
GE                   : 44
GT                   : 43
ID                   : 20 24 31 32 33 36 37 37 57 59 60
IF                   : 
INT                  : 27
LBRACE               : 20 33
LBRACKET             : 26 58
LE                   : 46
LPAREN               : 20 51 60
LT                   : 45
MINUS                : 39 49
NEWLINE              : 
NOT                  : 50
NUMBER               : 26 52
OR                   : 48
PLUS                 : 38
RBRACE               : 20 33
RBRACKET             : 26 58
RETURN               : 19
RPAREN               : 20 51 60
SEMICOLON            : 9 10 22
TIMES                : 40
TRUE                 : 54
TYPE                 : 33
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arg_list             : 60 62
assignment           : 5 12
base_type            : 25 26
declaration          : 4 11
empty                : 23 63
expression           : 17 18 18 19 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 50 51 58 58 59 61 62
field                : 34 35
field_list           : 33 35
function_def         : 6
global_statement     : 2 3
global_statement_list : 1 3
id_list              : 16 17 32
instance             : 8 14
param                : 21 22
param_list           : 20 22
program              : 0
return_stmt          : 13
statement            : 9 10
statement_list       : 10 20
type                 : 16 17 20 24 36
type_def             : 7 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . global_statement_list
    (2) global_statement_list -> . global_statement
    (3) global_statement_list -> . global_statement_list global_statement
    (4) global_statement -> . declaration
    (5) global_statement -> . assignment
    (6) global_statement -> . function_def
    (7) global_statement -> . type_def
    (8) global_statement -> . instance
    (16) declaration -> . type id_list
    (17) declaration -> . type id_list ASSIGN expression
    (18) assignment -> . expression ASSIGN expression
    (20) function_def -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (33) type_def -> . TYPE ID COLON LBRACE field_list RBRACE
    (37) instance -> . ID ID
    (25) type -> . base_type
    (26) type -> . base_type LBRACKET NUMBER RBRACKET
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN
    (27) base_type -> . INT
    (28) base_type -> . FLOAT
    (29) base_type -> . CHAR
    (30) base_type -> . BOOL

    DEF             shift and go to state 11
    TYPE            shift and go to state 14
    ID              shift and go to state 12
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    program                        shift and go to state 1
    global_statement_list          shift and go to state 2
    global_statement               shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    function_def                   shift and go to state 6
    type_def                       shift and go to state 7
    instance                       shift and go to state 8
    type                           shift and go to state 9
    expression                     shift and go to state 10
    base_type                      shift and go to state 15

state 1

    (0) S' -> program .



state 2

    (1) program -> global_statement_list .
    (3) global_statement_list -> global_statement_list . global_statement
    (4) global_statement -> . declaration
    (5) global_statement -> . assignment
    (6) global_statement -> . function_def
    (7) global_statement -> . type_def
    (8) global_statement -> . instance
    (16) declaration -> . type id_list
    (17) declaration -> . type id_list ASSIGN expression
    (18) assignment -> . expression ASSIGN expression
    (20) function_def -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (33) type_def -> . TYPE ID COLON LBRACE field_list RBRACE
    (37) instance -> . ID ID
    (25) type -> . base_type
    (26) type -> . base_type LBRACKET NUMBER RBRACKET
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN
    (27) base_type -> . INT
    (28) base_type -> . FLOAT
    (29) base_type -> . CHAR
    (30) base_type -> . BOOL

    $end            reduce using rule 1 (program -> global_statement_list .)
    DEF             shift and go to state 11
    TYPE            shift and go to state 14
    ID              shift and go to state 12
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    global_statement               shift and go to state 27
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    function_def                   shift and go to state 6
    type_def                       shift and go to state 7
    instance                       shift and go to state 8
    type                           shift and go to state 9
    expression                     shift and go to state 10
    base_type                      shift and go to state 15

state 3

    (2) global_statement_list -> global_statement .

    DEF             reduce using rule 2 (global_statement_list -> global_statement .)
    TYPE            reduce using rule 2 (global_statement_list -> global_statement .)
    ID              reduce using rule 2 (global_statement_list -> global_statement .)
    MINUS           reduce using rule 2 (global_statement_list -> global_statement .)
    NOT             reduce using rule 2 (global_statement_list -> global_statement .)
    LPAREN          reduce using rule 2 (global_statement_list -> global_statement .)
    NUMBER          reduce using rule 2 (global_statement_list -> global_statement .)
    FLOAT_NUMBER    reduce using rule 2 (global_statement_list -> global_statement .)
    TRUE            reduce using rule 2 (global_statement_list -> global_statement .)
    FALSE           reduce using rule 2 (global_statement_list -> global_statement .)
    CHARACTER       reduce using rule 2 (global_statement_list -> global_statement .)
    INT             reduce using rule 2 (global_statement_list -> global_statement .)
    FLOAT           reduce using rule 2 (global_statement_list -> global_statement .)
    CHAR            reduce using rule 2 (global_statement_list -> global_statement .)
    BOOL            reduce using rule 2 (global_statement_list -> global_statement .)
    $end            reduce using rule 2 (global_statement_list -> global_statement .)


state 4

    (4) global_statement -> declaration .

    DEF             reduce using rule 4 (global_statement -> declaration .)
    TYPE            reduce using rule 4 (global_statement -> declaration .)
    ID              reduce using rule 4 (global_statement -> declaration .)
    MINUS           reduce using rule 4 (global_statement -> declaration .)
    NOT             reduce using rule 4 (global_statement -> declaration .)
    LPAREN          reduce using rule 4 (global_statement -> declaration .)
    NUMBER          reduce using rule 4 (global_statement -> declaration .)
    FLOAT_NUMBER    reduce using rule 4 (global_statement -> declaration .)
    TRUE            reduce using rule 4 (global_statement -> declaration .)
    FALSE           reduce using rule 4 (global_statement -> declaration .)
    CHARACTER       reduce using rule 4 (global_statement -> declaration .)
    INT             reduce using rule 4 (global_statement -> declaration .)
    FLOAT           reduce using rule 4 (global_statement -> declaration .)
    CHAR            reduce using rule 4 (global_statement -> declaration .)
    BOOL            reduce using rule 4 (global_statement -> declaration .)
    $end            reduce using rule 4 (global_statement -> declaration .)


state 5

    (5) global_statement -> assignment .

    DEF             reduce using rule 5 (global_statement -> assignment .)
    TYPE            reduce using rule 5 (global_statement -> assignment .)
    ID              reduce using rule 5 (global_statement -> assignment .)
    MINUS           reduce using rule 5 (global_statement -> assignment .)
    NOT             reduce using rule 5 (global_statement -> assignment .)
    LPAREN          reduce using rule 5 (global_statement -> assignment .)
    NUMBER          reduce using rule 5 (global_statement -> assignment .)
    FLOAT_NUMBER    reduce using rule 5 (global_statement -> assignment .)
    TRUE            reduce using rule 5 (global_statement -> assignment .)
    FALSE           reduce using rule 5 (global_statement -> assignment .)
    CHARACTER       reduce using rule 5 (global_statement -> assignment .)
    INT             reduce using rule 5 (global_statement -> assignment .)
    FLOAT           reduce using rule 5 (global_statement -> assignment .)
    CHAR            reduce using rule 5 (global_statement -> assignment .)
    BOOL            reduce using rule 5 (global_statement -> assignment .)
    $end            reduce using rule 5 (global_statement -> assignment .)


state 6

    (6) global_statement -> function_def .

    DEF             reduce using rule 6 (global_statement -> function_def .)
    TYPE            reduce using rule 6 (global_statement -> function_def .)
    ID              reduce using rule 6 (global_statement -> function_def .)
    MINUS           reduce using rule 6 (global_statement -> function_def .)
    NOT             reduce using rule 6 (global_statement -> function_def .)
    LPAREN          reduce using rule 6 (global_statement -> function_def .)
    NUMBER          reduce using rule 6 (global_statement -> function_def .)
    FLOAT_NUMBER    reduce using rule 6 (global_statement -> function_def .)
    TRUE            reduce using rule 6 (global_statement -> function_def .)
    FALSE           reduce using rule 6 (global_statement -> function_def .)
    CHARACTER       reduce using rule 6 (global_statement -> function_def .)
    INT             reduce using rule 6 (global_statement -> function_def .)
    FLOAT           reduce using rule 6 (global_statement -> function_def .)
    CHAR            reduce using rule 6 (global_statement -> function_def .)
    BOOL            reduce using rule 6 (global_statement -> function_def .)
    $end            reduce using rule 6 (global_statement -> function_def .)


state 7

    (7) global_statement -> type_def .

    DEF             reduce using rule 7 (global_statement -> type_def .)
    TYPE            reduce using rule 7 (global_statement -> type_def .)
    ID              reduce using rule 7 (global_statement -> type_def .)
    MINUS           reduce using rule 7 (global_statement -> type_def .)
    NOT             reduce using rule 7 (global_statement -> type_def .)
    LPAREN          reduce using rule 7 (global_statement -> type_def .)
    NUMBER          reduce using rule 7 (global_statement -> type_def .)
    FLOAT_NUMBER    reduce using rule 7 (global_statement -> type_def .)
    TRUE            reduce using rule 7 (global_statement -> type_def .)
    FALSE           reduce using rule 7 (global_statement -> type_def .)
    CHARACTER       reduce using rule 7 (global_statement -> type_def .)
    INT             reduce using rule 7 (global_statement -> type_def .)
    FLOAT           reduce using rule 7 (global_statement -> type_def .)
    CHAR            reduce using rule 7 (global_statement -> type_def .)
    BOOL            reduce using rule 7 (global_statement -> type_def .)
    $end            reduce using rule 7 (global_statement -> type_def .)


state 8

    (8) global_statement -> instance .

    DEF             reduce using rule 8 (global_statement -> instance .)
    TYPE            reduce using rule 8 (global_statement -> instance .)
    ID              reduce using rule 8 (global_statement -> instance .)
    MINUS           reduce using rule 8 (global_statement -> instance .)
    NOT             reduce using rule 8 (global_statement -> instance .)
    LPAREN          reduce using rule 8 (global_statement -> instance .)
    NUMBER          reduce using rule 8 (global_statement -> instance .)
    FLOAT_NUMBER    reduce using rule 8 (global_statement -> instance .)
    TRUE            reduce using rule 8 (global_statement -> instance .)
    FALSE           reduce using rule 8 (global_statement -> instance .)
    CHARACTER       reduce using rule 8 (global_statement -> instance .)
    INT             reduce using rule 8 (global_statement -> instance .)
    FLOAT           reduce using rule 8 (global_statement -> instance .)
    CHAR            reduce using rule 8 (global_statement -> instance .)
    BOOL            reduce using rule 8 (global_statement -> instance .)
    $end            reduce using rule 8 (global_statement -> instance .)


state 9

    (16) declaration -> type . id_list
    (17) declaration -> type . id_list ASSIGN expression
    (31) id_list -> . ID
    (32) id_list -> . id_list COMMA ID

    ID              shift and go to state 29

    id_list                        shift and go to state 28

state 10

    (18) assignment -> expression . ASSIGN expression
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          shift and go to state 30
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    LBRACKET        shift and go to state 42
    DOT             shift and go to state 43


state 11

    (20) function_def -> DEF . type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (25) type -> . base_type
    (26) type -> . base_type LBRACKET NUMBER RBRACKET
    (27) base_type -> . INT
    (28) base_type -> . FLOAT
    (29) base_type -> . CHAR
    (30) base_type -> . BOOL

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    type                           shift and go to state 44
    base_type                      shift and go to state 15

state 12

    (37) instance -> ID . ID
    (57) expression -> ID .
    (60) expression -> ID . LPAREN arg_list RPAREN

    ID              shift and go to state 45
    ASSIGN          reduce using rule 57 (expression -> ID .)
    PLUS            reduce using rule 57 (expression -> ID .)
    MINUS           reduce using rule 57 (expression -> ID .)
    TIMES           reduce using rule 57 (expression -> ID .)
    DIVIDE          reduce using rule 57 (expression -> ID .)
    EQ              reduce using rule 57 (expression -> ID .)
    GT              reduce using rule 57 (expression -> ID .)
    GE              reduce using rule 57 (expression -> ID .)
    LT              reduce using rule 57 (expression -> ID .)
    LE              reduce using rule 57 (expression -> ID .)
    AND             reduce using rule 57 (expression -> ID .)
    OR              reduce using rule 57 (expression -> ID .)
    LBRACKET        reduce using rule 57 (expression -> ID .)
    DOT             reduce using rule 57 (expression -> ID .)
    LPAREN          shift and go to state 46


state 13

    (51) expression -> LPAREN . expression RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 47

state 14

    (33) type_def -> TYPE . ID COLON LBRACE field_list RBRACE

    ID              shift and go to state 49


state 15

    (25) type -> base_type .
    (26) type -> base_type . LBRACKET NUMBER RBRACKET

    ID              reduce using rule 25 (type -> base_type .)
    LBRACKET        shift and go to state 50


state 16

    (52) expression -> NUMBER .

    ASSIGN          reduce using rule 52 (expression -> NUMBER .)
    PLUS            reduce using rule 52 (expression -> NUMBER .)
    MINUS           reduce using rule 52 (expression -> NUMBER .)
    TIMES           reduce using rule 52 (expression -> NUMBER .)
    DIVIDE          reduce using rule 52 (expression -> NUMBER .)
    EQ              reduce using rule 52 (expression -> NUMBER .)
    GT              reduce using rule 52 (expression -> NUMBER .)
    GE              reduce using rule 52 (expression -> NUMBER .)
    LT              reduce using rule 52 (expression -> NUMBER .)
    LE              reduce using rule 52 (expression -> NUMBER .)
    AND             reduce using rule 52 (expression -> NUMBER .)
    OR              reduce using rule 52 (expression -> NUMBER .)
    LBRACKET        reduce using rule 52 (expression -> NUMBER .)
    DOT             reduce using rule 52 (expression -> NUMBER .)
    RPAREN          reduce using rule 52 (expression -> NUMBER .)
    DEF             reduce using rule 52 (expression -> NUMBER .)
    TYPE            reduce using rule 52 (expression -> NUMBER .)
    ID              reduce using rule 52 (expression -> NUMBER .)
    NOT             reduce using rule 52 (expression -> NUMBER .)
    LPAREN          reduce using rule 52 (expression -> NUMBER .)
    NUMBER          reduce using rule 52 (expression -> NUMBER .)
    FLOAT_NUMBER    reduce using rule 52 (expression -> NUMBER .)
    TRUE            reduce using rule 52 (expression -> NUMBER .)
    FALSE           reduce using rule 52 (expression -> NUMBER .)
    CHARACTER       reduce using rule 52 (expression -> NUMBER .)
    INT             reduce using rule 52 (expression -> NUMBER .)
    FLOAT           reduce using rule 52 (expression -> NUMBER .)
    CHAR            reduce using rule 52 (expression -> NUMBER .)
    BOOL            reduce using rule 52 (expression -> NUMBER .)
    $end            reduce using rule 52 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 52 (expression -> NUMBER .)
    RBRACKET        reduce using rule 52 (expression -> NUMBER .)
    COMMA           reduce using rule 52 (expression -> NUMBER .)


state 17

    (49) expression -> MINUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 51

state 18

    (50) expression -> NOT . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 52

state 19

    (53) expression -> FLOAT_NUMBER .

    ASSIGN          reduce using rule 53 (expression -> FLOAT_NUMBER .)
    PLUS            reduce using rule 53 (expression -> FLOAT_NUMBER .)
    MINUS           reduce using rule 53 (expression -> FLOAT_NUMBER .)
    TIMES           reduce using rule 53 (expression -> FLOAT_NUMBER .)
    DIVIDE          reduce using rule 53 (expression -> FLOAT_NUMBER .)
    EQ              reduce using rule 53 (expression -> FLOAT_NUMBER .)
    GT              reduce using rule 53 (expression -> FLOAT_NUMBER .)
    GE              reduce using rule 53 (expression -> FLOAT_NUMBER .)
    LT              reduce using rule 53 (expression -> FLOAT_NUMBER .)
    LE              reduce using rule 53 (expression -> FLOAT_NUMBER .)
    AND             reduce using rule 53 (expression -> FLOAT_NUMBER .)
    OR              reduce using rule 53 (expression -> FLOAT_NUMBER .)
    LBRACKET        reduce using rule 53 (expression -> FLOAT_NUMBER .)
    DOT             reduce using rule 53 (expression -> FLOAT_NUMBER .)
    RPAREN          reduce using rule 53 (expression -> FLOAT_NUMBER .)
    DEF             reduce using rule 53 (expression -> FLOAT_NUMBER .)
    TYPE            reduce using rule 53 (expression -> FLOAT_NUMBER .)
    ID              reduce using rule 53 (expression -> FLOAT_NUMBER .)
    NOT             reduce using rule 53 (expression -> FLOAT_NUMBER .)
    LPAREN          reduce using rule 53 (expression -> FLOAT_NUMBER .)
    NUMBER          reduce using rule 53 (expression -> FLOAT_NUMBER .)
    FLOAT_NUMBER    reduce using rule 53 (expression -> FLOAT_NUMBER .)
    TRUE            reduce using rule 53 (expression -> FLOAT_NUMBER .)
    FALSE           reduce using rule 53 (expression -> FLOAT_NUMBER .)
    CHARACTER       reduce using rule 53 (expression -> FLOAT_NUMBER .)
    INT             reduce using rule 53 (expression -> FLOAT_NUMBER .)
    FLOAT           reduce using rule 53 (expression -> FLOAT_NUMBER .)
    CHAR            reduce using rule 53 (expression -> FLOAT_NUMBER .)
    BOOL            reduce using rule 53 (expression -> FLOAT_NUMBER .)
    $end            reduce using rule 53 (expression -> FLOAT_NUMBER .)
    SEMICOLON       reduce using rule 53 (expression -> FLOAT_NUMBER .)
    RBRACKET        reduce using rule 53 (expression -> FLOAT_NUMBER .)
    COMMA           reduce using rule 53 (expression -> FLOAT_NUMBER .)


state 20

    (54) expression -> TRUE .

    ASSIGN          reduce using rule 54 (expression -> TRUE .)
    PLUS            reduce using rule 54 (expression -> TRUE .)
    MINUS           reduce using rule 54 (expression -> TRUE .)
    TIMES           reduce using rule 54 (expression -> TRUE .)
    DIVIDE          reduce using rule 54 (expression -> TRUE .)
    EQ              reduce using rule 54 (expression -> TRUE .)
    GT              reduce using rule 54 (expression -> TRUE .)
    GE              reduce using rule 54 (expression -> TRUE .)
    LT              reduce using rule 54 (expression -> TRUE .)
    LE              reduce using rule 54 (expression -> TRUE .)
    AND             reduce using rule 54 (expression -> TRUE .)
    OR              reduce using rule 54 (expression -> TRUE .)
    LBRACKET        reduce using rule 54 (expression -> TRUE .)
    DOT             reduce using rule 54 (expression -> TRUE .)
    RPAREN          reduce using rule 54 (expression -> TRUE .)
    DEF             reduce using rule 54 (expression -> TRUE .)
    TYPE            reduce using rule 54 (expression -> TRUE .)
    ID              reduce using rule 54 (expression -> TRUE .)
    NOT             reduce using rule 54 (expression -> TRUE .)
    LPAREN          reduce using rule 54 (expression -> TRUE .)
    NUMBER          reduce using rule 54 (expression -> TRUE .)
    FLOAT_NUMBER    reduce using rule 54 (expression -> TRUE .)
    TRUE            reduce using rule 54 (expression -> TRUE .)
    FALSE           reduce using rule 54 (expression -> TRUE .)
    CHARACTER       reduce using rule 54 (expression -> TRUE .)
    INT             reduce using rule 54 (expression -> TRUE .)
    FLOAT           reduce using rule 54 (expression -> TRUE .)
    CHAR            reduce using rule 54 (expression -> TRUE .)
    BOOL            reduce using rule 54 (expression -> TRUE .)
    $end            reduce using rule 54 (expression -> TRUE .)
    SEMICOLON       reduce using rule 54 (expression -> TRUE .)
    RBRACKET        reduce using rule 54 (expression -> TRUE .)
    COMMA           reduce using rule 54 (expression -> TRUE .)


state 21

    (55) expression -> FALSE .

    ASSIGN          reduce using rule 55 (expression -> FALSE .)
    PLUS            reduce using rule 55 (expression -> FALSE .)
    MINUS           reduce using rule 55 (expression -> FALSE .)
    TIMES           reduce using rule 55 (expression -> FALSE .)
    DIVIDE          reduce using rule 55 (expression -> FALSE .)
    EQ              reduce using rule 55 (expression -> FALSE .)
    GT              reduce using rule 55 (expression -> FALSE .)
    GE              reduce using rule 55 (expression -> FALSE .)
    LT              reduce using rule 55 (expression -> FALSE .)
    LE              reduce using rule 55 (expression -> FALSE .)
    AND             reduce using rule 55 (expression -> FALSE .)
    OR              reduce using rule 55 (expression -> FALSE .)
    LBRACKET        reduce using rule 55 (expression -> FALSE .)
    DOT             reduce using rule 55 (expression -> FALSE .)
    RPAREN          reduce using rule 55 (expression -> FALSE .)
    DEF             reduce using rule 55 (expression -> FALSE .)
    TYPE            reduce using rule 55 (expression -> FALSE .)
    ID              reduce using rule 55 (expression -> FALSE .)
    NOT             reduce using rule 55 (expression -> FALSE .)
    LPAREN          reduce using rule 55 (expression -> FALSE .)
    NUMBER          reduce using rule 55 (expression -> FALSE .)
    FLOAT_NUMBER    reduce using rule 55 (expression -> FALSE .)
    TRUE            reduce using rule 55 (expression -> FALSE .)
    FALSE           reduce using rule 55 (expression -> FALSE .)
    CHARACTER       reduce using rule 55 (expression -> FALSE .)
    INT             reduce using rule 55 (expression -> FALSE .)
    FLOAT           reduce using rule 55 (expression -> FALSE .)
    CHAR            reduce using rule 55 (expression -> FALSE .)
    BOOL            reduce using rule 55 (expression -> FALSE .)
    $end            reduce using rule 55 (expression -> FALSE .)
    SEMICOLON       reduce using rule 55 (expression -> FALSE .)
    RBRACKET        reduce using rule 55 (expression -> FALSE .)
    COMMA           reduce using rule 55 (expression -> FALSE .)


state 22

    (56) expression -> CHARACTER .

    ASSIGN          reduce using rule 56 (expression -> CHARACTER .)
    PLUS            reduce using rule 56 (expression -> CHARACTER .)
    MINUS           reduce using rule 56 (expression -> CHARACTER .)
    TIMES           reduce using rule 56 (expression -> CHARACTER .)
    DIVIDE          reduce using rule 56 (expression -> CHARACTER .)
    EQ              reduce using rule 56 (expression -> CHARACTER .)
    GT              reduce using rule 56 (expression -> CHARACTER .)
    GE              reduce using rule 56 (expression -> CHARACTER .)
    LT              reduce using rule 56 (expression -> CHARACTER .)
    LE              reduce using rule 56 (expression -> CHARACTER .)
    AND             reduce using rule 56 (expression -> CHARACTER .)
    OR              reduce using rule 56 (expression -> CHARACTER .)
    LBRACKET        reduce using rule 56 (expression -> CHARACTER .)
    DOT             reduce using rule 56 (expression -> CHARACTER .)
    RPAREN          reduce using rule 56 (expression -> CHARACTER .)
    DEF             reduce using rule 56 (expression -> CHARACTER .)
    TYPE            reduce using rule 56 (expression -> CHARACTER .)
    ID              reduce using rule 56 (expression -> CHARACTER .)
    NOT             reduce using rule 56 (expression -> CHARACTER .)
    LPAREN          reduce using rule 56 (expression -> CHARACTER .)
    NUMBER          reduce using rule 56 (expression -> CHARACTER .)
    FLOAT_NUMBER    reduce using rule 56 (expression -> CHARACTER .)
    TRUE            reduce using rule 56 (expression -> CHARACTER .)
    FALSE           reduce using rule 56 (expression -> CHARACTER .)
    CHARACTER       reduce using rule 56 (expression -> CHARACTER .)
    INT             reduce using rule 56 (expression -> CHARACTER .)
    FLOAT           reduce using rule 56 (expression -> CHARACTER .)
    CHAR            reduce using rule 56 (expression -> CHARACTER .)
    BOOL            reduce using rule 56 (expression -> CHARACTER .)
    $end            reduce using rule 56 (expression -> CHARACTER .)
    SEMICOLON       reduce using rule 56 (expression -> CHARACTER .)
    RBRACKET        reduce using rule 56 (expression -> CHARACTER .)
    COMMA           reduce using rule 56 (expression -> CHARACTER .)


state 23

    (27) base_type -> INT .

    LBRACKET        reduce using rule 27 (base_type -> INT .)
    ID              reduce using rule 27 (base_type -> INT .)


state 24

    (28) base_type -> FLOAT .

    LBRACKET        reduce using rule 28 (base_type -> FLOAT .)
    ID              reduce using rule 28 (base_type -> FLOAT .)


state 25

    (29) base_type -> CHAR .

    LBRACKET        reduce using rule 29 (base_type -> CHAR .)
    ID              reduce using rule 29 (base_type -> CHAR .)


state 26

    (30) base_type -> BOOL .

    LBRACKET        reduce using rule 30 (base_type -> BOOL .)
    ID              reduce using rule 30 (base_type -> BOOL .)


state 27

    (3) global_statement_list -> global_statement_list global_statement .

    DEF             reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    TYPE            reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    ID              reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    MINUS           reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    NOT             reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    LPAREN          reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    NUMBER          reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    FLOAT_NUMBER    reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    TRUE            reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    FALSE           reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    CHARACTER       reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    INT             reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    FLOAT           reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    CHAR            reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    BOOL            reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)
    $end            reduce using rule 3 (global_statement_list -> global_statement_list global_statement .)


state 28

    (16) declaration -> type id_list .
    (17) declaration -> type id_list . ASSIGN expression
    (32) id_list -> id_list . COMMA ID

    DEF             reduce using rule 16 (declaration -> type id_list .)
    TYPE            reduce using rule 16 (declaration -> type id_list .)
    ID              reduce using rule 16 (declaration -> type id_list .)
    MINUS           reduce using rule 16 (declaration -> type id_list .)
    NOT             reduce using rule 16 (declaration -> type id_list .)
    LPAREN          reduce using rule 16 (declaration -> type id_list .)
    NUMBER          reduce using rule 16 (declaration -> type id_list .)
    FLOAT_NUMBER    reduce using rule 16 (declaration -> type id_list .)
    TRUE            reduce using rule 16 (declaration -> type id_list .)
    FALSE           reduce using rule 16 (declaration -> type id_list .)
    CHARACTER       reduce using rule 16 (declaration -> type id_list .)
    INT             reduce using rule 16 (declaration -> type id_list .)
    FLOAT           reduce using rule 16 (declaration -> type id_list .)
    CHAR            reduce using rule 16 (declaration -> type id_list .)
    BOOL            reduce using rule 16 (declaration -> type id_list .)
    $end            reduce using rule 16 (declaration -> type id_list .)
    SEMICOLON       reduce using rule 16 (declaration -> type id_list .)
    ASSIGN          shift and go to state 53
    COMMA           shift and go to state 54


state 29

    (31) id_list -> ID .

    ASSIGN          reduce using rule 31 (id_list -> ID .)
    COMMA           reduce using rule 31 (id_list -> ID .)
    DEF             reduce using rule 31 (id_list -> ID .)
    TYPE            reduce using rule 31 (id_list -> ID .)
    ID              reduce using rule 31 (id_list -> ID .)
    MINUS           reduce using rule 31 (id_list -> ID .)
    NOT             reduce using rule 31 (id_list -> ID .)
    LPAREN          reduce using rule 31 (id_list -> ID .)
    NUMBER          reduce using rule 31 (id_list -> ID .)
    FLOAT_NUMBER    reduce using rule 31 (id_list -> ID .)
    TRUE            reduce using rule 31 (id_list -> ID .)
    FALSE           reduce using rule 31 (id_list -> ID .)
    CHARACTER       reduce using rule 31 (id_list -> ID .)
    INT             reduce using rule 31 (id_list -> ID .)
    FLOAT           reduce using rule 31 (id_list -> ID .)
    CHAR            reduce using rule 31 (id_list -> ID .)
    BOOL            reduce using rule 31 (id_list -> ID .)
    $end            reduce using rule 31 (id_list -> ID .)
    SEMICOLON       reduce using rule 31 (id_list -> ID .)


state 30

    (18) assignment -> expression ASSIGN . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 55

state 31

    (38) expression -> expression PLUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 56

state 32

    (39) expression -> expression MINUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 57

state 33

    (40) expression -> expression TIMES . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 58

state 34

    (41) expression -> expression DIVIDE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 59

state 35

    (42) expression -> expression EQ . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 60

state 36

    (43) expression -> expression GT . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 61

state 37

    (44) expression -> expression GE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 62

state 38

    (45) expression -> expression LT . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 63

state 39

    (46) expression -> expression LE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 64

state 40

    (47) expression -> expression AND . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 65

state 41

    (48) expression -> expression OR . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 66

state 42

    (58) expression -> expression LBRACKET . expression RBRACKET
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 67

state 43

    (59) expression -> expression DOT . ID

    ID              shift and go to state 68


state 44

    (20) function_def -> DEF type . ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE

    ID              shift and go to state 69


state 45

    (37) instance -> ID ID .

    DEF             reduce using rule 37 (instance -> ID ID .)
    TYPE            reduce using rule 37 (instance -> ID ID .)
    ID              reduce using rule 37 (instance -> ID ID .)
    MINUS           reduce using rule 37 (instance -> ID ID .)
    NOT             reduce using rule 37 (instance -> ID ID .)
    LPAREN          reduce using rule 37 (instance -> ID ID .)
    NUMBER          reduce using rule 37 (instance -> ID ID .)
    FLOAT_NUMBER    reduce using rule 37 (instance -> ID ID .)
    TRUE            reduce using rule 37 (instance -> ID ID .)
    FALSE           reduce using rule 37 (instance -> ID ID .)
    CHARACTER       reduce using rule 37 (instance -> ID ID .)
    INT             reduce using rule 37 (instance -> ID ID .)
    FLOAT           reduce using rule 37 (instance -> ID ID .)
    CHAR            reduce using rule 37 (instance -> ID ID .)
    BOOL            reduce using rule 37 (instance -> ID ID .)
    $end            reduce using rule 37 (instance -> ID ID .)
    SEMICOLON       reduce using rule 37 (instance -> ID ID .)


state 46

    (60) expression -> ID LPAREN . arg_list RPAREN
    (61) arg_list -> . expression
    (62) arg_list -> . arg_list COMMA expression
    (63) arg_list -> . empty
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN
    (64) empty -> .

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48
    RPAREN          reduce using rule 64 (empty -> .)
    COMMA           reduce using rule 64 (empty -> .)

    arg_list                       shift and go to state 70
    expression                     shift and go to state 71
    empty                          shift and go to state 72

state 47

    (51) expression -> LPAREN expression . RPAREN
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    RPAREN          shift and go to state 73
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    LBRACKET        shift and go to state 42
    DOT             shift and go to state 43


state 48

    (57) expression -> ID .
    (60) expression -> ID . LPAREN arg_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 57 (expression -> ID .)
    PLUS            reduce using rule 57 (expression -> ID .)
    MINUS           reduce using rule 57 (expression -> ID .)
    TIMES           reduce using rule 57 (expression -> ID .)
    DIVIDE          reduce using rule 57 (expression -> ID .)
    EQ              reduce using rule 57 (expression -> ID .)
    GT              reduce using rule 57 (expression -> ID .)
    GE              reduce using rule 57 (expression -> ID .)
    LT              reduce using rule 57 (expression -> ID .)
    LE              reduce using rule 57 (expression -> ID .)
    AND             reduce using rule 57 (expression -> ID .)
    OR              reduce using rule 57 (expression -> ID .)
    LBRACKET        reduce using rule 57 (expression -> ID .)
    DOT             reduce using rule 57 (expression -> ID .)
    ASSIGN          reduce using rule 57 (expression -> ID .)
    DEF             reduce using rule 57 (expression -> ID .)
    TYPE            reduce using rule 57 (expression -> ID .)
    ID              reduce using rule 57 (expression -> ID .)
    NOT             reduce using rule 57 (expression -> ID .)
    NUMBER          reduce using rule 57 (expression -> ID .)
    FLOAT_NUMBER    reduce using rule 57 (expression -> ID .)
    TRUE            reduce using rule 57 (expression -> ID .)
    FALSE           reduce using rule 57 (expression -> ID .)
    CHARACTER       reduce using rule 57 (expression -> ID .)
    INT             reduce using rule 57 (expression -> ID .)
    FLOAT           reduce using rule 57 (expression -> ID .)
    CHAR            reduce using rule 57 (expression -> ID .)
    BOOL            reduce using rule 57 (expression -> ID .)
    $end            reduce using rule 57 (expression -> ID .)
    SEMICOLON       reduce using rule 57 (expression -> ID .)
    RBRACKET        reduce using rule 57 (expression -> ID .)
    COMMA           reduce using rule 57 (expression -> ID .)
    LPAREN          shift and go to state 46

  ! LPAREN          [ reduce using rule 57 (expression -> ID .) ]


state 49

    (33) type_def -> TYPE ID . COLON LBRACE field_list RBRACE

    COLON           shift and go to state 74


state 50

    (26) type -> base_type LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 75


state 51

    (49) expression -> MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 49 (expression -> MINUS expression .)
    PLUS            reduce using rule 49 (expression -> MINUS expression .)
    MINUS           reduce using rule 49 (expression -> MINUS expression .)
    TIMES           reduce using rule 49 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 49 (expression -> MINUS expression .)
    EQ              reduce using rule 49 (expression -> MINUS expression .)
    GT              reduce using rule 49 (expression -> MINUS expression .)
    GE              reduce using rule 49 (expression -> MINUS expression .)
    LT              reduce using rule 49 (expression -> MINUS expression .)
    LE              reduce using rule 49 (expression -> MINUS expression .)
    AND             reduce using rule 49 (expression -> MINUS expression .)
    OR              reduce using rule 49 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 49 (expression -> MINUS expression .)
    DOT             reduce using rule 49 (expression -> MINUS expression .)
    RPAREN          reduce using rule 49 (expression -> MINUS expression .)
    DEF             reduce using rule 49 (expression -> MINUS expression .)
    TYPE            reduce using rule 49 (expression -> MINUS expression .)
    ID              reduce using rule 49 (expression -> MINUS expression .)
    NOT             reduce using rule 49 (expression -> MINUS expression .)
    LPAREN          reduce using rule 49 (expression -> MINUS expression .)
    NUMBER          reduce using rule 49 (expression -> MINUS expression .)
    FLOAT_NUMBER    reduce using rule 49 (expression -> MINUS expression .)
    TRUE            reduce using rule 49 (expression -> MINUS expression .)
    FALSE           reduce using rule 49 (expression -> MINUS expression .)
    CHARACTER       reduce using rule 49 (expression -> MINUS expression .)
    INT             reduce using rule 49 (expression -> MINUS expression .)
    FLOAT           reduce using rule 49 (expression -> MINUS expression .)
    CHAR            reduce using rule 49 (expression -> MINUS expression .)
    BOOL            reduce using rule 49 (expression -> MINUS expression .)
    $end            reduce using rule 49 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 49 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 49 (expression -> MINUS expression .)
    COMMA           reduce using rule 49 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 52

    (50) expression -> NOT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 50 (expression -> NOT expression .)
    AND             reduce using rule 50 (expression -> NOT expression .)
    OR              reduce using rule 50 (expression -> NOT expression .)
    LBRACKET        reduce using rule 50 (expression -> NOT expression .)
    DOT             reduce using rule 50 (expression -> NOT expression .)
    RPAREN          reduce using rule 50 (expression -> NOT expression .)
    DEF             reduce using rule 50 (expression -> NOT expression .)
    TYPE            reduce using rule 50 (expression -> NOT expression .)
    ID              reduce using rule 50 (expression -> NOT expression .)
    NOT             reduce using rule 50 (expression -> NOT expression .)
    LPAREN          reduce using rule 50 (expression -> NOT expression .)
    NUMBER          reduce using rule 50 (expression -> NOT expression .)
    FLOAT_NUMBER    reduce using rule 50 (expression -> NOT expression .)
    TRUE            reduce using rule 50 (expression -> NOT expression .)
    FALSE           reduce using rule 50 (expression -> NOT expression .)
    CHARACTER       reduce using rule 50 (expression -> NOT expression .)
    INT             reduce using rule 50 (expression -> NOT expression .)
    FLOAT           reduce using rule 50 (expression -> NOT expression .)
    CHAR            reduce using rule 50 (expression -> NOT expression .)
    BOOL            reduce using rule 50 (expression -> NOT expression .)
    $end            reduce using rule 50 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 50 (expression -> NOT expression .)
    RBRACKET        reduce using rule 50 (expression -> NOT expression .)
    COMMA           reduce using rule 50 (expression -> NOT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39

  ! PLUS            [ reduce using rule 50 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 50 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 50 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 50 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 50 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 50 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 53

    (17) declaration -> type id_list ASSIGN . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 76

state 54

    (32) id_list -> id_list COMMA . ID

    ID              shift and go to state 77


state 55

    (18) assignment -> expression ASSIGN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

  ! shift/reduce conflict for MINUS resolved as shift
    DEF             reduce using rule 18 (assignment -> expression ASSIGN expression .)
    TYPE            reduce using rule 18 (assignment -> expression ASSIGN expression .)
    ID              reduce using rule 18 (assignment -> expression ASSIGN expression .)
    NOT             reduce using rule 18 (assignment -> expression ASSIGN expression .)
    LPAREN          reduce using rule 18 (assignment -> expression ASSIGN expression .)
    NUMBER          reduce using rule 18 (assignment -> expression ASSIGN expression .)
    FLOAT_NUMBER    reduce using rule 18 (assignment -> expression ASSIGN expression .)
    TRUE            reduce using rule 18 (assignment -> expression ASSIGN expression .)
    FALSE           reduce using rule 18 (assignment -> expression ASSIGN expression .)
    CHARACTER       reduce using rule 18 (assignment -> expression ASSIGN expression .)
    INT             reduce using rule 18 (assignment -> expression ASSIGN expression .)
    FLOAT           reduce using rule 18 (assignment -> expression ASSIGN expression .)
    CHAR            reduce using rule 18 (assignment -> expression ASSIGN expression .)
    BOOL            reduce using rule 18 (assignment -> expression ASSIGN expression .)
    $end            reduce using rule 18 (assignment -> expression ASSIGN expression .)
    SEMICOLON       reduce using rule 18 (assignment -> expression ASSIGN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    LBRACKET        shift and go to state 42
    DOT             shift and go to state 43

  ! MINUS           [ reduce using rule 18 (assignment -> expression ASSIGN expression .) ]


state 56

    (38) expression -> expression PLUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 38 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 38 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 38 (expression -> expression PLUS expression .)
    EQ              reduce using rule 38 (expression -> expression PLUS expression .)
    GT              reduce using rule 38 (expression -> expression PLUS expression .)
    GE              reduce using rule 38 (expression -> expression PLUS expression .)
    LT              reduce using rule 38 (expression -> expression PLUS expression .)
    LE              reduce using rule 38 (expression -> expression PLUS expression .)
    AND             reduce using rule 38 (expression -> expression PLUS expression .)
    OR              reduce using rule 38 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 38 (expression -> expression PLUS expression .)
    DOT             reduce using rule 38 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 38 (expression -> expression PLUS expression .)
    DEF             reduce using rule 38 (expression -> expression PLUS expression .)
    TYPE            reduce using rule 38 (expression -> expression PLUS expression .)
    ID              reduce using rule 38 (expression -> expression PLUS expression .)
    NOT             reduce using rule 38 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 38 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 38 (expression -> expression PLUS expression .)
    FLOAT_NUMBER    reduce using rule 38 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 38 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 38 (expression -> expression PLUS expression .)
    CHARACTER       reduce using rule 38 (expression -> expression PLUS expression .)
    INT             reduce using rule 38 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 38 (expression -> expression PLUS expression .)
    CHAR            reduce using rule 38 (expression -> expression PLUS expression .)
    BOOL            reduce using rule 38 (expression -> expression PLUS expression .)
    $end            reduce using rule 38 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 38 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 38 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! TIMES           [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 57

    (39) expression -> expression MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 39 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 39 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 39 (expression -> expression MINUS expression .)
    EQ              reduce using rule 39 (expression -> expression MINUS expression .)
    GT              reduce using rule 39 (expression -> expression MINUS expression .)
    GE              reduce using rule 39 (expression -> expression MINUS expression .)
    LT              reduce using rule 39 (expression -> expression MINUS expression .)
    LE              reduce using rule 39 (expression -> expression MINUS expression .)
    AND             reduce using rule 39 (expression -> expression MINUS expression .)
    OR              reduce using rule 39 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 39 (expression -> expression MINUS expression .)
    DOT             reduce using rule 39 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression MINUS expression .)
    DEF             reduce using rule 39 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 39 (expression -> expression MINUS expression .)
    ID              reduce using rule 39 (expression -> expression MINUS expression .)
    NOT             reduce using rule 39 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 39 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 39 (expression -> expression MINUS expression .)
    FLOAT_NUMBER    reduce using rule 39 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 39 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 39 (expression -> expression MINUS expression .)
    CHARACTER       reduce using rule 39 (expression -> expression MINUS expression .)
    INT             reduce using rule 39 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 39 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 39 (expression -> expression MINUS expression .)
    BOOL            reduce using rule 39 (expression -> expression MINUS expression .)
    $end            reduce using rule 39 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 39 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 39 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! TIMES           [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 58

    (40) expression -> expression TIMES expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 40 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 40 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 40 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 40 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 40 (expression -> expression TIMES expression .)
    EQ              reduce using rule 40 (expression -> expression TIMES expression .)
    GT              reduce using rule 40 (expression -> expression TIMES expression .)
    GE              reduce using rule 40 (expression -> expression TIMES expression .)
    LT              reduce using rule 40 (expression -> expression TIMES expression .)
    LE              reduce using rule 40 (expression -> expression TIMES expression .)
    AND             reduce using rule 40 (expression -> expression TIMES expression .)
    OR              reduce using rule 40 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 40 (expression -> expression TIMES expression .)
    DOT             reduce using rule 40 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 40 (expression -> expression TIMES expression .)
    DEF             reduce using rule 40 (expression -> expression TIMES expression .)
    TYPE            reduce using rule 40 (expression -> expression TIMES expression .)
    ID              reduce using rule 40 (expression -> expression TIMES expression .)
    NOT             reduce using rule 40 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 40 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 40 (expression -> expression TIMES expression .)
    FLOAT_NUMBER    reduce using rule 40 (expression -> expression TIMES expression .)
    TRUE            reduce using rule 40 (expression -> expression TIMES expression .)
    FALSE           reduce using rule 40 (expression -> expression TIMES expression .)
    CHARACTER       reduce using rule 40 (expression -> expression TIMES expression .)
    INT             reduce using rule 40 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 40 (expression -> expression TIMES expression .)
    CHAR            reduce using rule 40 (expression -> expression TIMES expression .)
    BOOL            reduce using rule 40 (expression -> expression TIMES expression .)
    $end            reduce using rule 40 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 40 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 40 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 59

    (41) expression -> expression DIVIDE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 41 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 41 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 41 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 41 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 41 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 41 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 41 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 41 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 41 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 41 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 41 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 41 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 41 (expression -> expression DIVIDE expression .)
    DOT             reduce using rule 41 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 41 (expression -> expression DIVIDE expression .)
    DEF             reduce using rule 41 (expression -> expression DIVIDE expression .)
    TYPE            reduce using rule 41 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 41 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 41 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 41 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 41 (expression -> expression DIVIDE expression .)
    FLOAT_NUMBER    reduce using rule 41 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 41 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 41 (expression -> expression DIVIDE expression .)
    CHARACTER       reduce using rule 41 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 41 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 41 (expression -> expression DIVIDE expression .)
    CHAR            reduce using rule 41 (expression -> expression DIVIDE expression .)
    BOOL            reduce using rule 41 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 41 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 41 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 41 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 60

    (42) expression -> expression EQ expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 42 (expression -> expression EQ expression .)
    EQ              reduce using rule 42 (expression -> expression EQ expression .)
    GT              reduce using rule 42 (expression -> expression EQ expression .)
    GE              reduce using rule 42 (expression -> expression EQ expression .)
    LT              reduce using rule 42 (expression -> expression EQ expression .)
    LE              reduce using rule 42 (expression -> expression EQ expression .)
    AND             reduce using rule 42 (expression -> expression EQ expression .)
    OR              reduce using rule 42 (expression -> expression EQ expression .)
    LBRACKET        reduce using rule 42 (expression -> expression EQ expression .)
    DOT             reduce using rule 42 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 42 (expression -> expression EQ expression .)
    DEF             reduce using rule 42 (expression -> expression EQ expression .)
    TYPE            reduce using rule 42 (expression -> expression EQ expression .)
    ID              reduce using rule 42 (expression -> expression EQ expression .)
    NOT             reduce using rule 42 (expression -> expression EQ expression .)
    LPAREN          reduce using rule 42 (expression -> expression EQ expression .)
    NUMBER          reduce using rule 42 (expression -> expression EQ expression .)
    FLOAT_NUMBER    reduce using rule 42 (expression -> expression EQ expression .)
    TRUE            reduce using rule 42 (expression -> expression EQ expression .)
    FALSE           reduce using rule 42 (expression -> expression EQ expression .)
    CHARACTER       reduce using rule 42 (expression -> expression EQ expression .)
    INT             reduce using rule 42 (expression -> expression EQ expression .)
    FLOAT           reduce using rule 42 (expression -> expression EQ expression .)
    CHAR            reduce using rule 42 (expression -> expression EQ expression .)
    BOOL            reduce using rule 42 (expression -> expression EQ expression .)
    $end            reduce using rule 42 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 42 (expression -> expression EQ expression .)
    COMMA           reduce using rule 42 (expression -> expression EQ expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 61

    (43) expression -> expression GT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 43 (expression -> expression GT expression .)
    EQ              reduce using rule 43 (expression -> expression GT expression .)
    GT              reduce using rule 43 (expression -> expression GT expression .)
    GE              reduce using rule 43 (expression -> expression GT expression .)
    LT              reduce using rule 43 (expression -> expression GT expression .)
    LE              reduce using rule 43 (expression -> expression GT expression .)
    AND             reduce using rule 43 (expression -> expression GT expression .)
    OR              reduce using rule 43 (expression -> expression GT expression .)
    LBRACKET        reduce using rule 43 (expression -> expression GT expression .)
    DOT             reduce using rule 43 (expression -> expression GT expression .)
    RPAREN          reduce using rule 43 (expression -> expression GT expression .)
    DEF             reduce using rule 43 (expression -> expression GT expression .)
    TYPE            reduce using rule 43 (expression -> expression GT expression .)
    ID              reduce using rule 43 (expression -> expression GT expression .)
    NOT             reduce using rule 43 (expression -> expression GT expression .)
    LPAREN          reduce using rule 43 (expression -> expression GT expression .)
    NUMBER          reduce using rule 43 (expression -> expression GT expression .)
    FLOAT_NUMBER    reduce using rule 43 (expression -> expression GT expression .)
    TRUE            reduce using rule 43 (expression -> expression GT expression .)
    FALSE           reduce using rule 43 (expression -> expression GT expression .)
    CHARACTER       reduce using rule 43 (expression -> expression GT expression .)
    INT             reduce using rule 43 (expression -> expression GT expression .)
    FLOAT           reduce using rule 43 (expression -> expression GT expression .)
    CHAR            reduce using rule 43 (expression -> expression GT expression .)
    BOOL            reduce using rule 43 (expression -> expression GT expression .)
    $end            reduce using rule 43 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 43 (expression -> expression GT expression .)
    COMMA           reduce using rule 43 (expression -> expression GT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression GT expression .) ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 62

    (44) expression -> expression GE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 44 (expression -> expression GE expression .)
    EQ              reduce using rule 44 (expression -> expression GE expression .)
    GT              reduce using rule 44 (expression -> expression GE expression .)
    GE              reduce using rule 44 (expression -> expression GE expression .)
    LT              reduce using rule 44 (expression -> expression GE expression .)
    LE              reduce using rule 44 (expression -> expression GE expression .)
    AND             reduce using rule 44 (expression -> expression GE expression .)
    OR              reduce using rule 44 (expression -> expression GE expression .)
    LBRACKET        reduce using rule 44 (expression -> expression GE expression .)
    DOT             reduce using rule 44 (expression -> expression GE expression .)
    RPAREN          reduce using rule 44 (expression -> expression GE expression .)
    DEF             reduce using rule 44 (expression -> expression GE expression .)
    TYPE            reduce using rule 44 (expression -> expression GE expression .)
    ID              reduce using rule 44 (expression -> expression GE expression .)
    NOT             reduce using rule 44 (expression -> expression GE expression .)
    LPAREN          reduce using rule 44 (expression -> expression GE expression .)
    NUMBER          reduce using rule 44 (expression -> expression GE expression .)
    FLOAT_NUMBER    reduce using rule 44 (expression -> expression GE expression .)
    TRUE            reduce using rule 44 (expression -> expression GE expression .)
    FALSE           reduce using rule 44 (expression -> expression GE expression .)
    CHARACTER       reduce using rule 44 (expression -> expression GE expression .)
    INT             reduce using rule 44 (expression -> expression GE expression .)
    FLOAT           reduce using rule 44 (expression -> expression GE expression .)
    CHAR            reduce using rule 44 (expression -> expression GE expression .)
    BOOL            reduce using rule 44 (expression -> expression GE expression .)
    $end            reduce using rule 44 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 44 (expression -> expression GE expression .)
    COMMA           reduce using rule 44 (expression -> expression GE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 44 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression GE expression .) ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 63

    (45) expression -> expression LT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 45 (expression -> expression LT expression .)
    EQ              reduce using rule 45 (expression -> expression LT expression .)
    GT              reduce using rule 45 (expression -> expression LT expression .)
    GE              reduce using rule 45 (expression -> expression LT expression .)
    LT              reduce using rule 45 (expression -> expression LT expression .)
    LE              reduce using rule 45 (expression -> expression LT expression .)
    AND             reduce using rule 45 (expression -> expression LT expression .)
    OR              reduce using rule 45 (expression -> expression LT expression .)
    LBRACKET        reduce using rule 45 (expression -> expression LT expression .)
    DOT             reduce using rule 45 (expression -> expression LT expression .)
    RPAREN          reduce using rule 45 (expression -> expression LT expression .)
    DEF             reduce using rule 45 (expression -> expression LT expression .)
    TYPE            reduce using rule 45 (expression -> expression LT expression .)
    ID              reduce using rule 45 (expression -> expression LT expression .)
    NOT             reduce using rule 45 (expression -> expression LT expression .)
    LPAREN          reduce using rule 45 (expression -> expression LT expression .)
    NUMBER          reduce using rule 45 (expression -> expression LT expression .)
    FLOAT_NUMBER    reduce using rule 45 (expression -> expression LT expression .)
    TRUE            reduce using rule 45 (expression -> expression LT expression .)
    FALSE           reduce using rule 45 (expression -> expression LT expression .)
    CHARACTER       reduce using rule 45 (expression -> expression LT expression .)
    INT             reduce using rule 45 (expression -> expression LT expression .)
    FLOAT           reduce using rule 45 (expression -> expression LT expression .)
    CHAR            reduce using rule 45 (expression -> expression LT expression .)
    BOOL            reduce using rule 45 (expression -> expression LT expression .)
    $end            reduce using rule 45 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 45 (expression -> expression LT expression .)
    COMMA           reduce using rule 45 (expression -> expression LT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 45 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression LT expression .) ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 64

    (46) expression -> expression LE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 46 (expression -> expression LE expression .)
    EQ              reduce using rule 46 (expression -> expression LE expression .)
    GT              reduce using rule 46 (expression -> expression LE expression .)
    GE              reduce using rule 46 (expression -> expression LE expression .)
    LT              reduce using rule 46 (expression -> expression LE expression .)
    LE              reduce using rule 46 (expression -> expression LE expression .)
    AND             reduce using rule 46 (expression -> expression LE expression .)
    OR              reduce using rule 46 (expression -> expression LE expression .)
    LBRACKET        reduce using rule 46 (expression -> expression LE expression .)
    DOT             reduce using rule 46 (expression -> expression LE expression .)
    RPAREN          reduce using rule 46 (expression -> expression LE expression .)
    DEF             reduce using rule 46 (expression -> expression LE expression .)
    TYPE            reduce using rule 46 (expression -> expression LE expression .)
    ID              reduce using rule 46 (expression -> expression LE expression .)
    NOT             reduce using rule 46 (expression -> expression LE expression .)
    LPAREN          reduce using rule 46 (expression -> expression LE expression .)
    NUMBER          reduce using rule 46 (expression -> expression LE expression .)
    FLOAT_NUMBER    reduce using rule 46 (expression -> expression LE expression .)
    TRUE            reduce using rule 46 (expression -> expression LE expression .)
    FALSE           reduce using rule 46 (expression -> expression LE expression .)
    CHARACTER       reduce using rule 46 (expression -> expression LE expression .)
    INT             reduce using rule 46 (expression -> expression LE expression .)
    FLOAT           reduce using rule 46 (expression -> expression LE expression .)
    CHAR            reduce using rule 46 (expression -> expression LE expression .)
    BOOL            reduce using rule 46 (expression -> expression LE expression .)
    $end            reduce using rule 46 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 46 (expression -> expression LE expression .)
    COMMA           reduce using rule 46 (expression -> expression LE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression LE expression .) ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 65

    (47) expression -> expression AND expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 47 (expression -> expression AND expression .)
    AND             reduce using rule 47 (expression -> expression AND expression .)
    OR              reduce using rule 47 (expression -> expression AND expression .)
    LBRACKET        reduce using rule 47 (expression -> expression AND expression .)
    DOT             reduce using rule 47 (expression -> expression AND expression .)
    RPAREN          reduce using rule 47 (expression -> expression AND expression .)
    DEF             reduce using rule 47 (expression -> expression AND expression .)
    TYPE            reduce using rule 47 (expression -> expression AND expression .)
    ID              reduce using rule 47 (expression -> expression AND expression .)
    NOT             reduce using rule 47 (expression -> expression AND expression .)
    LPAREN          reduce using rule 47 (expression -> expression AND expression .)
    NUMBER          reduce using rule 47 (expression -> expression AND expression .)
    FLOAT_NUMBER    reduce using rule 47 (expression -> expression AND expression .)
    TRUE            reduce using rule 47 (expression -> expression AND expression .)
    FALSE           reduce using rule 47 (expression -> expression AND expression .)
    CHARACTER       reduce using rule 47 (expression -> expression AND expression .)
    INT             reduce using rule 47 (expression -> expression AND expression .)
    FLOAT           reduce using rule 47 (expression -> expression AND expression .)
    CHAR            reduce using rule 47 (expression -> expression AND expression .)
    BOOL            reduce using rule 47 (expression -> expression AND expression .)
    $end            reduce using rule 47 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 47 (expression -> expression AND expression .)
    COMMA           reduce using rule 47 (expression -> expression AND expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39

  ! PLUS            [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 66

    (48) expression -> expression OR expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    ASSIGN          reduce using rule 48 (expression -> expression OR expression .)
    OR              reduce using rule 48 (expression -> expression OR expression .)
    LBRACKET        reduce using rule 48 (expression -> expression OR expression .)
    DOT             reduce using rule 48 (expression -> expression OR expression .)
    RPAREN          reduce using rule 48 (expression -> expression OR expression .)
    DEF             reduce using rule 48 (expression -> expression OR expression .)
    TYPE            reduce using rule 48 (expression -> expression OR expression .)
    ID              reduce using rule 48 (expression -> expression OR expression .)
    NOT             reduce using rule 48 (expression -> expression OR expression .)
    LPAREN          reduce using rule 48 (expression -> expression OR expression .)
    NUMBER          reduce using rule 48 (expression -> expression OR expression .)
    FLOAT_NUMBER    reduce using rule 48 (expression -> expression OR expression .)
    TRUE            reduce using rule 48 (expression -> expression OR expression .)
    FALSE           reduce using rule 48 (expression -> expression OR expression .)
    CHARACTER       reduce using rule 48 (expression -> expression OR expression .)
    INT             reduce using rule 48 (expression -> expression OR expression .)
    FLOAT           reduce using rule 48 (expression -> expression OR expression .)
    CHAR            reduce using rule 48 (expression -> expression OR expression .)
    BOOL            reduce using rule 48 (expression -> expression OR expression .)
    $end            reduce using rule 48 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 48 (expression -> expression OR expression .)
    COMMA           reduce using rule 48 (expression -> expression OR expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40

  ! PLUS            [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 41 ]
  ! LBRACKET        [ shift and go to state 42 ]
  ! DOT             [ shift and go to state 43 ]


state 67

    (58) expression -> expression LBRACKET expression . RBRACKET
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    RBRACKET        shift and go to state 78
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    LBRACKET        shift and go to state 42
    DOT             shift and go to state 43


state 68

    (59) expression -> expression DOT ID .

    ASSIGN          reduce using rule 59 (expression -> expression DOT ID .)
    PLUS            reduce using rule 59 (expression -> expression DOT ID .)
    MINUS           reduce using rule 59 (expression -> expression DOT ID .)
    TIMES           reduce using rule 59 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 59 (expression -> expression DOT ID .)
    EQ              reduce using rule 59 (expression -> expression DOT ID .)
    GT              reduce using rule 59 (expression -> expression DOT ID .)
    GE              reduce using rule 59 (expression -> expression DOT ID .)
    LT              reduce using rule 59 (expression -> expression DOT ID .)
    LE              reduce using rule 59 (expression -> expression DOT ID .)
    AND             reduce using rule 59 (expression -> expression DOT ID .)
    OR              reduce using rule 59 (expression -> expression DOT ID .)
    LBRACKET        reduce using rule 59 (expression -> expression DOT ID .)
    DOT             reduce using rule 59 (expression -> expression DOT ID .)
    RPAREN          reduce using rule 59 (expression -> expression DOT ID .)
    DEF             reduce using rule 59 (expression -> expression DOT ID .)
    TYPE            reduce using rule 59 (expression -> expression DOT ID .)
    ID              reduce using rule 59 (expression -> expression DOT ID .)
    NOT             reduce using rule 59 (expression -> expression DOT ID .)
    LPAREN          reduce using rule 59 (expression -> expression DOT ID .)
    NUMBER          reduce using rule 59 (expression -> expression DOT ID .)
    FLOAT_NUMBER    reduce using rule 59 (expression -> expression DOT ID .)
    TRUE            reduce using rule 59 (expression -> expression DOT ID .)
    FALSE           reduce using rule 59 (expression -> expression DOT ID .)
    CHARACTER       reduce using rule 59 (expression -> expression DOT ID .)
    INT             reduce using rule 59 (expression -> expression DOT ID .)
    FLOAT           reduce using rule 59 (expression -> expression DOT ID .)
    CHAR            reduce using rule 59 (expression -> expression DOT ID .)
    BOOL            reduce using rule 59 (expression -> expression DOT ID .)
    $end            reduce using rule 59 (expression -> expression DOT ID .)
    SEMICOLON       reduce using rule 59 (expression -> expression DOT ID .)
    RBRACKET        reduce using rule 59 (expression -> expression DOT ID .)
    COMMA           reduce using rule 59 (expression -> expression DOT ID .)


state 69

    (20) function_def -> DEF type ID . LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE

    LPAREN          shift and go to state 79


state 70

    (60) expression -> ID LPAREN arg_list . RPAREN
    (62) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 80
    COMMA           shift and go to state 81


state 71

    (61) arg_list -> expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    RPAREN          reduce using rule 61 (arg_list -> expression .)
    COMMA           reduce using rule 61 (arg_list -> expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    LBRACKET        shift and go to state 42
    DOT             shift and go to state 43


state 72

    (63) arg_list -> empty .

    RPAREN          reduce using rule 63 (arg_list -> empty .)
    COMMA           reduce using rule 63 (arg_list -> empty .)


state 73

    (51) expression -> LPAREN expression RPAREN .

    ASSIGN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DEF             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    TYPE            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    FLOAT_NUMBER    reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    CHARACTER       reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    INT             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    BOOL            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 51 (expression -> LPAREN expression RPAREN .)


state 74

    (33) type_def -> TYPE ID COLON . LBRACE field_list RBRACE

    LBRACE          shift and go to state 82


state 75

    (26) type -> base_type LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 83


state 76

    (17) declaration -> type id_list ASSIGN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

  ! shift/reduce conflict for MINUS resolved as shift
    DEF             reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    TYPE            reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    ID              reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    NOT             reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    LPAREN          reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    NUMBER          reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    FLOAT_NUMBER    reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    TRUE            reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    FALSE           reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    CHARACTER       reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    INT             reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    FLOAT           reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    CHAR            reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    BOOL            reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    $end            reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    SEMICOLON       reduce using rule 17 (declaration -> type id_list ASSIGN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    LBRACKET        shift and go to state 42
    DOT             shift and go to state 43

  ! MINUS           [ reduce using rule 17 (declaration -> type id_list ASSIGN expression .) ]


state 77

    (32) id_list -> id_list COMMA ID .

    ASSIGN          reduce using rule 32 (id_list -> id_list COMMA ID .)
    COMMA           reduce using rule 32 (id_list -> id_list COMMA ID .)
    DEF             reduce using rule 32 (id_list -> id_list COMMA ID .)
    TYPE            reduce using rule 32 (id_list -> id_list COMMA ID .)
    ID              reduce using rule 32 (id_list -> id_list COMMA ID .)
    MINUS           reduce using rule 32 (id_list -> id_list COMMA ID .)
    NOT             reduce using rule 32 (id_list -> id_list COMMA ID .)
    LPAREN          reduce using rule 32 (id_list -> id_list COMMA ID .)
    NUMBER          reduce using rule 32 (id_list -> id_list COMMA ID .)
    FLOAT_NUMBER    reduce using rule 32 (id_list -> id_list COMMA ID .)
    TRUE            reduce using rule 32 (id_list -> id_list COMMA ID .)
    FALSE           reduce using rule 32 (id_list -> id_list COMMA ID .)
    CHARACTER       reduce using rule 32 (id_list -> id_list COMMA ID .)
    INT             reduce using rule 32 (id_list -> id_list COMMA ID .)
    FLOAT           reduce using rule 32 (id_list -> id_list COMMA ID .)
    CHAR            reduce using rule 32 (id_list -> id_list COMMA ID .)
    BOOL            reduce using rule 32 (id_list -> id_list COMMA ID .)
    $end            reduce using rule 32 (id_list -> id_list COMMA ID .)
    SEMICOLON       reduce using rule 32 (id_list -> id_list COMMA ID .)


state 78

    (58) expression -> expression LBRACKET expression RBRACKET .

    ASSIGN          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    GE              reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    DEF             reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    TYPE            reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    ID              reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    NOT             reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    NUMBER          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    FLOAT_NUMBER    reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    TRUE            reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    FALSE           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    CHARACTER       reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    INT             reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    FLOAT           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    CHAR            reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    BOOL            reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    $end            reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)


state 79

    (20) function_def -> DEF type ID LPAREN . param_list RPAREN COLON LBRACE statement_list RBRACE
    (21) param_list -> . param
    (22) param_list -> . param_list SEMICOLON param
    (23) param_list -> . empty
    (24) param -> . type ID
    (64) empty -> .
    (25) type -> . base_type
    (26) type -> . base_type LBRACKET NUMBER RBRACKET
    (27) base_type -> . INT
    (28) base_type -> . FLOAT
    (29) base_type -> . CHAR
    (30) base_type -> . BOOL

    RPAREN          reduce using rule 64 (empty -> .)
    SEMICOLON       reduce using rule 64 (empty -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    type                           shift and go to state 84
    param_list                     shift and go to state 85
    param                          shift and go to state 86
    empty                          shift and go to state 87
    base_type                      shift and go to state 15

state 80

    (60) expression -> ID LPAREN arg_list RPAREN .

    ASSIGN          reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    EQ              reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    GT              reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    GE              reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    LT              reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    LE              reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    AND             reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    OR              reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    LBRACKET        reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    DOT             reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    DEF             reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    TYPE            reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    ID              reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    NOT             reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    LPAREN          reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    NUMBER          reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    FLOAT_NUMBER    reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    TRUE            reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    FALSE           reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    CHARACTER       reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    INT             reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    FLOAT           reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    CHAR            reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    BOOL            reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    $end            reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    SEMICOLON       reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    RBRACKET        reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 60 (expression -> ID LPAREN arg_list RPAREN .)


state 81

    (62) arg_list -> arg_list COMMA . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 88

state 82

    (33) type_def -> TYPE ID COLON LBRACE . field_list RBRACE
    (34) field_list -> . field
    (35) field_list -> . field_list field
    (36) field -> . type ID
    (25) type -> . base_type
    (26) type -> . base_type LBRACKET NUMBER RBRACKET
    (27) base_type -> . INT
    (28) base_type -> . FLOAT
    (29) base_type -> . CHAR
    (30) base_type -> . BOOL

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    field_list                     shift and go to state 89
    field                          shift and go to state 90
    type                           shift and go to state 91
    base_type                      shift and go to state 15

state 83

    (26) type -> base_type LBRACKET NUMBER RBRACKET .

    ID              reduce using rule 26 (type -> base_type LBRACKET NUMBER RBRACKET .)


state 84

    (24) param -> type . ID

    ID              shift and go to state 92


state 85

    (20) function_def -> DEF type ID LPAREN param_list . RPAREN COLON LBRACE statement_list RBRACE
    (22) param_list -> param_list . SEMICOLON param

    RPAREN          shift and go to state 93
    SEMICOLON       shift and go to state 94


state 86

    (21) param_list -> param .

    RPAREN          reduce using rule 21 (param_list -> param .)
    SEMICOLON       reduce using rule 21 (param_list -> param .)


state 87

    (23) param_list -> empty .

    RPAREN          reduce using rule 23 (param_list -> empty .)
    SEMICOLON       reduce using rule 23 (param_list -> empty .)


state 88

    (62) arg_list -> arg_list COMMA expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    RPAREN          reduce using rule 62 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 62 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    LBRACKET        shift and go to state 42
    DOT             shift and go to state 43


state 89

    (33) type_def -> TYPE ID COLON LBRACE field_list . RBRACE
    (35) field_list -> field_list . field
    (36) field -> . type ID
    (25) type -> . base_type
    (26) type -> . base_type LBRACKET NUMBER RBRACKET
    (27) base_type -> . INT
    (28) base_type -> . FLOAT
    (29) base_type -> . CHAR
    (30) base_type -> . BOOL

    RBRACE          shift and go to state 95
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    field                          shift and go to state 96
    type                           shift and go to state 91
    base_type                      shift and go to state 15

state 90

    (34) field_list -> field .

    RBRACE          reduce using rule 34 (field_list -> field .)
    INT             reduce using rule 34 (field_list -> field .)
    FLOAT           reduce using rule 34 (field_list -> field .)
    CHAR            reduce using rule 34 (field_list -> field .)
    BOOL            reduce using rule 34 (field_list -> field .)


state 91

    (36) field -> type . ID

    ID              shift and go to state 97


state 92

    (24) param -> type ID .

    RPAREN          reduce using rule 24 (param -> type ID .)
    SEMICOLON       reduce using rule 24 (param -> type ID .)


state 93

    (20) function_def -> DEF type ID LPAREN param_list RPAREN . COLON LBRACE statement_list RBRACE

    COLON           shift and go to state 98


state 94

    (22) param_list -> param_list SEMICOLON . param
    (24) param -> . type ID
    (25) type -> . base_type
    (26) type -> . base_type LBRACKET NUMBER RBRACKET
    (27) base_type -> . INT
    (28) base_type -> . FLOAT
    (29) base_type -> . CHAR
    (30) base_type -> . BOOL

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    param                          shift and go to state 99
    type                           shift and go to state 84
    base_type                      shift and go to state 15

state 95

    (33) type_def -> TYPE ID COLON LBRACE field_list RBRACE .

    DEF             reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    TYPE            reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    ID              reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    MINUS           reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    NOT             reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    LPAREN          reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    NUMBER          reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    TRUE            reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    FALSE           reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    CHARACTER       reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    INT             reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    FLOAT           reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    CHAR            reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    BOOL            reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    $end            reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)
    SEMICOLON       reduce using rule 33 (type_def -> TYPE ID COLON LBRACE field_list RBRACE .)


state 96

    (35) field_list -> field_list field .

    RBRACE          reduce using rule 35 (field_list -> field_list field .)
    INT             reduce using rule 35 (field_list -> field_list field .)
    FLOAT           reduce using rule 35 (field_list -> field_list field .)
    CHAR            reduce using rule 35 (field_list -> field_list field .)
    BOOL            reduce using rule 35 (field_list -> field_list field .)


state 97

    (36) field -> type ID .

    RBRACE          reduce using rule 36 (field -> type ID .)
    INT             reduce using rule 36 (field -> type ID .)
    FLOAT           reduce using rule 36 (field -> type ID .)
    CHAR            reduce using rule 36 (field -> type ID .)
    BOOL            reduce using rule 36 (field -> type ID .)


state 98

    (20) function_def -> DEF type ID LPAREN param_list RPAREN COLON . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 100


state 99

    (22) param_list -> param_list SEMICOLON param .

    RPAREN          reduce using rule 22 (param_list -> param_list SEMICOLON param .)
    SEMICOLON       reduce using rule 22 (param_list -> param_list SEMICOLON param .)


state 100

    (20) function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE . statement_list RBRACE
    (9) statement_list -> . statement SEMICOLON
    (10) statement_list -> . statement_list statement SEMICOLON
    (11) statement -> . declaration
    (12) statement -> . assignment
    (13) statement -> . return_stmt
    (14) statement -> . instance
    (15) statement -> . type_def
    (16) declaration -> . type id_list
    (17) declaration -> . type id_list ASSIGN expression
    (18) assignment -> . expression ASSIGN expression
    (19) return_stmt -> . RETURN expression
    (37) instance -> . ID ID
    (33) type_def -> . TYPE ID COLON LBRACE field_list RBRACE
    (25) type -> . base_type
    (26) type -> . base_type LBRACKET NUMBER RBRACKET
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN
    (27) base_type -> . INT
    (28) base_type -> . FLOAT
    (29) base_type -> . CHAR
    (30) base_type -> . BOOL

    RETURN          shift and go to state 108
    ID              shift and go to state 12
    TYPE            shift and go to state 14
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    type                           shift and go to state 9
    statement_list                 shift and go to state 101
    statement                      shift and go to state 102
    declaration                    shift and go to state 103
    assignment                     shift and go to state 104
    return_stmt                    shift and go to state 105
    instance                       shift and go to state 106
    type_def                       shift and go to state 107
    expression                     shift and go to state 10
    base_type                      shift and go to state 15

state 101

    (20) function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list . RBRACE
    (10) statement_list -> statement_list . statement SEMICOLON
    (11) statement -> . declaration
    (12) statement -> . assignment
    (13) statement -> . return_stmt
    (14) statement -> . instance
    (15) statement -> . type_def
    (16) declaration -> . type id_list
    (17) declaration -> . type id_list ASSIGN expression
    (18) assignment -> . expression ASSIGN expression
    (19) return_stmt -> . RETURN expression
    (37) instance -> . ID ID
    (33) type_def -> . TYPE ID COLON LBRACE field_list RBRACE
    (25) type -> . base_type
    (26) type -> . base_type LBRACKET NUMBER RBRACKET
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN
    (27) base_type -> . INT
    (28) base_type -> . FLOAT
    (29) base_type -> . CHAR
    (30) base_type -> . BOOL

    RBRACE          shift and go to state 109
    RETURN          shift and go to state 108
    ID              shift and go to state 12
    TYPE            shift and go to state 14
    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    type                           shift and go to state 9
    statement                      shift and go to state 110
    declaration                    shift and go to state 103
    assignment                     shift and go to state 104
    return_stmt                    shift and go to state 105
    instance                       shift and go to state 106
    type_def                       shift and go to state 107
    expression                     shift and go to state 10
    base_type                      shift and go to state 15

state 102

    (9) statement_list -> statement . SEMICOLON

    SEMICOLON       shift and go to state 111


state 103

    (11) statement -> declaration .

    SEMICOLON       reduce using rule 11 (statement -> declaration .)


state 104

    (12) statement -> assignment .

    SEMICOLON       reduce using rule 12 (statement -> assignment .)


state 105

    (13) statement -> return_stmt .

    SEMICOLON       reduce using rule 13 (statement -> return_stmt .)


state 106

    (14) statement -> instance .

    SEMICOLON       reduce using rule 14 (statement -> instance .)


state 107

    (15) statement -> type_def .

    SEMICOLON       reduce using rule 15 (statement -> type_def .)


state 108

    (19) return_stmt -> RETURN . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GT expression
    (44) expression -> . expression GE expression
    (45) expression -> . expression LT expression
    (46) expression -> . expression LE expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression OR expression
    (49) expression -> . MINUS expression
    (50) expression -> . NOT expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER
    (53) expression -> . FLOAT_NUMBER
    (54) expression -> . TRUE
    (55) expression -> . FALSE
    (56) expression -> . CHARACTER
    (57) expression -> . ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression DOT ID
    (60) expression -> . ID LPAREN arg_list RPAREN

    MINUS           shift and go to state 17
    NOT             shift and go to state 18
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 16
    FLOAT_NUMBER    shift and go to state 19
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    CHARACTER       shift and go to state 22
    ID              shift and go to state 48

    expression                     shift and go to state 112

state 109

    (20) function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .

    DEF             reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    ID              reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    NOT             reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    CHARACTER       reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    INT             reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    $end            reduce using rule 20 (function_def -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)


state 110

    (10) statement_list -> statement_list statement . SEMICOLON

    SEMICOLON       shift and go to state 113


state 111

    (9) statement_list -> statement SEMICOLON .

    RBRACE          reduce using rule 9 (statement_list -> statement SEMICOLON .)
    RETURN          reduce using rule 9 (statement_list -> statement SEMICOLON .)
    ID              reduce using rule 9 (statement_list -> statement SEMICOLON .)
    TYPE            reduce using rule 9 (statement_list -> statement SEMICOLON .)
    MINUS           reduce using rule 9 (statement_list -> statement SEMICOLON .)
    NOT             reduce using rule 9 (statement_list -> statement SEMICOLON .)
    LPAREN          reduce using rule 9 (statement_list -> statement SEMICOLON .)
    NUMBER          reduce using rule 9 (statement_list -> statement SEMICOLON .)
    FLOAT_NUMBER    reduce using rule 9 (statement_list -> statement SEMICOLON .)
    TRUE            reduce using rule 9 (statement_list -> statement SEMICOLON .)
    FALSE           reduce using rule 9 (statement_list -> statement SEMICOLON .)
    CHARACTER       reduce using rule 9 (statement_list -> statement SEMICOLON .)
    INT             reduce using rule 9 (statement_list -> statement SEMICOLON .)
    FLOAT           reduce using rule 9 (statement_list -> statement SEMICOLON .)
    CHAR            reduce using rule 9 (statement_list -> statement SEMICOLON .)
    BOOL            reduce using rule 9 (statement_list -> statement SEMICOLON .)


state 112

    (19) return_stmt -> RETURN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GT expression
    (44) expression -> expression . GE expression
    (45) expression -> expression . LT expression
    (46) expression -> expression . LE expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . OR expression
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . DOT ID

    SEMICOLON       reduce using rule 19 (return_stmt -> RETURN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    LBRACKET        shift and go to state 42
    DOT             shift and go to state 43


state 113

    (10) statement_list -> statement_list statement SEMICOLON .

    RBRACE          reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    RETURN          reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    ID              reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    TYPE            reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    MINUS           reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    NOT             reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    LPAREN          reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    NUMBER          reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    FLOAT_NUMBER    reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    TRUE            reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    FALSE           reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    CHARACTER       reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    INT             reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    FLOAT           reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    CHAR            reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)
    BOOL            reduce using rule 10 (statement_list -> statement_list statement SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
