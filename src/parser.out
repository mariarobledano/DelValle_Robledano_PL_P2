Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> type id_list
Rule 5     statement -> type id_list ASSIGN expression
Rule 6     id_list -> ID
Rule 7     id_list -> id_list COMMA ID
Rule 8     type -> base_type
Rule 9     type -> base_type LBRACKET NUMBER RBRACKET
Rule 10    base_type -> INT
Rule 11    base_type -> FLOAT
Rule 12    base_type -> CHAR
Rule 13    base_type -> BOOL
Rule 14    expression -> expression PLUS expression
Rule 15    expression -> expression MINUS expression
Rule 16    expression -> expression TIMES expression
Rule 17    expression -> expression DIVIDE expression
Rule 18    expression -> expression EQ expression
Rule 19    expression -> expression GT expression
Rule 20    expression -> expression GE expression
Rule 21    expression -> expression LT expression
Rule 22    expression -> expression LE expression
Rule 23    expression -> expression AND expression
Rule 24    expression -> expression OR expression
Rule 25    expression -> MINUS expression
Rule 26    expression -> NOT expression
Rule 27    expression -> LPAREN expression RPAREN
Rule 28    expression -> NUMBER
Rule 29    expression -> FLOAT_NUMBER
Rule 30    expression -> TRUE
Rule 31    expression -> FALSE
Rule 32    expression -> CHARACTER
Rule 33    expression -> ID
Rule 34    expression -> expression LBRACKET expression RBRACKET
Rule 35    statement -> expression ASSIGN expression
Rule 36    statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
Rule 37    param_list -> param
Rule 38    param_list -> param_list SEMICOLON param
Rule 39    param -> type ID
Rule 40    statement -> RETURN expression
Rule 41    statement -> IF expression statement ELSE statement
Rule 42    expression -> ID LPAREN arg_list RPAREN
Rule 43    arg_list -> expression
Rule 44    arg_list -> arg_list COMMA expression
Rule 45    arg_list -> empty
Rule 46    statement -> TYPE ID COLON LBRACE field_list RBRACE
Rule 47    statement -> ID ID
Rule 48    field_list -> field
Rule 49    field_list -> field_list field
Rule 50    field -> type ID
Rule 51    expression -> expression DOT ID
Rule 52    empty -> <empty>

Terminals, with rules where they appear

AND                  : 23
ASSIGN               : 5 35
BOOL                 : 13
CHAR                 : 12
CHARACTER            : 32
COLON                : 36 46
COMMA                : 7 44
DEF                  : 36
DIVIDE               : 17
DOT                  : 51
ELSE                 : 41
EQ                   : 18
FALSE                : 31
FLOAT                : 11
FLOAT_NUMBER         : 29
GE                   : 20
GT                   : 19
ID                   : 6 7 33 36 39 42 46 47 47 50 51
IF                   : 41
INT                  : 10
LBRACE               : 36 46
LBRACKET             : 9 34
LE                   : 22
LPAREN               : 27 36 42
LT                   : 21
MINUS                : 15 25
NOT                  : 26
NUMBER               : 9 28
OR                   : 24
PLUS                 : 14
RBRACE               : 36 46
RBRACKET             : 9 34
RETURN               : 40
RPAREN               : 27 36 42
SEMICOLON            : 38
TIMES                : 16
TRUE                 : 30
TYPE                 : 46
error                : 

Nonterminals, with rules where they appear

arg_list             : 42 44
base_type            : 8 9
empty                : 45
expression           : 5 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 26 27 34 34 35 35 40 41 43 44 51
field                : 48 49
field_list           : 46 49
id_list              : 4 5 7
param                : 37 38
param_list           : 36 38
program              : 0
statement            : 2 3 41 41
statement_list       : 1 3 36
type                 : 4 5 36 39 50

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . type id_list
    (5) statement -> . type id_list ASSIGN expression
    (35) statement -> . expression ASSIGN expression
    (36) statement -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (40) statement -> . RETURN expression
    (41) statement -> . IF expression statement ELSE statement
    (46) statement -> . TYPE ID COLON LBRACE field_list RBRACE
    (47) statement -> . ID ID
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    DEF             shift and go to state 6
    RETURN          shift and go to state 9
    IF              shift and go to state 10
    TYPE            shift and go to state 11
    ID              shift and go to state 7
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    type                           shift and go to state 4
    expression                     shift and go to state 5
    base_type                      shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . type id_list
    (5) statement -> . type id_list ASSIGN expression
    (35) statement -> . expression ASSIGN expression
    (36) statement -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (40) statement -> . RETURN expression
    (41) statement -> . IF expression statement ELSE statement
    (46) statement -> . TYPE ID COLON LBRACE field_list RBRACE
    (47) statement -> . ID ID
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    $end            reduce using rule 1 (program -> statement_list .)
    DEF             shift and go to state 6
    RETURN          shift and go to state 9
    IF              shift and go to state 10
    TYPE            shift and go to state 11
    ID              shift and go to state 7
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    statement                      shift and go to state 24
    type                           shift and go to state 4
    expression                     shift and go to state 5
    base_type                      shift and go to state 12

state 3

    (2) statement_list -> statement .

    DEF             reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    TYPE            reduce using rule 2 (statement_list -> statement .)
    ID              reduce using rule 2 (statement_list -> statement .)
    MINUS           reduce using rule 2 (statement_list -> statement .)
    NOT             reduce using rule 2 (statement_list -> statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement .)
    FLOAT_NUMBER    reduce using rule 2 (statement_list -> statement .)
    TRUE            reduce using rule 2 (statement_list -> statement .)
    FALSE           reduce using rule 2 (statement_list -> statement .)
    CHARACTER       reduce using rule 2 (statement_list -> statement .)
    INT             reduce using rule 2 (statement_list -> statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement .)
    CHAR            reduce using rule 2 (statement_list -> statement .)
    BOOL            reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> type . id_list
    (5) statement -> type . id_list ASSIGN expression
    (6) id_list -> . ID
    (7) id_list -> . id_list COMMA ID

    ID              shift and go to state 26

    id_list                        shift and go to state 25

state 5

    (35) statement -> expression . ASSIGN expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    LBRACKET        shift and go to state 39
    DOT             shift and go to state 40


state 6

    (36) statement -> DEF . type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    type                           shift and go to state 41
    base_type                      shift and go to state 12

state 7

    (47) statement -> ID . ID
    (33) expression -> ID .
    (42) expression -> ID . LPAREN arg_list RPAREN

    ID              shift and go to state 42
    ASSIGN          reduce using rule 33 (expression -> ID .)
    PLUS            reduce using rule 33 (expression -> ID .)
    MINUS           reduce using rule 33 (expression -> ID .)
    TIMES           reduce using rule 33 (expression -> ID .)
    DIVIDE          reduce using rule 33 (expression -> ID .)
    EQ              reduce using rule 33 (expression -> ID .)
    GT              reduce using rule 33 (expression -> ID .)
    GE              reduce using rule 33 (expression -> ID .)
    LT              reduce using rule 33 (expression -> ID .)
    LE              reduce using rule 33 (expression -> ID .)
    AND             reduce using rule 33 (expression -> ID .)
    OR              reduce using rule 33 (expression -> ID .)
    LBRACKET        reduce using rule 33 (expression -> ID .)
    DOT             reduce using rule 33 (expression -> ID .)
    LPAREN          shift and go to state 43


state 8

    (27) expression -> LPAREN . expression RPAREN
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 44

state 9

    (40) statement -> RETURN . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 46

state 10

    (41) statement -> IF . expression statement ELSE statement
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 47

state 11

    (46) statement -> TYPE . ID COLON LBRACE field_list RBRACE

    ID              shift and go to state 48


state 12

    (8) type -> base_type .
    (9) type -> base_type . LBRACKET NUMBER RBRACKET

    ID              reduce using rule 8 (type -> base_type .)
    LBRACKET        shift and go to state 49


state 13

    (28) expression -> NUMBER .

    ASSIGN          reduce using rule 28 (expression -> NUMBER .)
    PLUS            reduce using rule 28 (expression -> NUMBER .)
    MINUS           reduce using rule 28 (expression -> NUMBER .)
    TIMES           reduce using rule 28 (expression -> NUMBER .)
    DIVIDE          reduce using rule 28 (expression -> NUMBER .)
    EQ              reduce using rule 28 (expression -> NUMBER .)
    GT              reduce using rule 28 (expression -> NUMBER .)
    GE              reduce using rule 28 (expression -> NUMBER .)
    LT              reduce using rule 28 (expression -> NUMBER .)
    LE              reduce using rule 28 (expression -> NUMBER .)
    AND             reduce using rule 28 (expression -> NUMBER .)
    OR              reduce using rule 28 (expression -> NUMBER .)
    LBRACKET        reduce using rule 28 (expression -> NUMBER .)
    DOT             reduce using rule 28 (expression -> NUMBER .)
    RPAREN          reduce using rule 28 (expression -> NUMBER .)
    DEF             reduce using rule 28 (expression -> NUMBER .)
    RETURN          reduce using rule 28 (expression -> NUMBER .)
    IF              reduce using rule 28 (expression -> NUMBER .)
    TYPE            reduce using rule 28 (expression -> NUMBER .)
    ID              reduce using rule 28 (expression -> NUMBER .)
    NOT             reduce using rule 28 (expression -> NUMBER .)
    LPAREN          reduce using rule 28 (expression -> NUMBER .)
    NUMBER          reduce using rule 28 (expression -> NUMBER .)
    FLOAT_NUMBER    reduce using rule 28 (expression -> NUMBER .)
    TRUE            reduce using rule 28 (expression -> NUMBER .)
    FALSE           reduce using rule 28 (expression -> NUMBER .)
    CHARACTER       reduce using rule 28 (expression -> NUMBER .)
    INT             reduce using rule 28 (expression -> NUMBER .)
    FLOAT           reduce using rule 28 (expression -> NUMBER .)
    CHAR            reduce using rule 28 (expression -> NUMBER .)
    BOOL            reduce using rule 28 (expression -> NUMBER .)
    $end            reduce using rule 28 (expression -> NUMBER .)
    ELSE            reduce using rule 28 (expression -> NUMBER .)
    RBRACE          reduce using rule 28 (expression -> NUMBER .)
    RBRACKET        reduce using rule 28 (expression -> NUMBER .)
    COMMA           reduce using rule 28 (expression -> NUMBER .)


state 14

    (25) expression -> MINUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 50

state 15

    (26) expression -> NOT . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 51

state 16

    (29) expression -> FLOAT_NUMBER .

    ASSIGN          reduce using rule 29 (expression -> FLOAT_NUMBER .)
    PLUS            reduce using rule 29 (expression -> FLOAT_NUMBER .)
    MINUS           reduce using rule 29 (expression -> FLOAT_NUMBER .)
    TIMES           reduce using rule 29 (expression -> FLOAT_NUMBER .)
    DIVIDE          reduce using rule 29 (expression -> FLOAT_NUMBER .)
    EQ              reduce using rule 29 (expression -> FLOAT_NUMBER .)
    GT              reduce using rule 29 (expression -> FLOAT_NUMBER .)
    GE              reduce using rule 29 (expression -> FLOAT_NUMBER .)
    LT              reduce using rule 29 (expression -> FLOAT_NUMBER .)
    LE              reduce using rule 29 (expression -> FLOAT_NUMBER .)
    AND             reduce using rule 29 (expression -> FLOAT_NUMBER .)
    OR              reduce using rule 29 (expression -> FLOAT_NUMBER .)
    LBRACKET        reduce using rule 29 (expression -> FLOAT_NUMBER .)
    DOT             reduce using rule 29 (expression -> FLOAT_NUMBER .)
    RPAREN          reduce using rule 29 (expression -> FLOAT_NUMBER .)
    DEF             reduce using rule 29 (expression -> FLOAT_NUMBER .)
    RETURN          reduce using rule 29 (expression -> FLOAT_NUMBER .)
    IF              reduce using rule 29 (expression -> FLOAT_NUMBER .)
    TYPE            reduce using rule 29 (expression -> FLOAT_NUMBER .)
    ID              reduce using rule 29 (expression -> FLOAT_NUMBER .)
    NOT             reduce using rule 29 (expression -> FLOAT_NUMBER .)
    LPAREN          reduce using rule 29 (expression -> FLOAT_NUMBER .)
    NUMBER          reduce using rule 29 (expression -> FLOAT_NUMBER .)
    FLOAT_NUMBER    reduce using rule 29 (expression -> FLOAT_NUMBER .)
    TRUE            reduce using rule 29 (expression -> FLOAT_NUMBER .)
    FALSE           reduce using rule 29 (expression -> FLOAT_NUMBER .)
    CHARACTER       reduce using rule 29 (expression -> FLOAT_NUMBER .)
    INT             reduce using rule 29 (expression -> FLOAT_NUMBER .)
    FLOAT           reduce using rule 29 (expression -> FLOAT_NUMBER .)
    CHAR            reduce using rule 29 (expression -> FLOAT_NUMBER .)
    BOOL            reduce using rule 29 (expression -> FLOAT_NUMBER .)
    $end            reduce using rule 29 (expression -> FLOAT_NUMBER .)
    ELSE            reduce using rule 29 (expression -> FLOAT_NUMBER .)
    RBRACE          reduce using rule 29 (expression -> FLOAT_NUMBER .)
    RBRACKET        reduce using rule 29 (expression -> FLOAT_NUMBER .)
    COMMA           reduce using rule 29 (expression -> FLOAT_NUMBER .)


state 17

    (30) expression -> TRUE .

    ASSIGN          reduce using rule 30 (expression -> TRUE .)
    PLUS            reduce using rule 30 (expression -> TRUE .)
    MINUS           reduce using rule 30 (expression -> TRUE .)
    TIMES           reduce using rule 30 (expression -> TRUE .)
    DIVIDE          reduce using rule 30 (expression -> TRUE .)
    EQ              reduce using rule 30 (expression -> TRUE .)
    GT              reduce using rule 30 (expression -> TRUE .)
    GE              reduce using rule 30 (expression -> TRUE .)
    LT              reduce using rule 30 (expression -> TRUE .)
    LE              reduce using rule 30 (expression -> TRUE .)
    AND             reduce using rule 30 (expression -> TRUE .)
    OR              reduce using rule 30 (expression -> TRUE .)
    LBRACKET        reduce using rule 30 (expression -> TRUE .)
    DOT             reduce using rule 30 (expression -> TRUE .)
    RPAREN          reduce using rule 30 (expression -> TRUE .)
    DEF             reduce using rule 30 (expression -> TRUE .)
    RETURN          reduce using rule 30 (expression -> TRUE .)
    IF              reduce using rule 30 (expression -> TRUE .)
    TYPE            reduce using rule 30 (expression -> TRUE .)
    ID              reduce using rule 30 (expression -> TRUE .)
    NOT             reduce using rule 30 (expression -> TRUE .)
    LPAREN          reduce using rule 30 (expression -> TRUE .)
    NUMBER          reduce using rule 30 (expression -> TRUE .)
    FLOAT_NUMBER    reduce using rule 30 (expression -> TRUE .)
    TRUE            reduce using rule 30 (expression -> TRUE .)
    FALSE           reduce using rule 30 (expression -> TRUE .)
    CHARACTER       reduce using rule 30 (expression -> TRUE .)
    INT             reduce using rule 30 (expression -> TRUE .)
    FLOAT           reduce using rule 30 (expression -> TRUE .)
    CHAR            reduce using rule 30 (expression -> TRUE .)
    BOOL            reduce using rule 30 (expression -> TRUE .)
    $end            reduce using rule 30 (expression -> TRUE .)
    ELSE            reduce using rule 30 (expression -> TRUE .)
    RBRACE          reduce using rule 30 (expression -> TRUE .)
    RBRACKET        reduce using rule 30 (expression -> TRUE .)
    COMMA           reduce using rule 30 (expression -> TRUE .)


state 18

    (31) expression -> FALSE .

    ASSIGN          reduce using rule 31 (expression -> FALSE .)
    PLUS            reduce using rule 31 (expression -> FALSE .)
    MINUS           reduce using rule 31 (expression -> FALSE .)
    TIMES           reduce using rule 31 (expression -> FALSE .)
    DIVIDE          reduce using rule 31 (expression -> FALSE .)
    EQ              reduce using rule 31 (expression -> FALSE .)
    GT              reduce using rule 31 (expression -> FALSE .)
    GE              reduce using rule 31 (expression -> FALSE .)
    LT              reduce using rule 31 (expression -> FALSE .)
    LE              reduce using rule 31 (expression -> FALSE .)
    AND             reduce using rule 31 (expression -> FALSE .)
    OR              reduce using rule 31 (expression -> FALSE .)
    LBRACKET        reduce using rule 31 (expression -> FALSE .)
    DOT             reduce using rule 31 (expression -> FALSE .)
    RPAREN          reduce using rule 31 (expression -> FALSE .)
    DEF             reduce using rule 31 (expression -> FALSE .)
    RETURN          reduce using rule 31 (expression -> FALSE .)
    IF              reduce using rule 31 (expression -> FALSE .)
    TYPE            reduce using rule 31 (expression -> FALSE .)
    ID              reduce using rule 31 (expression -> FALSE .)
    NOT             reduce using rule 31 (expression -> FALSE .)
    LPAREN          reduce using rule 31 (expression -> FALSE .)
    NUMBER          reduce using rule 31 (expression -> FALSE .)
    FLOAT_NUMBER    reduce using rule 31 (expression -> FALSE .)
    TRUE            reduce using rule 31 (expression -> FALSE .)
    FALSE           reduce using rule 31 (expression -> FALSE .)
    CHARACTER       reduce using rule 31 (expression -> FALSE .)
    INT             reduce using rule 31 (expression -> FALSE .)
    FLOAT           reduce using rule 31 (expression -> FALSE .)
    CHAR            reduce using rule 31 (expression -> FALSE .)
    BOOL            reduce using rule 31 (expression -> FALSE .)
    $end            reduce using rule 31 (expression -> FALSE .)
    ELSE            reduce using rule 31 (expression -> FALSE .)
    RBRACE          reduce using rule 31 (expression -> FALSE .)
    RBRACKET        reduce using rule 31 (expression -> FALSE .)
    COMMA           reduce using rule 31 (expression -> FALSE .)


state 19

    (32) expression -> CHARACTER .

    ASSIGN          reduce using rule 32 (expression -> CHARACTER .)
    PLUS            reduce using rule 32 (expression -> CHARACTER .)
    MINUS           reduce using rule 32 (expression -> CHARACTER .)
    TIMES           reduce using rule 32 (expression -> CHARACTER .)
    DIVIDE          reduce using rule 32 (expression -> CHARACTER .)
    EQ              reduce using rule 32 (expression -> CHARACTER .)
    GT              reduce using rule 32 (expression -> CHARACTER .)
    GE              reduce using rule 32 (expression -> CHARACTER .)
    LT              reduce using rule 32 (expression -> CHARACTER .)
    LE              reduce using rule 32 (expression -> CHARACTER .)
    AND             reduce using rule 32 (expression -> CHARACTER .)
    OR              reduce using rule 32 (expression -> CHARACTER .)
    LBRACKET        reduce using rule 32 (expression -> CHARACTER .)
    DOT             reduce using rule 32 (expression -> CHARACTER .)
    RPAREN          reduce using rule 32 (expression -> CHARACTER .)
    DEF             reduce using rule 32 (expression -> CHARACTER .)
    RETURN          reduce using rule 32 (expression -> CHARACTER .)
    IF              reduce using rule 32 (expression -> CHARACTER .)
    TYPE            reduce using rule 32 (expression -> CHARACTER .)
    ID              reduce using rule 32 (expression -> CHARACTER .)
    NOT             reduce using rule 32 (expression -> CHARACTER .)
    LPAREN          reduce using rule 32 (expression -> CHARACTER .)
    NUMBER          reduce using rule 32 (expression -> CHARACTER .)
    FLOAT_NUMBER    reduce using rule 32 (expression -> CHARACTER .)
    TRUE            reduce using rule 32 (expression -> CHARACTER .)
    FALSE           reduce using rule 32 (expression -> CHARACTER .)
    CHARACTER       reduce using rule 32 (expression -> CHARACTER .)
    INT             reduce using rule 32 (expression -> CHARACTER .)
    FLOAT           reduce using rule 32 (expression -> CHARACTER .)
    CHAR            reduce using rule 32 (expression -> CHARACTER .)
    BOOL            reduce using rule 32 (expression -> CHARACTER .)
    $end            reduce using rule 32 (expression -> CHARACTER .)
    ELSE            reduce using rule 32 (expression -> CHARACTER .)
    RBRACE          reduce using rule 32 (expression -> CHARACTER .)
    RBRACKET        reduce using rule 32 (expression -> CHARACTER .)
    COMMA           reduce using rule 32 (expression -> CHARACTER .)


state 20

    (10) base_type -> INT .

    LBRACKET        reduce using rule 10 (base_type -> INT .)
    ID              reduce using rule 10 (base_type -> INT .)


state 21

    (11) base_type -> FLOAT .

    LBRACKET        reduce using rule 11 (base_type -> FLOAT .)
    ID              reduce using rule 11 (base_type -> FLOAT .)


state 22

    (12) base_type -> CHAR .

    LBRACKET        reduce using rule 12 (base_type -> CHAR .)
    ID              reduce using rule 12 (base_type -> CHAR .)


state 23

    (13) base_type -> BOOL .

    LBRACKET        reduce using rule 13 (base_type -> BOOL .)
    ID              reduce using rule 13 (base_type -> BOOL .)


state 24

    (3) statement_list -> statement_list statement .

    DEF             reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 3 (statement_list -> statement_list statement .)
    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 3 (statement_list -> statement_list statement .)
    NOT             reduce using rule 3 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement_list statement .)
    FLOAT_NUMBER    reduce using rule 3 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 3 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 3 (statement_list -> statement_list statement .)
    CHARACTER       reduce using rule 3 (statement_list -> statement_list statement .)
    INT             reduce using rule 3 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 3 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 3 (statement_list -> statement_list statement .)
    BOOL            reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 25

    (4) statement -> type id_list .
    (5) statement -> type id_list . ASSIGN expression
    (7) id_list -> id_list . COMMA ID

    DEF             reduce using rule 4 (statement -> type id_list .)
    RETURN          reduce using rule 4 (statement -> type id_list .)
    IF              reduce using rule 4 (statement -> type id_list .)
    TYPE            reduce using rule 4 (statement -> type id_list .)
    ID              reduce using rule 4 (statement -> type id_list .)
    MINUS           reduce using rule 4 (statement -> type id_list .)
    NOT             reduce using rule 4 (statement -> type id_list .)
    LPAREN          reduce using rule 4 (statement -> type id_list .)
    NUMBER          reduce using rule 4 (statement -> type id_list .)
    FLOAT_NUMBER    reduce using rule 4 (statement -> type id_list .)
    TRUE            reduce using rule 4 (statement -> type id_list .)
    FALSE           reduce using rule 4 (statement -> type id_list .)
    CHARACTER       reduce using rule 4 (statement -> type id_list .)
    INT             reduce using rule 4 (statement -> type id_list .)
    FLOAT           reduce using rule 4 (statement -> type id_list .)
    CHAR            reduce using rule 4 (statement -> type id_list .)
    BOOL            reduce using rule 4 (statement -> type id_list .)
    $end            reduce using rule 4 (statement -> type id_list .)
    ELSE            reduce using rule 4 (statement -> type id_list .)
    RBRACE          reduce using rule 4 (statement -> type id_list .)
    ASSIGN          shift and go to state 52
    COMMA           shift and go to state 53


state 26

    (6) id_list -> ID .

    ASSIGN          reduce using rule 6 (id_list -> ID .)
    COMMA           reduce using rule 6 (id_list -> ID .)
    DEF             reduce using rule 6 (id_list -> ID .)
    RETURN          reduce using rule 6 (id_list -> ID .)
    IF              reduce using rule 6 (id_list -> ID .)
    TYPE            reduce using rule 6 (id_list -> ID .)
    ID              reduce using rule 6 (id_list -> ID .)
    MINUS           reduce using rule 6 (id_list -> ID .)
    NOT             reduce using rule 6 (id_list -> ID .)
    LPAREN          reduce using rule 6 (id_list -> ID .)
    NUMBER          reduce using rule 6 (id_list -> ID .)
    FLOAT_NUMBER    reduce using rule 6 (id_list -> ID .)
    TRUE            reduce using rule 6 (id_list -> ID .)
    FALSE           reduce using rule 6 (id_list -> ID .)
    CHARACTER       reduce using rule 6 (id_list -> ID .)
    INT             reduce using rule 6 (id_list -> ID .)
    FLOAT           reduce using rule 6 (id_list -> ID .)
    CHAR            reduce using rule 6 (id_list -> ID .)
    BOOL            reduce using rule 6 (id_list -> ID .)
    $end            reduce using rule 6 (id_list -> ID .)
    ELSE            reduce using rule 6 (id_list -> ID .)
    RBRACE          reduce using rule 6 (id_list -> ID .)


state 27

    (35) statement -> expression ASSIGN . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 54

state 28

    (14) expression -> expression PLUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 55

state 29

    (15) expression -> expression MINUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 56

state 30

    (16) expression -> expression TIMES . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 57

state 31

    (17) expression -> expression DIVIDE . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 58

state 32

    (18) expression -> expression EQ . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 59

state 33

    (19) expression -> expression GT . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 60

state 34

    (20) expression -> expression GE . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 61

state 35

    (21) expression -> expression LT . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 62

state 36

    (22) expression -> expression LE . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 63

state 37

    (23) expression -> expression AND . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 64

state 38

    (24) expression -> expression OR . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 65

state 39

    (34) expression -> expression LBRACKET . expression RBRACKET
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 66

state 40

    (51) expression -> expression DOT . ID

    ID              shift and go to state 67


state 41

    (36) statement -> DEF type . ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE

    ID              shift and go to state 68


state 42

    (47) statement -> ID ID .

    DEF             reduce using rule 47 (statement -> ID ID .)
    RETURN          reduce using rule 47 (statement -> ID ID .)
    IF              reduce using rule 47 (statement -> ID ID .)
    TYPE            reduce using rule 47 (statement -> ID ID .)
    ID              reduce using rule 47 (statement -> ID ID .)
    MINUS           reduce using rule 47 (statement -> ID ID .)
    NOT             reduce using rule 47 (statement -> ID ID .)
    LPAREN          reduce using rule 47 (statement -> ID ID .)
    NUMBER          reduce using rule 47 (statement -> ID ID .)
    FLOAT_NUMBER    reduce using rule 47 (statement -> ID ID .)
    TRUE            reduce using rule 47 (statement -> ID ID .)
    FALSE           reduce using rule 47 (statement -> ID ID .)
    CHARACTER       reduce using rule 47 (statement -> ID ID .)
    INT             reduce using rule 47 (statement -> ID ID .)
    FLOAT           reduce using rule 47 (statement -> ID ID .)
    CHAR            reduce using rule 47 (statement -> ID ID .)
    BOOL            reduce using rule 47 (statement -> ID ID .)
    $end            reduce using rule 47 (statement -> ID ID .)
    ELSE            reduce using rule 47 (statement -> ID ID .)
    RBRACE          reduce using rule 47 (statement -> ID ID .)


state 43

    (42) expression -> ID LPAREN . arg_list RPAREN
    (43) arg_list -> . expression
    (44) arg_list -> . arg_list COMMA expression
    (45) arg_list -> . empty
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID
    (52) empty -> .

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45
    RPAREN          reduce using rule 52 (empty -> .)
    COMMA           reduce using rule 52 (empty -> .)

    arg_list                       shift and go to state 69
    expression                     shift and go to state 70
    empty                          shift and go to state 71

state 44

    (27) expression -> LPAREN expression . RPAREN
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    RPAREN          shift and go to state 72
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    LBRACKET        shift and go to state 39
    DOT             shift and go to state 40


state 45

    (33) expression -> ID .
    (42) expression -> ID . LPAREN arg_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 33 (expression -> ID .)
    PLUS            reduce using rule 33 (expression -> ID .)
    MINUS           reduce using rule 33 (expression -> ID .)
    TIMES           reduce using rule 33 (expression -> ID .)
    DIVIDE          reduce using rule 33 (expression -> ID .)
    EQ              reduce using rule 33 (expression -> ID .)
    GT              reduce using rule 33 (expression -> ID .)
    GE              reduce using rule 33 (expression -> ID .)
    LT              reduce using rule 33 (expression -> ID .)
    LE              reduce using rule 33 (expression -> ID .)
    AND             reduce using rule 33 (expression -> ID .)
    OR              reduce using rule 33 (expression -> ID .)
    LBRACKET        reduce using rule 33 (expression -> ID .)
    DOT             reduce using rule 33 (expression -> ID .)
    DEF             reduce using rule 33 (expression -> ID .)
    RETURN          reduce using rule 33 (expression -> ID .)
    IF              reduce using rule 33 (expression -> ID .)
    TYPE            reduce using rule 33 (expression -> ID .)
    ID              reduce using rule 33 (expression -> ID .)
    NOT             reduce using rule 33 (expression -> ID .)
    NUMBER          reduce using rule 33 (expression -> ID .)
    FLOAT_NUMBER    reduce using rule 33 (expression -> ID .)
    TRUE            reduce using rule 33 (expression -> ID .)
    FALSE           reduce using rule 33 (expression -> ID .)
    CHARACTER       reduce using rule 33 (expression -> ID .)
    INT             reduce using rule 33 (expression -> ID .)
    FLOAT           reduce using rule 33 (expression -> ID .)
    CHAR            reduce using rule 33 (expression -> ID .)
    BOOL            reduce using rule 33 (expression -> ID .)
    $end            reduce using rule 33 (expression -> ID .)
    ELSE            reduce using rule 33 (expression -> ID .)
    RBRACE          reduce using rule 33 (expression -> ID .)
    ASSIGN          reduce using rule 33 (expression -> ID .)
    RBRACKET        reduce using rule 33 (expression -> ID .)
    COMMA           reduce using rule 33 (expression -> ID .)
    LPAREN          shift and go to state 43

  ! LPAREN          [ reduce using rule 33 (expression -> ID .) ]


state 46

    (40) statement -> RETURN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

  ! shift/reduce conflict for MINUS resolved as shift
    DEF             reduce using rule 40 (statement -> RETURN expression .)
    RETURN          reduce using rule 40 (statement -> RETURN expression .)
    IF              reduce using rule 40 (statement -> RETURN expression .)
    TYPE            reduce using rule 40 (statement -> RETURN expression .)
    ID              reduce using rule 40 (statement -> RETURN expression .)
    NOT             reduce using rule 40 (statement -> RETURN expression .)
    LPAREN          reduce using rule 40 (statement -> RETURN expression .)
    NUMBER          reduce using rule 40 (statement -> RETURN expression .)
    FLOAT_NUMBER    reduce using rule 40 (statement -> RETURN expression .)
    TRUE            reduce using rule 40 (statement -> RETURN expression .)
    FALSE           reduce using rule 40 (statement -> RETURN expression .)
    CHARACTER       reduce using rule 40 (statement -> RETURN expression .)
    INT             reduce using rule 40 (statement -> RETURN expression .)
    FLOAT           reduce using rule 40 (statement -> RETURN expression .)
    CHAR            reduce using rule 40 (statement -> RETURN expression .)
    BOOL            reduce using rule 40 (statement -> RETURN expression .)
    $end            reduce using rule 40 (statement -> RETURN expression .)
    ELSE            reduce using rule 40 (statement -> RETURN expression .)
    RBRACE          reduce using rule 40 (statement -> RETURN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    LBRACKET        shift and go to state 39
    DOT             shift and go to state 40

  ! MINUS           [ reduce using rule 40 (statement -> RETURN expression .) ]


state 47

    (41) statement -> IF expression . statement ELSE statement
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID
    (4) statement -> . type id_list
    (5) statement -> . type id_list ASSIGN expression
    (35) statement -> . expression ASSIGN expression
    (36) statement -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (40) statement -> . RETURN expression
    (41) statement -> . IF expression statement ELSE statement
    (46) statement -> . TYPE ID COLON LBRACE field_list RBRACE
    (47) statement -> . ID ID
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    PLUS            shift and go to state 28
    MINUS           shift and go to state 74
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    LBRACKET        shift and go to state 39
    DOT             shift and go to state 40
    DEF             shift and go to state 6
    RETURN          shift and go to state 9
    IF              shift and go to state 10
    TYPE            shift and go to state 11
    ID              shift and go to state 7
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    expression                     shift and go to state 5
    statement                      shift and go to state 73
    type                           shift and go to state 4
    base_type                      shift and go to state 12

state 48

    (46) statement -> TYPE ID . COLON LBRACE field_list RBRACE

    COLON           shift and go to state 75


state 49

    (9) type -> base_type LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 76


state 50

    (25) expression -> MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 25 (expression -> MINUS expression .)
    PLUS            reduce using rule 25 (expression -> MINUS expression .)
    MINUS           reduce using rule 25 (expression -> MINUS expression .)
    TIMES           reduce using rule 25 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 25 (expression -> MINUS expression .)
    EQ              reduce using rule 25 (expression -> MINUS expression .)
    GT              reduce using rule 25 (expression -> MINUS expression .)
    GE              reduce using rule 25 (expression -> MINUS expression .)
    LT              reduce using rule 25 (expression -> MINUS expression .)
    LE              reduce using rule 25 (expression -> MINUS expression .)
    AND             reduce using rule 25 (expression -> MINUS expression .)
    OR              reduce using rule 25 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 25 (expression -> MINUS expression .)
    DOT             reduce using rule 25 (expression -> MINUS expression .)
    RPAREN          reduce using rule 25 (expression -> MINUS expression .)
    DEF             reduce using rule 25 (expression -> MINUS expression .)
    RETURN          reduce using rule 25 (expression -> MINUS expression .)
    IF              reduce using rule 25 (expression -> MINUS expression .)
    TYPE            reduce using rule 25 (expression -> MINUS expression .)
    ID              reduce using rule 25 (expression -> MINUS expression .)
    NOT             reduce using rule 25 (expression -> MINUS expression .)
    LPAREN          reduce using rule 25 (expression -> MINUS expression .)
    NUMBER          reduce using rule 25 (expression -> MINUS expression .)
    FLOAT_NUMBER    reduce using rule 25 (expression -> MINUS expression .)
    TRUE            reduce using rule 25 (expression -> MINUS expression .)
    FALSE           reduce using rule 25 (expression -> MINUS expression .)
    CHARACTER       reduce using rule 25 (expression -> MINUS expression .)
    INT             reduce using rule 25 (expression -> MINUS expression .)
    FLOAT           reduce using rule 25 (expression -> MINUS expression .)
    CHAR            reduce using rule 25 (expression -> MINUS expression .)
    BOOL            reduce using rule 25 (expression -> MINUS expression .)
    $end            reduce using rule 25 (expression -> MINUS expression .)
    ELSE            reduce using rule 25 (expression -> MINUS expression .)
    RBRACE          reduce using rule 25 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 25 (expression -> MINUS expression .)
    COMMA           reduce using rule 25 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! DIVIDE          [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 51

    (26) expression -> NOT expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 26 (expression -> NOT expression .)
    AND             reduce using rule 26 (expression -> NOT expression .)
    OR              reduce using rule 26 (expression -> NOT expression .)
    LBRACKET        reduce using rule 26 (expression -> NOT expression .)
    DOT             reduce using rule 26 (expression -> NOT expression .)
    RPAREN          reduce using rule 26 (expression -> NOT expression .)
    DEF             reduce using rule 26 (expression -> NOT expression .)
    RETURN          reduce using rule 26 (expression -> NOT expression .)
    IF              reduce using rule 26 (expression -> NOT expression .)
    TYPE            reduce using rule 26 (expression -> NOT expression .)
    ID              reduce using rule 26 (expression -> NOT expression .)
    NOT             reduce using rule 26 (expression -> NOT expression .)
    LPAREN          reduce using rule 26 (expression -> NOT expression .)
    NUMBER          reduce using rule 26 (expression -> NOT expression .)
    FLOAT_NUMBER    reduce using rule 26 (expression -> NOT expression .)
    TRUE            reduce using rule 26 (expression -> NOT expression .)
    FALSE           reduce using rule 26 (expression -> NOT expression .)
    CHARACTER       reduce using rule 26 (expression -> NOT expression .)
    INT             reduce using rule 26 (expression -> NOT expression .)
    FLOAT           reduce using rule 26 (expression -> NOT expression .)
    CHAR            reduce using rule 26 (expression -> NOT expression .)
    BOOL            reduce using rule 26 (expression -> NOT expression .)
    $end            reduce using rule 26 (expression -> NOT expression .)
    ELSE            reduce using rule 26 (expression -> NOT expression .)
    RBRACE          reduce using rule 26 (expression -> NOT expression .)
    RBRACKET        reduce using rule 26 (expression -> NOT expression .)
    COMMA           reduce using rule 26 (expression -> NOT expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36

  ! PLUS            [ reduce using rule 26 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 26 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 26 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 26 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 26 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 26 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 52

    (5) statement -> type id_list ASSIGN . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 77

state 53

    (7) id_list -> id_list COMMA . ID

    ID              shift and go to state 78


state 54

    (35) statement -> expression ASSIGN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

  ! shift/reduce conflict for MINUS resolved as shift
    DEF             reduce using rule 35 (statement -> expression ASSIGN expression .)
    RETURN          reduce using rule 35 (statement -> expression ASSIGN expression .)
    IF              reduce using rule 35 (statement -> expression ASSIGN expression .)
    TYPE            reduce using rule 35 (statement -> expression ASSIGN expression .)
    ID              reduce using rule 35 (statement -> expression ASSIGN expression .)
    NOT             reduce using rule 35 (statement -> expression ASSIGN expression .)
    LPAREN          reduce using rule 35 (statement -> expression ASSIGN expression .)
    NUMBER          reduce using rule 35 (statement -> expression ASSIGN expression .)
    FLOAT_NUMBER    reduce using rule 35 (statement -> expression ASSIGN expression .)
    TRUE            reduce using rule 35 (statement -> expression ASSIGN expression .)
    FALSE           reduce using rule 35 (statement -> expression ASSIGN expression .)
    CHARACTER       reduce using rule 35 (statement -> expression ASSIGN expression .)
    INT             reduce using rule 35 (statement -> expression ASSIGN expression .)
    FLOAT           reduce using rule 35 (statement -> expression ASSIGN expression .)
    CHAR            reduce using rule 35 (statement -> expression ASSIGN expression .)
    BOOL            reduce using rule 35 (statement -> expression ASSIGN expression .)
    $end            reduce using rule 35 (statement -> expression ASSIGN expression .)
    ELSE            reduce using rule 35 (statement -> expression ASSIGN expression .)
    RBRACE          reduce using rule 35 (statement -> expression ASSIGN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    LBRACKET        shift and go to state 39
    DOT             shift and go to state 40

  ! MINUS           [ reduce using rule 35 (statement -> expression ASSIGN expression .) ]


state 55

    (14) expression -> expression PLUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 14 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 14 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 14 (expression -> expression PLUS expression .)
    EQ              reduce using rule 14 (expression -> expression PLUS expression .)
    GT              reduce using rule 14 (expression -> expression PLUS expression .)
    GE              reduce using rule 14 (expression -> expression PLUS expression .)
    LT              reduce using rule 14 (expression -> expression PLUS expression .)
    LE              reduce using rule 14 (expression -> expression PLUS expression .)
    AND             reduce using rule 14 (expression -> expression PLUS expression .)
    OR              reduce using rule 14 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 14 (expression -> expression PLUS expression .)
    DOT             reduce using rule 14 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    DEF             reduce using rule 14 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 14 (expression -> expression PLUS expression .)
    IF              reduce using rule 14 (expression -> expression PLUS expression .)
    TYPE            reduce using rule 14 (expression -> expression PLUS expression .)
    ID              reduce using rule 14 (expression -> expression PLUS expression .)
    NOT             reduce using rule 14 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 14 (expression -> expression PLUS expression .)
    FLOAT_NUMBER    reduce using rule 14 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 14 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 14 (expression -> expression PLUS expression .)
    CHARACTER       reduce using rule 14 (expression -> expression PLUS expression .)
    INT             reduce using rule 14 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 14 (expression -> expression PLUS expression .)
    CHAR            reduce using rule 14 (expression -> expression PLUS expression .)
    BOOL            reduce using rule 14 (expression -> expression PLUS expression .)
    $end            reduce using rule 14 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 14 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 14 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 14 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 14 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 56

    (15) expression -> expression MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 15 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 15 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 15 (expression -> expression MINUS expression .)
    EQ              reduce using rule 15 (expression -> expression MINUS expression .)
    GT              reduce using rule 15 (expression -> expression MINUS expression .)
    GE              reduce using rule 15 (expression -> expression MINUS expression .)
    LT              reduce using rule 15 (expression -> expression MINUS expression .)
    LE              reduce using rule 15 (expression -> expression MINUS expression .)
    AND             reduce using rule 15 (expression -> expression MINUS expression .)
    OR              reduce using rule 15 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 15 (expression -> expression MINUS expression .)
    DOT             reduce using rule 15 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression MINUS expression .)
    DEF             reduce using rule 15 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 15 (expression -> expression MINUS expression .)
    IF              reduce using rule 15 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 15 (expression -> expression MINUS expression .)
    ID              reduce using rule 15 (expression -> expression MINUS expression .)
    NOT             reduce using rule 15 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 15 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 15 (expression -> expression MINUS expression .)
    FLOAT_NUMBER    reduce using rule 15 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 15 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 15 (expression -> expression MINUS expression .)
    CHARACTER       reduce using rule 15 (expression -> expression MINUS expression .)
    INT             reduce using rule 15 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 15 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 15 (expression -> expression MINUS expression .)
    BOOL            reduce using rule 15 (expression -> expression MINUS expression .)
    $end            reduce using rule 15 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 15 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 15 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 15 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 15 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 57

    (16) expression -> expression TIMES expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 16 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 16 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 16 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 16 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 16 (expression -> expression TIMES expression .)
    EQ              reduce using rule 16 (expression -> expression TIMES expression .)
    GT              reduce using rule 16 (expression -> expression TIMES expression .)
    GE              reduce using rule 16 (expression -> expression TIMES expression .)
    LT              reduce using rule 16 (expression -> expression TIMES expression .)
    LE              reduce using rule 16 (expression -> expression TIMES expression .)
    AND             reduce using rule 16 (expression -> expression TIMES expression .)
    OR              reduce using rule 16 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 16 (expression -> expression TIMES expression .)
    DOT             reduce using rule 16 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 16 (expression -> expression TIMES expression .)
    DEF             reduce using rule 16 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 16 (expression -> expression TIMES expression .)
    IF              reduce using rule 16 (expression -> expression TIMES expression .)
    TYPE            reduce using rule 16 (expression -> expression TIMES expression .)
    ID              reduce using rule 16 (expression -> expression TIMES expression .)
    NOT             reduce using rule 16 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 16 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 16 (expression -> expression TIMES expression .)
    FLOAT_NUMBER    reduce using rule 16 (expression -> expression TIMES expression .)
    TRUE            reduce using rule 16 (expression -> expression TIMES expression .)
    FALSE           reduce using rule 16 (expression -> expression TIMES expression .)
    CHARACTER       reduce using rule 16 (expression -> expression TIMES expression .)
    INT             reduce using rule 16 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 16 (expression -> expression TIMES expression .)
    CHAR            reduce using rule 16 (expression -> expression TIMES expression .)
    BOOL            reduce using rule 16 (expression -> expression TIMES expression .)
    $end            reduce using rule 16 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 16 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 16 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 16 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 16 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! DIVIDE          [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 58

    (17) expression -> expression DIVIDE expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 17 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 17 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 17 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 17 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 17 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 17 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 17 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 17 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 17 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 17 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 17 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 17 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 17 (expression -> expression DIVIDE expression .)
    DOT             reduce using rule 17 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 17 (expression -> expression DIVIDE expression .)
    DEF             reduce using rule 17 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 17 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 17 (expression -> expression DIVIDE expression .)
    TYPE            reduce using rule 17 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 17 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 17 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 17 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 17 (expression -> expression DIVIDE expression .)
    FLOAT_NUMBER    reduce using rule 17 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 17 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 17 (expression -> expression DIVIDE expression .)
    CHARACTER       reduce using rule 17 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 17 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 17 (expression -> expression DIVIDE expression .)
    CHAR            reduce using rule 17 (expression -> expression DIVIDE expression .)
    BOOL            reduce using rule 17 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 17 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 17 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 17 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 17 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 17 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! DIVIDE          [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 59

    (18) expression -> expression EQ expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 18 (expression -> expression EQ expression .)
    EQ              reduce using rule 18 (expression -> expression EQ expression .)
    GT              reduce using rule 18 (expression -> expression EQ expression .)
    GE              reduce using rule 18 (expression -> expression EQ expression .)
    LT              reduce using rule 18 (expression -> expression EQ expression .)
    LE              reduce using rule 18 (expression -> expression EQ expression .)
    AND             reduce using rule 18 (expression -> expression EQ expression .)
    OR              reduce using rule 18 (expression -> expression EQ expression .)
    LBRACKET        reduce using rule 18 (expression -> expression EQ expression .)
    DOT             reduce using rule 18 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 18 (expression -> expression EQ expression .)
    DEF             reduce using rule 18 (expression -> expression EQ expression .)
    RETURN          reduce using rule 18 (expression -> expression EQ expression .)
    IF              reduce using rule 18 (expression -> expression EQ expression .)
    TYPE            reduce using rule 18 (expression -> expression EQ expression .)
    ID              reduce using rule 18 (expression -> expression EQ expression .)
    NOT             reduce using rule 18 (expression -> expression EQ expression .)
    LPAREN          reduce using rule 18 (expression -> expression EQ expression .)
    NUMBER          reduce using rule 18 (expression -> expression EQ expression .)
    FLOAT_NUMBER    reduce using rule 18 (expression -> expression EQ expression .)
    TRUE            reduce using rule 18 (expression -> expression EQ expression .)
    FALSE           reduce using rule 18 (expression -> expression EQ expression .)
    CHARACTER       reduce using rule 18 (expression -> expression EQ expression .)
    INT             reduce using rule 18 (expression -> expression EQ expression .)
    FLOAT           reduce using rule 18 (expression -> expression EQ expression .)
    CHAR            reduce using rule 18 (expression -> expression EQ expression .)
    BOOL            reduce using rule 18 (expression -> expression EQ expression .)
    $end            reduce using rule 18 (expression -> expression EQ expression .)
    ELSE            reduce using rule 18 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 18 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 18 (expression -> expression EQ expression .)
    COMMA           reduce using rule 18 (expression -> expression EQ expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! PLUS            [ reduce using rule 18 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 60

    (19) expression -> expression GT expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 19 (expression -> expression GT expression .)
    EQ              reduce using rule 19 (expression -> expression GT expression .)
    GT              reduce using rule 19 (expression -> expression GT expression .)
    GE              reduce using rule 19 (expression -> expression GT expression .)
    LT              reduce using rule 19 (expression -> expression GT expression .)
    LE              reduce using rule 19 (expression -> expression GT expression .)
    AND             reduce using rule 19 (expression -> expression GT expression .)
    OR              reduce using rule 19 (expression -> expression GT expression .)
    LBRACKET        reduce using rule 19 (expression -> expression GT expression .)
    DOT             reduce using rule 19 (expression -> expression GT expression .)
    RPAREN          reduce using rule 19 (expression -> expression GT expression .)
    DEF             reduce using rule 19 (expression -> expression GT expression .)
    RETURN          reduce using rule 19 (expression -> expression GT expression .)
    IF              reduce using rule 19 (expression -> expression GT expression .)
    TYPE            reduce using rule 19 (expression -> expression GT expression .)
    ID              reduce using rule 19 (expression -> expression GT expression .)
    NOT             reduce using rule 19 (expression -> expression GT expression .)
    LPAREN          reduce using rule 19 (expression -> expression GT expression .)
    NUMBER          reduce using rule 19 (expression -> expression GT expression .)
    FLOAT_NUMBER    reduce using rule 19 (expression -> expression GT expression .)
    TRUE            reduce using rule 19 (expression -> expression GT expression .)
    FALSE           reduce using rule 19 (expression -> expression GT expression .)
    CHARACTER       reduce using rule 19 (expression -> expression GT expression .)
    INT             reduce using rule 19 (expression -> expression GT expression .)
    FLOAT           reduce using rule 19 (expression -> expression GT expression .)
    CHAR            reduce using rule 19 (expression -> expression GT expression .)
    BOOL            reduce using rule 19 (expression -> expression GT expression .)
    $end            reduce using rule 19 (expression -> expression GT expression .)
    ELSE            reduce using rule 19 (expression -> expression GT expression .)
    RBRACE          reduce using rule 19 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 19 (expression -> expression GT expression .)
    COMMA           reduce using rule 19 (expression -> expression GT expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! PLUS            [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression GT expression .) ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 61

    (20) expression -> expression GE expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 20 (expression -> expression GE expression .)
    EQ              reduce using rule 20 (expression -> expression GE expression .)
    GT              reduce using rule 20 (expression -> expression GE expression .)
    GE              reduce using rule 20 (expression -> expression GE expression .)
    LT              reduce using rule 20 (expression -> expression GE expression .)
    LE              reduce using rule 20 (expression -> expression GE expression .)
    AND             reduce using rule 20 (expression -> expression GE expression .)
    OR              reduce using rule 20 (expression -> expression GE expression .)
    LBRACKET        reduce using rule 20 (expression -> expression GE expression .)
    DOT             reduce using rule 20 (expression -> expression GE expression .)
    RPAREN          reduce using rule 20 (expression -> expression GE expression .)
    DEF             reduce using rule 20 (expression -> expression GE expression .)
    RETURN          reduce using rule 20 (expression -> expression GE expression .)
    IF              reduce using rule 20 (expression -> expression GE expression .)
    TYPE            reduce using rule 20 (expression -> expression GE expression .)
    ID              reduce using rule 20 (expression -> expression GE expression .)
    NOT             reduce using rule 20 (expression -> expression GE expression .)
    LPAREN          reduce using rule 20 (expression -> expression GE expression .)
    NUMBER          reduce using rule 20 (expression -> expression GE expression .)
    FLOAT_NUMBER    reduce using rule 20 (expression -> expression GE expression .)
    TRUE            reduce using rule 20 (expression -> expression GE expression .)
    FALSE           reduce using rule 20 (expression -> expression GE expression .)
    CHARACTER       reduce using rule 20 (expression -> expression GE expression .)
    INT             reduce using rule 20 (expression -> expression GE expression .)
    FLOAT           reduce using rule 20 (expression -> expression GE expression .)
    CHAR            reduce using rule 20 (expression -> expression GE expression .)
    BOOL            reduce using rule 20 (expression -> expression GE expression .)
    $end            reduce using rule 20 (expression -> expression GE expression .)
    ELSE            reduce using rule 20 (expression -> expression GE expression .)
    RBRACE          reduce using rule 20 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 20 (expression -> expression GE expression .)
    COMMA           reduce using rule 20 (expression -> expression GE expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! PLUS            [ reduce using rule 20 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression GE expression .) ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 62

    (21) expression -> expression LT expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 21 (expression -> expression LT expression .)
    EQ              reduce using rule 21 (expression -> expression LT expression .)
    GT              reduce using rule 21 (expression -> expression LT expression .)
    GE              reduce using rule 21 (expression -> expression LT expression .)
    LT              reduce using rule 21 (expression -> expression LT expression .)
    LE              reduce using rule 21 (expression -> expression LT expression .)
    AND             reduce using rule 21 (expression -> expression LT expression .)
    OR              reduce using rule 21 (expression -> expression LT expression .)
    LBRACKET        reduce using rule 21 (expression -> expression LT expression .)
    DOT             reduce using rule 21 (expression -> expression LT expression .)
    RPAREN          reduce using rule 21 (expression -> expression LT expression .)
    DEF             reduce using rule 21 (expression -> expression LT expression .)
    RETURN          reduce using rule 21 (expression -> expression LT expression .)
    IF              reduce using rule 21 (expression -> expression LT expression .)
    TYPE            reduce using rule 21 (expression -> expression LT expression .)
    ID              reduce using rule 21 (expression -> expression LT expression .)
    NOT             reduce using rule 21 (expression -> expression LT expression .)
    LPAREN          reduce using rule 21 (expression -> expression LT expression .)
    NUMBER          reduce using rule 21 (expression -> expression LT expression .)
    FLOAT_NUMBER    reduce using rule 21 (expression -> expression LT expression .)
    TRUE            reduce using rule 21 (expression -> expression LT expression .)
    FALSE           reduce using rule 21 (expression -> expression LT expression .)
    CHARACTER       reduce using rule 21 (expression -> expression LT expression .)
    INT             reduce using rule 21 (expression -> expression LT expression .)
    FLOAT           reduce using rule 21 (expression -> expression LT expression .)
    CHAR            reduce using rule 21 (expression -> expression LT expression .)
    BOOL            reduce using rule 21 (expression -> expression LT expression .)
    $end            reduce using rule 21 (expression -> expression LT expression .)
    ELSE            reduce using rule 21 (expression -> expression LT expression .)
    RBRACE          reduce using rule 21 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 21 (expression -> expression LT expression .)
    COMMA           reduce using rule 21 (expression -> expression LT expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! PLUS            [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 63

    (22) expression -> expression LE expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 22 (expression -> expression LE expression .)
    EQ              reduce using rule 22 (expression -> expression LE expression .)
    GT              reduce using rule 22 (expression -> expression LE expression .)
    GE              reduce using rule 22 (expression -> expression LE expression .)
    LT              reduce using rule 22 (expression -> expression LE expression .)
    LE              reduce using rule 22 (expression -> expression LE expression .)
    AND             reduce using rule 22 (expression -> expression LE expression .)
    OR              reduce using rule 22 (expression -> expression LE expression .)
    LBRACKET        reduce using rule 22 (expression -> expression LE expression .)
    DOT             reduce using rule 22 (expression -> expression LE expression .)
    RPAREN          reduce using rule 22 (expression -> expression LE expression .)
    DEF             reduce using rule 22 (expression -> expression LE expression .)
    RETURN          reduce using rule 22 (expression -> expression LE expression .)
    IF              reduce using rule 22 (expression -> expression LE expression .)
    TYPE            reduce using rule 22 (expression -> expression LE expression .)
    ID              reduce using rule 22 (expression -> expression LE expression .)
    NOT             reduce using rule 22 (expression -> expression LE expression .)
    LPAREN          reduce using rule 22 (expression -> expression LE expression .)
    NUMBER          reduce using rule 22 (expression -> expression LE expression .)
    FLOAT_NUMBER    reduce using rule 22 (expression -> expression LE expression .)
    TRUE            reduce using rule 22 (expression -> expression LE expression .)
    FALSE           reduce using rule 22 (expression -> expression LE expression .)
    CHARACTER       reduce using rule 22 (expression -> expression LE expression .)
    INT             reduce using rule 22 (expression -> expression LE expression .)
    FLOAT           reduce using rule 22 (expression -> expression LE expression .)
    CHAR            reduce using rule 22 (expression -> expression LE expression .)
    BOOL            reduce using rule 22 (expression -> expression LE expression .)
    $end            reduce using rule 22 (expression -> expression LE expression .)
    ELSE            reduce using rule 22 (expression -> expression LE expression .)
    RBRACE          reduce using rule 22 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 22 (expression -> expression LE expression .)
    COMMA           reduce using rule 22 (expression -> expression LE expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! PLUS            [ reduce using rule 22 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression LE expression .) ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 64

    (23) expression -> expression AND expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 23 (expression -> expression AND expression .)
    AND             reduce using rule 23 (expression -> expression AND expression .)
    OR              reduce using rule 23 (expression -> expression AND expression .)
    LBRACKET        reduce using rule 23 (expression -> expression AND expression .)
    DOT             reduce using rule 23 (expression -> expression AND expression .)
    RPAREN          reduce using rule 23 (expression -> expression AND expression .)
    DEF             reduce using rule 23 (expression -> expression AND expression .)
    RETURN          reduce using rule 23 (expression -> expression AND expression .)
    IF              reduce using rule 23 (expression -> expression AND expression .)
    TYPE            reduce using rule 23 (expression -> expression AND expression .)
    ID              reduce using rule 23 (expression -> expression AND expression .)
    NOT             reduce using rule 23 (expression -> expression AND expression .)
    LPAREN          reduce using rule 23 (expression -> expression AND expression .)
    NUMBER          reduce using rule 23 (expression -> expression AND expression .)
    FLOAT_NUMBER    reduce using rule 23 (expression -> expression AND expression .)
    TRUE            reduce using rule 23 (expression -> expression AND expression .)
    FALSE           reduce using rule 23 (expression -> expression AND expression .)
    CHARACTER       reduce using rule 23 (expression -> expression AND expression .)
    INT             reduce using rule 23 (expression -> expression AND expression .)
    FLOAT           reduce using rule 23 (expression -> expression AND expression .)
    CHAR            reduce using rule 23 (expression -> expression AND expression .)
    BOOL            reduce using rule 23 (expression -> expression AND expression .)
    $end            reduce using rule 23 (expression -> expression AND expression .)
    ELSE            reduce using rule 23 (expression -> expression AND expression .)
    RBRACE          reduce using rule 23 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 23 (expression -> expression AND expression .)
    COMMA           reduce using rule 23 (expression -> expression AND expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36

  ! PLUS            [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 23 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 65

    (24) expression -> expression OR expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    ASSIGN          reduce using rule 24 (expression -> expression OR expression .)
    OR              reduce using rule 24 (expression -> expression OR expression .)
    LBRACKET        reduce using rule 24 (expression -> expression OR expression .)
    DOT             reduce using rule 24 (expression -> expression OR expression .)
    RPAREN          reduce using rule 24 (expression -> expression OR expression .)
    DEF             reduce using rule 24 (expression -> expression OR expression .)
    RETURN          reduce using rule 24 (expression -> expression OR expression .)
    IF              reduce using rule 24 (expression -> expression OR expression .)
    TYPE            reduce using rule 24 (expression -> expression OR expression .)
    ID              reduce using rule 24 (expression -> expression OR expression .)
    NOT             reduce using rule 24 (expression -> expression OR expression .)
    LPAREN          reduce using rule 24 (expression -> expression OR expression .)
    NUMBER          reduce using rule 24 (expression -> expression OR expression .)
    FLOAT_NUMBER    reduce using rule 24 (expression -> expression OR expression .)
    TRUE            reduce using rule 24 (expression -> expression OR expression .)
    FALSE           reduce using rule 24 (expression -> expression OR expression .)
    CHARACTER       reduce using rule 24 (expression -> expression OR expression .)
    INT             reduce using rule 24 (expression -> expression OR expression .)
    FLOAT           reduce using rule 24 (expression -> expression OR expression .)
    CHAR            reduce using rule 24 (expression -> expression OR expression .)
    BOOL            reduce using rule 24 (expression -> expression OR expression .)
    $end            reduce using rule 24 (expression -> expression OR expression .)
    ELSE            reduce using rule 24 (expression -> expression OR expression .)
    RBRACE          reduce using rule 24 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 24 (expression -> expression OR expression .)
    COMMA           reduce using rule 24 (expression -> expression OR expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36
    AND             shift and go to state 37

  ! PLUS            [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 66

    (34) expression -> expression LBRACKET expression . RBRACKET
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    RBRACKET        shift and go to state 79
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    LBRACKET        shift and go to state 39
    DOT             shift and go to state 40


state 67

    (51) expression -> expression DOT ID .

    ASSIGN          reduce using rule 51 (expression -> expression DOT ID .)
    PLUS            reduce using rule 51 (expression -> expression DOT ID .)
    MINUS           reduce using rule 51 (expression -> expression DOT ID .)
    TIMES           reduce using rule 51 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 51 (expression -> expression DOT ID .)
    EQ              reduce using rule 51 (expression -> expression DOT ID .)
    GT              reduce using rule 51 (expression -> expression DOT ID .)
    GE              reduce using rule 51 (expression -> expression DOT ID .)
    LT              reduce using rule 51 (expression -> expression DOT ID .)
    LE              reduce using rule 51 (expression -> expression DOT ID .)
    AND             reduce using rule 51 (expression -> expression DOT ID .)
    OR              reduce using rule 51 (expression -> expression DOT ID .)
    LBRACKET        reduce using rule 51 (expression -> expression DOT ID .)
    DOT             reduce using rule 51 (expression -> expression DOT ID .)
    RPAREN          reduce using rule 51 (expression -> expression DOT ID .)
    DEF             reduce using rule 51 (expression -> expression DOT ID .)
    RETURN          reduce using rule 51 (expression -> expression DOT ID .)
    IF              reduce using rule 51 (expression -> expression DOT ID .)
    TYPE            reduce using rule 51 (expression -> expression DOT ID .)
    ID              reduce using rule 51 (expression -> expression DOT ID .)
    NOT             reduce using rule 51 (expression -> expression DOT ID .)
    LPAREN          reduce using rule 51 (expression -> expression DOT ID .)
    NUMBER          reduce using rule 51 (expression -> expression DOT ID .)
    FLOAT_NUMBER    reduce using rule 51 (expression -> expression DOT ID .)
    TRUE            reduce using rule 51 (expression -> expression DOT ID .)
    FALSE           reduce using rule 51 (expression -> expression DOT ID .)
    CHARACTER       reduce using rule 51 (expression -> expression DOT ID .)
    INT             reduce using rule 51 (expression -> expression DOT ID .)
    FLOAT           reduce using rule 51 (expression -> expression DOT ID .)
    CHAR            reduce using rule 51 (expression -> expression DOT ID .)
    BOOL            reduce using rule 51 (expression -> expression DOT ID .)
    $end            reduce using rule 51 (expression -> expression DOT ID .)
    ELSE            reduce using rule 51 (expression -> expression DOT ID .)
    RBRACE          reduce using rule 51 (expression -> expression DOT ID .)
    RBRACKET        reduce using rule 51 (expression -> expression DOT ID .)
    COMMA           reduce using rule 51 (expression -> expression DOT ID .)


state 68

    (36) statement -> DEF type ID . LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE

    LPAREN          shift and go to state 80


state 69

    (42) expression -> ID LPAREN arg_list . RPAREN
    (44) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 81
    COMMA           shift and go to state 82


state 70

    (43) arg_list -> expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    RPAREN          reduce using rule 43 (arg_list -> expression .)
    COMMA           reduce using rule 43 (arg_list -> expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    LBRACKET        shift and go to state 39
    DOT             shift and go to state 40


state 71

    (45) arg_list -> empty .

    RPAREN          reduce using rule 45 (arg_list -> empty .)
    COMMA           reduce using rule 45 (arg_list -> empty .)


state 72

    (27) expression -> LPAREN expression RPAREN .

    ASSIGN          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    DEF             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    TYPE            reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    FLOAT_NUMBER    reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    CHARACTER       reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    INT             reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    BOOL            reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 27 (expression -> LPAREN expression RPAREN .)


state 73

    (41) statement -> IF expression statement . ELSE statement

    ELSE            shift and go to state 83


state 74

    (15) expression -> expression MINUS . expression
    (25) expression -> MINUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 84

state 75

    (46) statement -> TYPE ID COLON . LBRACE field_list RBRACE

    LBRACE          shift and go to state 85


state 76

    (9) type -> base_type LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 86


state 77

    (5) statement -> type id_list ASSIGN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

  ! shift/reduce conflict for MINUS resolved as shift
    DEF             reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    RETURN          reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    IF              reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    TYPE            reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    ID              reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    NOT             reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    LPAREN          reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    NUMBER          reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    FLOAT_NUMBER    reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    TRUE            reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    FALSE           reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    CHARACTER       reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    INT             reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    FLOAT           reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    CHAR            reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    BOOL            reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    $end            reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    ELSE            reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    RBRACE          reduce using rule 5 (statement -> type id_list ASSIGN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    LBRACKET        shift and go to state 39
    DOT             shift and go to state 40

  ! MINUS           [ reduce using rule 5 (statement -> type id_list ASSIGN expression .) ]


state 78

    (7) id_list -> id_list COMMA ID .

    ASSIGN          reduce using rule 7 (id_list -> id_list COMMA ID .)
    COMMA           reduce using rule 7 (id_list -> id_list COMMA ID .)
    DEF             reduce using rule 7 (id_list -> id_list COMMA ID .)
    RETURN          reduce using rule 7 (id_list -> id_list COMMA ID .)
    IF              reduce using rule 7 (id_list -> id_list COMMA ID .)
    TYPE            reduce using rule 7 (id_list -> id_list COMMA ID .)
    ID              reduce using rule 7 (id_list -> id_list COMMA ID .)
    MINUS           reduce using rule 7 (id_list -> id_list COMMA ID .)
    NOT             reduce using rule 7 (id_list -> id_list COMMA ID .)
    LPAREN          reduce using rule 7 (id_list -> id_list COMMA ID .)
    NUMBER          reduce using rule 7 (id_list -> id_list COMMA ID .)
    FLOAT_NUMBER    reduce using rule 7 (id_list -> id_list COMMA ID .)
    TRUE            reduce using rule 7 (id_list -> id_list COMMA ID .)
    FALSE           reduce using rule 7 (id_list -> id_list COMMA ID .)
    CHARACTER       reduce using rule 7 (id_list -> id_list COMMA ID .)
    INT             reduce using rule 7 (id_list -> id_list COMMA ID .)
    FLOAT           reduce using rule 7 (id_list -> id_list COMMA ID .)
    CHAR            reduce using rule 7 (id_list -> id_list COMMA ID .)
    BOOL            reduce using rule 7 (id_list -> id_list COMMA ID .)
    $end            reduce using rule 7 (id_list -> id_list COMMA ID .)
    ELSE            reduce using rule 7 (id_list -> id_list COMMA ID .)
    RBRACE          reduce using rule 7 (id_list -> id_list COMMA ID .)


state 79

    (34) expression -> expression LBRACKET expression RBRACKET .

    ASSIGN          reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    GE              reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    DEF             reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    RETURN          reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    IF              reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    TYPE            reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    ID              reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    NOT             reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    NUMBER          reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    FLOAT_NUMBER    reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    TRUE            reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    FALSE           reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    CHARACTER       reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    INT             reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    FLOAT           reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    CHAR            reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    BOOL            reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    $end            reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)


state 80

    (36) statement -> DEF type ID LPAREN . param_list RPAREN COLON LBRACE statement_list RBRACE
    (37) param_list -> . param
    (38) param_list -> . param_list SEMICOLON param
    (39) param -> . type ID
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    type                           shift and go to state 87
    param_list                     shift and go to state 88
    param                          shift and go to state 89
    base_type                      shift and go to state 12

state 81

    (42) expression -> ID LPAREN arg_list RPAREN .

    ASSIGN          reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    EQ              reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    GT              reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    GE              reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    LT              reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    LE              reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    AND             reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    OR              reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    LBRACKET        reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    DOT             reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    DEF             reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    RETURN          reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    IF              reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    TYPE            reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    ID              reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    NOT             reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    LPAREN          reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    NUMBER          reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    FLOAT_NUMBER    reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    TRUE            reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    FALSE           reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    CHARACTER       reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    INT             reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    FLOAT           reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    CHAR            reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    BOOL            reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    $end            reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    ELSE            reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    RBRACE          reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    RBRACKET        reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 42 (expression -> ID LPAREN arg_list RPAREN .)


state 82

    (44) arg_list -> arg_list COMMA . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID

    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    ID              shift and go to state 45

    expression                     shift and go to state 90

state 83

    (41) statement -> IF expression statement ELSE . statement
    (4) statement -> . type id_list
    (5) statement -> . type id_list ASSIGN expression
    (35) statement -> . expression ASSIGN expression
    (36) statement -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (40) statement -> . RETURN expression
    (41) statement -> . IF expression statement ELSE statement
    (46) statement -> . TYPE ID COLON LBRACE field_list RBRACE
    (47) statement -> . ID ID
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    DEF             shift and go to state 6
    RETURN          shift and go to state 9
    IF              shift and go to state 10
    TYPE            shift and go to state 11
    ID              shift and go to state 7
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    expression                     shift and go to state 5
    statement                      shift and go to state 91
    type                           shift and go to state 4
    base_type                      shift and go to state 12

state 84

    (15) expression -> expression MINUS expression .
    (25) expression -> MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

  ! reduce/reduce conflict for PLUS resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for TIMES resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for EQ resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for GT resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for GE resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for LT resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for LE resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for OR resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 15 (expression -> expression MINUS expression .)
  ! reduce/reduce conflict for DOT resolved using rule 15 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 15 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 15 (expression -> expression MINUS expression .)
    EQ              reduce using rule 15 (expression -> expression MINUS expression .)
    GT              reduce using rule 15 (expression -> expression MINUS expression .)
    GE              reduce using rule 15 (expression -> expression MINUS expression .)
    LT              reduce using rule 15 (expression -> expression MINUS expression .)
    LE              reduce using rule 15 (expression -> expression MINUS expression .)
    AND             reduce using rule 15 (expression -> expression MINUS expression .)
    OR              reduce using rule 15 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 15 (expression -> expression MINUS expression .)
    DOT             reduce using rule 15 (expression -> expression MINUS expression .)
    DEF             reduce using rule 15 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 15 (expression -> expression MINUS expression .)
    IF              reduce using rule 15 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 15 (expression -> expression MINUS expression .)
    ID              reduce using rule 15 (expression -> expression MINUS expression .)
    NOT             reduce using rule 15 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 15 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 15 (expression -> expression MINUS expression .)
    FLOAT_NUMBER    reduce using rule 15 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 15 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 15 (expression -> expression MINUS expression .)
    CHARACTER       reduce using rule 15 (expression -> expression MINUS expression .)
    INT             reduce using rule 15 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 15 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 15 (expression -> expression MINUS expression .)
    BOOL            reduce using rule 15 (expression -> expression MINUS expression .)
    ASSIGN          reduce using rule 25 (expression -> MINUS expression .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! EQ              [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! GT              [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! GE              [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! LT              [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! LE              [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! AND             [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! OR              [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! DOT             [ reduce using rule 25 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! EQ              [ shift and go to state 32 ]
  ! GT              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! LE              [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! LBRACKET        [ shift and go to state 39 ]
  ! DOT             [ shift and go to state 40 ]


state 85

    (46) statement -> TYPE ID COLON LBRACE . field_list RBRACE
    (48) field_list -> . field
    (49) field_list -> . field_list field
    (50) field -> . type ID
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    field_list                     shift and go to state 92
    field                          shift and go to state 93
    type                           shift and go to state 94
    base_type                      shift and go to state 12

state 86

    (9) type -> base_type LBRACKET NUMBER RBRACKET .

    ID              reduce using rule 9 (type -> base_type LBRACKET NUMBER RBRACKET .)


state 87

    (39) param -> type . ID

    ID              shift and go to state 95


state 88

    (36) statement -> DEF type ID LPAREN param_list . RPAREN COLON LBRACE statement_list RBRACE
    (38) param_list -> param_list . SEMICOLON param

    RPAREN          shift and go to state 96
    SEMICOLON       shift and go to state 97


state 89

    (37) param_list -> param .

    RPAREN          reduce using rule 37 (param_list -> param .)
    SEMICOLON       reduce using rule 37 (param_list -> param .)


state 90

    (44) arg_list -> arg_list COMMA expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . EQ expression
    (19) expression -> expression . GT expression
    (20) expression -> expression . GE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LE expression
    (23) expression -> expression . AND expression
    (24) expression -> expression . OR expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (51) expression -> expression . DOT ID

    RPAREN          reduce using rule 44 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 44 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31
    EQ              shift and go to state 32
    GT              shift and go to state 33
    GE              shift and go to state 34
    LT              shift and go to state 35
    LE              shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    LBRACKET        shift and go to state 39
    DOT             shift and go to state 40


state 91

    (41) statement -> IF expression statement ELSE statement .

    DEF             reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    RETURN          reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    IF              reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    TYPE            reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    ID              reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    MINUS           reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    NOT             reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    LPAREN          reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    NUMBER          reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    FLOAT_NUMBER    reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    TRUE            reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    FALSE           reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    CHARACTER       reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    INT             reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    FLOAT           reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    CHAR            reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    BOOL            reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    $end            reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    ELSE            reduce using rule 41 (statement -> IF expression statement ELSE statement .)
    RBRACE          reduce using rule 41 (statement -> IF expression statement ELSE statement .)


state 92

    (46) statement -> TYPE ID COLON LBRACE field_list . RBRACE
    (49) field_list -> field_list . field
    (50) field -> . type ID
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    RBRACE          shift and go to state 98
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    field                          shift and go to state 99
    type                           shift and go to state 94
    base_type                      shift and go to state 12

state 93

    (48) field_list -> field .

    RBRACE          reduce using rule 48 (field_list -> field .)
    INT             reduce using rule 48 (field_list -> field .)
    FLOAT           reduce using rule 48 (field_list -> field .)
    CHAR            reduce using rule 48 (field_list -> field .)
    BOOL            reduce using rule 48 (field_list -> field .)


state 94

    (50) field -> type . ID

    ID              shift and go to state 100


state 95

    (39) param -> type ID .

    RPAREN          reduce using rule 39 (param -> type ID .)
    SEMICOLON       reduce using rule 39 (param -> type ID .)


state 96

    (36) statement -> DEF type ID LPAREN param_list RPAREN . COLON LBRACE statement_list RBRACE

    COLON           shift and go to state 101


state 97

    (38) param_list -> param_list SEMICOLON . param
    (39) param -> . type ID
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    param                          shift and go to state 102
    type                           shift and go to state 87
    base_type                      shift and go to state 12

state 98

    (46) statement -> TYPE ID COLON LBRACE field_list RBRACE .

    DEF             reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    RETURN          reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    IF              reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    TYPE            reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    ID              reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    MINUS           reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    NOT             reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    LPAREN          reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    NUMBER          reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    TRUE            reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    FALSE           reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    CHARACTER       reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    INT             reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    FLOAT           reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    CHAR            reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    BOOL            reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    $end            reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    ELSE            reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    RBRACE          reduce using rule 46 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)


state 99

    (49) field_list -> field_list field .

    RBRACE          reduce using rule 49 (field_list -> field_list field .)
    INT             reduce using rule 49 (field_list -> field_list field .)
    FLOAT           reduce using rule 49 (field_list -> field_list field .)
    CHAR            reduce using rule 49 (field_list -> field_list field .)
    BOOL            reduce using rule 49 (field_list -> field_list field .)


state 100

    (50) field -> type ID .

    RBRACE          reduce using rule 50 (field -> type ID .)
    INT             reduce using rule 50 (field -> type ID .)
    FLOAT           reduce using rule 50 (field -> type ID .)
    CHAR            reduce using rule 50 (field -> type ID .)
    BOOL            reduce using rule 50 (field -> type ID .)


state 101

    (36) statement -> DEF type ID LPAREN param_list RPAREN COLON . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 103


state 102

    (38) param_list -> param_list SEMICOLON param .

    RPAREN          reduce using rule 38 (param_list -> param_list SEMICOLON param .)
    SEMICOLON       reduce using rule 38 (param_list -> param_list SEMICOLON param .)


state 103

    (36) statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . type id_list
    (5) statement -> . type id_list ASSIGN expression
    (35) statement -> . expression ASSIGN expression
    (36) statement -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (40) statement -> . RETURN expression
    (41) statement -> . IF expression statement ELSE statement
    (46) statement -> . TYPE ID COLON LBRACE field_list RBRACE
    (47) statement -> . ID ID
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    DEF             shift and go to state 6
    RETURN          shift and go to state 9
    IF              shift and go to state 10
    TYPE            shift and go to state 11
    ID              shift and go to state 7
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    type                           shift and go to state 4
    statement_list                 shift and go to state 104
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    base_type                      shift and go to state 12

state 104

    (36) statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . type id_list
    (5) statement -> . type id_list ASSIGN expression
    (35) statement -> . expression ASSIGN expression
    (36) statement -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (40) statement -> . RETURN expression
    (41) statement -> . IF expression statement ELSE statement
    (46) statement -> . TYPE ID COLON LBRACE field_list RBRACE
    (47) statement -> . ID ID
    (8) type -> . base_type
    (9) type -> . base_type LBRACKET NUMBER RBRACKET
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression EQ expression
    (19) expression -> . expression GT expression
    (20) expression -> . expression GE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LE expression
    (23) expression -> . expression AND expression
    (24) expression -> . expression OR expression
    (25) expression -> . MINUS expression
    (26) expression -> . NOT expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . FLOAT_NUMBER
    (30) expression -> . TRUE
    (31) expression -> . FALSE
    (32) expression -> . CHARACTER
    (33) expression -> . ID
    (34) expression -> . expression LBRACKET expression RBRACKET
    (42) expression -> . ID LPAREN arg_list RPAREN
    (51) expression -> . expression DOT ID
    (10) base_type -> . INT
    (11) base_type -> . FLOAT
    (12) base_type -> . CHAR
    (13) base_type -> . BOOL

    RBRACE          shift and go to state 105
    DEF             shift and go to state 6
    RETURN          shift and go to state 9
    IF              shift and go to state 10
    TYPE            shift and go to state 11
    ID              shift and go to state 7
    MINUS           shift and go to state 14
    NOT             shift and go to state 15
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 13
    FLOAT_NUMBER    shift and go to state 16
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    CHARACTER       shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 23

    type                           shift and go to state 4
    statement                      shift and go to state 24
    expression                     shift and go to state 5
    base_type                      shift and go to state 12

state 105

    (36) statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .

    DEF             reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    IF              reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    ID              reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    NOT             reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    CHARACTER       reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    INT             reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    $end            reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 36 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: reduce/reduce conflict in state 84 resolved using rule (expression -> expression MINUS expression)
WARNING: rejected rule (expression -> MINUS expression) in state 84
