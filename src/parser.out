Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    IF
    LBRACKET
    NEWLINE
    RBRACKET
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> type ID
Rule 5     statement -> type ID ASSIGN expression
Rule 6     type -> INT
Rule 7     type -> FLOAT
Rule 8     type -> CHAR
Rule 9     type -> BOOL
Rule 10    expression -> expression PLUS expression
Rule 11    expression -> expression MINUS expression
Rule 12    expression -> expression TIMES expression
Rule 13    expression -> expression DIVIDE expression
Rule 14    expression -> expression EQ expression
Rule 15    expression -> expression GT expression
Rule 16    expression -> expression GE expression
Rule 17    expression -> expression LT expression
Rule 18    expression -> expression LE expression
Rule 19    expression -> expression AND expression
Rule 20    expression -> expression OR expression
Rule 21    expression -> MINUS expression
Rule 22    expression -> NOT expression
Rule 23    expression -> LPAREN expression RPAREN
Rule 24    expression -> NUMBER
Rule 25    expression -> FLOAT_NUMBER
Rule 26    expression -> TRUE
Rule 27    expression -> FALSE
Rule 28    expression -> CHARACTER
Rule 29    expression -> ID
Rule 30    statement -> ID ASSIGN expression
Rule 31    statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
Rule 32    param_list -> param
Rule 33    param_list -> param_list SEMICOLON param
Rule 34    param -> type ID
Rule 35    statement -> RETURN expression
Rule 36    expression -> ID LPAREN arg_list RPAREN
Rule 37    arg_list -> expression
Rule 38    arg_list -> arg_list COMMA expression
Rule 39    arg_list -> empty
Rule 40    empty -> <empty>
Rule 41    statement -> TYPE ID COLON LBRACE field_list RBRACE
Rule 42    field_list -> field
Rule 43    field_list -> field_list field
Rule 44    field -> type ID
Rule 45    expression -> expression DOT ID

Terminals, with rules where they appear

AND                  : 19
ASSIGN               : 5 30
BOOL                 : 9
CHAR                 : 8
CHARACTER            : 28
COLON                : 31 41
COMMA                : 38
DEF                  : 31
DIVIDE               : 13
DOT                  : 45
ELSE                 : 
EQ                   : 14
FALSE                : 27
FLOAT                : 7
FLOAT_NUMBER         : 25
GE                   : 16
GT                   : 15
ID                   : 4 5 29 30 31 34 36 41 44 45
IF                   : 
INT                  : 6
LBRACE               : 31 41
LBRACKET             : 
LE                   : 18
LPAREN               : 23 31 36
LT                   : 17
MINUS                : 11 21
NEWLINE              : 
NOT                  : 22
NUMBER               : 24
OR                   : 20
PLUS                 : 10
RBRACE               : 31 41
RBRACKET             : 
RETURN               : 35
RPAREN               : 23 31 36
SEMICOLON            : 33
TIMES                : 12
TRUE                 : 26
TYPE                 : 41
WHILE                : 
error                : 

Nonterminals, with rules where they appear

arg_list             : 36 38
empty                : 39
expression           : 5 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 22 23 30 35 37 38 45
field                : 42 43
field_list           : 41 43
param                : 32 33
param_list           : 31 33
program              : 0
statement            : 2 3
statement_list       : 1 3 31
type                 : 4 5 31 34 44

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . type ID
    (5) statement -> . type ID ASSIGN expression
    (30) statement -> . ID ASSIGN expression
    (31) statement -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (35) statement -> . RETURN expression
    (41) statement -> . TYPE ID COLON LBRACE field_list RBRACE
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . CHAR
    (9) type -> . BOOL

    ID              shift and go to state 5
    DEF             shift and go to state 6
    RETURN          shift and go to state 7
    TYPE            shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    type                           shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . type ID
    (5) statement -> . type ID ASSIGN expression
    (30) statement -> . ID ASSIGN expression
    (31) statement -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (35) statement -> . RETURN expression
    (41) statement -> . TYPE ID COLON LBRACE field_list RBRACE
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . CHAR
    (9) type -> . BOOL

    $end            reduce using rule 1 (program -> statement_list .)
    ID              shift and go to state 5
    DEF             shift and go to state 6
    RETURN          shift and go to state 7
    TYPE            shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    statement                      shift and go to state 13
    type                           shift and go to state 4

state 3

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    DEF             reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    TYPE            reduce using rule 2 (statement_list -> statement .)
    INT             reduce using rule 2 (statement_list -> statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement .)
    CHAR            reduce using rule 2 (statement_list -> statement .)
    BOOL            reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> type . ID
    (5) statement -> type . ID ASSIGN expression

    ID              shift and go to state 14


state 5

    (30) statement -> ID . ASSIGN expression

    ASSIGN          shift and go to state 15


state 6

    (31) statement -> DEF . type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . CHAR
    (9) type -> . BOOL

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    type                           shift and go to state 16

state 7

    (35) statement -> RETURN . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 17

state 8

    (41) statement -> TYPE . ID COLON LBRACE field_list RBRACE

    ID              shift and go to state 27


state 9

    (6) type -> INT .

    ID              reduce using rule 6 (type -> INT .)


state 10

    (7) type -> FLOAT .

    ID              reduce using rule 7 (type -> FLOAT .)


state 11

    (8) type -> CHAR .

    ID              reduce using rule 8 (type -> CHAR .)


state 12

    (9) type -> BOOL .

    ID              reduce using rule 9 (type -> BOOL .)


state 13

    (3) statement_list -> statement_list statement .

    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    DEF             reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 3 (statement_list -> statement_list statement .)
    INT             reduce using rule 3 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 3 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 3 (statement_list -> statement_list statement .)
    BOOL            reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 14

    (4) statement -> type ID .
    (5) statement -> type ID . ASSIGN expression

    ID              reduce using rule 4 (statement -> type ID .)
    DEF             reduce using rule 4 (statement -> type ID .)
    RETURN          reduce using rule 4 (statement -> type ID .)
    TYPE            reduce using rule 4 (statement -> type ID .)
    INT             reduce using rule 4 (statement -> type ID .)
    FLOAT           reduce using rule 4 (statement -> type ID .)
    CHAR            reduce using rule 4 (statement -> type ID .)
    BOOL            reduce using rule 4 (statement -> type ID .)
    $end            reduce using rule 4 (statement -> type ID .)
    RBRACE          reduce using rule 4 (statement -> type ID .)
    ASSIGN          shift and go to state 28


state 15

    (30) statement -> ID ASSIGN . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 29

state 16

    (31) statement -> DEF type . ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE

    ID              shift and go to state 30


state 17

    (35) statement -> RETURN expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    ID              reduce using rule 35 (statement -> RETURN expression .)
    DEF             reduce using rule 35 (statement -> RETURN expression .)
    RETURN          reduce using rule 35 (statement -> RETURN expression .)
    TYPE            reduce using rule 35 (statement -> RETURN expression .)
    INT             reduce using rule 35 (statement -> RETURN expression .)
    FLOAT           reduce using rule 35 (statement -> RETURN expression .)
    CHAR            reduce using rule 35 (statement -> RETURN expression .)
    BOOL            reduce using rule 35 (statement -> RETURN expression .)
    $end            reduce using rule 35 (statement -> RETURN expression .)
    RBRACE          reduce using rule 35 (statement -> RETURN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    DOT             shift and go to state 42


state 18

    (21) expression -> MINUS . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 43

state 19

    (22) expression -> NOT . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 44

state 20

    (23) expression -> LPAREN . expression RPAREN
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 45

state 21

    (24) expression -> NUMBER .

    PLUS            reduce using rule 24 (expression -> NUMBER .)
    MINUS           reduce using rule 24 (expression -> NUMBER .)
    TIMES           reduce using rule 24 (expression -> NUMBER .)
    DIVIDE          reduce using rule 24 (expression -> NUMBER .)
    EQ              reduce using rule 24 (expression -> NUMBER .)
    GT              reduce using rule 24 (expression -> NUMBER .)
    GE              reduce using rule 24 (expression -> NUMBER .)
    LT              reduce using rule 24 (expression -> NUMBER .)
    LE              reduce using rule 24 (expression -> NUMBER .)
    AND             reduce using rule 24 (expression -> NUMBER .)
    OR              reduce using rule 24 (expression -> NUMBER .)
    DOT             reduce using rule 24 (expression -> NUMBER .)
    ID              reduce using rule 24 (expression -> NUMBER .)
    DEF             reduce using rule 24 (expression -> NUMBER .)
    RETURN          reduce using rule 24 (expression -> NUMBER .)
    TYPE            reduce using rule 24 (expression -> NUMBER .)
    INT             reduce using rule 24 (expression -> NUMBER .)
    FLOAT           reduce using rule 24 (expression -> NUMBER .)
    CHAR            reduce using rule 24 (expression -> NUMBER .)
    BOOL            reduce using rule 24 (expression -> NUMBER .)
    $end            reduce using rule 24 (expression -> NUMBER .)
    RBRACE          reduce using rule 24 (expression -> NUMBER .)
    RPAREN          reduce using rule 24 (expression -> NUMBER .)
    COMMA           reduce using rule 24 (expression -> NUMBER .)


state 22

    (25) expression -> FLOAT_NUMBER .

    PLUS            reduce using rule 25 (expression -> FLOAT_NUMBER .)
    MINUS           reduce using rule 25 (expression -> FLOAT_NUMBER .)
    TIMES           reduce using rule 25 (expression -> FLOAT_NUMBER .)
    DIVIDE          reduce using rule 25 (expression -> FLOAT_NUMBER .)
    EQ              reduce using rule 25 (expression -> FLOAT_NUMBER .)
    GT              reduce using rule 25 (expression -> FLOAT_NUMBER .)
    GE              reduce using rule 25 (expression -> FLOAT_NUMBER .)
    LT              reduce using rule 25 (expression -> FLOAT_NUMBER .)
    LE              reduce using rule 25 (expression -> FLOAT_NUMBER .)
    AND             reduce using rule 25 (expression -> FLOAT_NUMBER .)
    OR              reduce using rule 25 (expression -> FLOAT_NUMBER .)
    DOT             reduce using rule 25 (expression -> FLOAT_NUMBER .)
    ID              reduce using rule 25 (expression -> FLOAT_NUMBER .)
    DEF             reduce using rule 25 (expression -> FLOAT_NUMBER .)
    RETURN          reduce using rule 25 (expression -> FLOAT_NUMBER .)
    TYPE            reduce using rule 25 (expression -> FLOAT_NUMBER .)
    INT             reduce using rule 25 (expression -> FLOAT_NUMBER .)
    FLOAT           reduce using rule 25 (expression -> FLOAT_NUMBER .)
    CHAR            reduce using rule 25 (expression -> FLOAT_NUMBER .)
    BOOL            reduce using rule 25 (expression -> FLOAT_NUMBER .)
    $end            reduce using rule 25 (expression -> FLOAT_NUMBER .)
    RBRACE          reduce using rule 25 (expression -> FLOAT_NUMBER .)
    RPAREN          reduce using rule 25 (expression -> FLOAT_NUMBER .)
    COMMA           reduce using rule 25 (expression -> FLOAT_NUMBER .)


state 23

    (26) expression -> TRUE .

    PLUS            reduce using rule 26 (expression -> TRUE .)
    MINUS           reduce using rule 26 (expression -> TRUE .)
    TIMES           reduce using rule 26 (expression -> TRUE .)
    DIVIDE          reduce using rule 26 (expression -> TRUE .)
    EQ              reduce using rule 26 (expression -> TRUE .)
    GT              reduce using rule 26 (expression -> TRUE .)
    GE              reduce using rule 26 (expression -> TRUE .)
    LT              reduce using rule 26 (expression -> TRUE .)
    LE              reduce using rule 26 (expression -> TRUE .)
    AND             reduce using rule 26 (expression -> TRUE .)
    OR              reduce using rule 26 (expression -> TRUE .)
    DOT             reduce using rule 26 (expression -> TRUE .)
    ID              reduce using rule 26 (expression -> TRUE .)
    DEF             reduce using rule 26 (expression -> TRUE .)
    RETURN          reduce using rule 26 (expression -> TRUE .)
    TYPE            reduce using rule 26 (expression -> TRUE .)
    INT             reduce using rule 26 (expression -> TRUE .)
    FLOAT           reduce using rule 26 (expression -> TRUE .)
    CHAR            reduce using rule 26 (expression -> TRUE .)
    BOOL            reduce using rule 26 (expression -> TRUE .)
    $end            reduce using rule 26 (expression -> TRUE .)
    RBRACE          reduce using rule 26 (expression -> TRUE .)
    RPAREN          reduce using rule 26 (expression -> TRUE .)
    COMMA           reduce using rule 26 (expression -> TRUE .)


state 24

    (27) expression -> FALSE .

    PLUS            reduce using rule 27 (expression -> FALSE .)
    MINUS           reduce using rule 27 (expression -> FALSE .)
    TIMES           reduce using rule 27 (expression -> FALSE .)
    DIVIDE          reduce using rule 27 (expression -> FALSE .)
    EQ              reduce using rule 27 (expression -> FALSE .)
    GT              reduce using rule 27 (expression -> FALSE .)
    GE              reduce using rule 27 (expression -> FALSE .)
    LT              reduce using rule 27 (expression -> FALSE .)
    LE              reduce using rule 27 (expression -> FALSE .)
    AND             reduce using rule 27 (expression -> FALSE .)
    OR              reduce using rule 27 (expression -> FALSE .)
    DOT             reduce using rule 27 (expression -> FALSE .)
    ID              reduce using rule 27 (expression -> FALSE .)
    DEF             reduce using rule 27 (expression -> FALSE .)
    RETURN          reduce using rule 27 (expression -> FALSE .)
    TYPE            reduce using rule 27 (expression -> FALSE .)
    INT             reduce using rule 27 (expression -> FALSE .)
    FLOAT           reduce using rule 27 (expression -> FALSE .)
    CHAR            reduce using rule 27 (expression -> FALSE .)
    BOOL            reduce using rule 27 (expression -> FALSE .)
    $end            reduce using rule 27 (expression -> FALSE .)
    RBRACE          reduce using rule 27 (expression -> FALSE .)
    RPAREN          reduce using rule 27 (expression -> FALSE .)
    COMMA           reduce using rule 27 (expression -> FALSE .)


state 25

    (28) expression -> CHARACTER .

    PLUS            reduce using rule 28 (expression -> CHARACTER .)
    MINUS           reduce using rule 28 (expression -> CHARACTER .)
    TIMES           reduce using rule 28 (expression -> CHARACTER .)
    DIVIDE          reduce using rule 28 (expression -> CHARACTER .)
    EQ              reduce using rule 28 (expression -> CHARACTER .)
    GT              reduce using rule 28 (expression -> CHARACTER .)
    GE              reduce using rule 28 (expression -> CHARACTER .)
    LT              reduce using rule 28 (expression -> CHARACTER .)
    LE              reduce using rule 28 (expression -> CHARACTER .)
    AND             reduce using rule 28 (expression -> CHARACTER .)
    OR              reduce using rule 28 (expression -> CHARACTER .)
    DOT             reduce using rule 28 (expression -> CHARACTER .)
    ID              reduce using rule 28 (expression -> CHARACTER .)
    DEF             reduce using rule 28 (expression -> CHARACTER .)
    RETURN          reduce using rule 28 (expression -> CHARACTER .)
    TYPE            reduce using rule 28 (expression -> CHARACTER .)
    INT             reduce using rule 28 (expression -> CHARACTER .)
    FLOAT           reduce using rule 28 (expression -> CHARACTER .)
    CHAR            reduce using rule 28 (expression -> CHARACTER .)
    BOOL            reduce using rule 28 (expression -> CHARACTER .)
    $end            reduce using rule 28 (expression -> CHARACTER .)
    RBRACE          reduce using rule 28 (expression -> CHARACTER .)
    RPAREN          reduce using rule 28 (expression -> CHARACTER .)
    COMMA           reduce using rule 28 (expression -> CHARACTER .)


state 26

    (29) expression -> ID .
    (36) expression -> ID . LPAREN arg_list RPAREN

    PLUS            reduce using rule 29 (expression -> ID .)
    MINUS           reduce using rule 29 (expression -> ID .)
    TIMES           reduce using rule 29 (expression -> ID .)
    DIVIDE          reduce using rule 29 (expression -> ID .)
    EQ              reduce using rule 29 (expression -> ID .)
    GT              reduce using rule 29 (expression -> ID .)
    GE              reduce using rule 29 (expression -> ID .)
    LT              reduce using rule 29 (expression -> ID .)
    LE              reduce using rule 29 (expression -> ID .)
    AND             reduce using rule 29 (expression -> ID .)
    OR              reduce using rule 29 (expression -> ID .)
    DOT             reduce using rule 29 (expression -> ID .)
    ID              reduce using rule 29 (expression -> ID .)
    DEF             reduce using rule 29 (expression -> ID .)
    RETURN          reduce using rule 29 (expression -> ID .)
    TYPE            reduce using rule 29 (expression -> ID .)
    INT             reduce using rule 29 (expression -> ID .)
    FLOAT           reduce using rule 29 (expression -> ID .)
    CHAR            reduce using rule 29 (expression -> ID .)
    BOOL            reduce using rule 29 (expression -> ID .)
    $end            reduce using rule 29 (expression -> ID .)
    RBRACE          reduce using rule 29 (expression -> ID .)
    RPAREN          reduce using rule 29 (expression -> ID .)
    COMMA           reduce using rule 29 (expression -> ID .)
    LPAREN          shift and go to state 46


state 27

    (41) statement -> TYPE ID . COLON LBRACE field_list RBRACE

    COLON           shift and go to state 47


state 28

    (5) statement -> type ID ASSIGN . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 48

state 29

    (30) statement -> ID ASSIGN expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    ID              reduce using rule 30 (statement -> ID ASSIGN expression .)
    DEF             reduce using rule 30 (statement -> ID ASSIGN expression .)
    RETURN          reduce using rule 30 (statement -> ID ASSIGN expression .)
    TYPE            reduce using rule 30 (statement -> ID ASSIGN expression .)
    INT             reduce using rule 30 (statement -> ID ASSIGN expression .)
    FLOAT           reduce using rule 30 (statement -> ID ASSIGN expression .)
    CHAR            reduce using rule 30 (statement -> ID ASSIGN expression .)
    BOOL            reduce using rule 30 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 30 (statement -> ID ASSIGN expression .)
    RBRACE          reduce using rule 30 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    DOT             shift and go to state 42


state 30

    (31) statement -> DEF type ID . LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE

    LPAREN          shift and go to state 49


state 31

    (10) expression -> expression PLUS . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 50

state 32

    (11) expression -> expression MINUS . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 51

state 33

    (12) expression -> expression TIMES . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 52

state 34

    (13) expression -> expression DIVIDE . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 53

state 35

    (14) expression -> expression EQ . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 54

state 36

    (15) expression -> expression GT . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 55

state 37

    (16) expression -> expression GE . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 56

state 38

    (17) expression -> expression LT . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 57

state 39

    (18) expression -> expression LE . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 58

state 40

    (19) expression -> expression AND . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 59

state 41

    (20) expression -> expression OR . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 60

state 42

    (45) expression -> expression DOT . ID

    ID              shift and go to state 61


state 43

    (21) expression -> MINUS expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    PLUS            reduce using rule 21 (expression -> MINUS expression .)
    MINUS           reduce using rule 21 (expression -> MINUS expression .)
    TIMES           reduce using rule 21 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 21 (expression -> MINUS expression .)
    EQ              reduce using rule 21 (expression -> MINUS expression .)
    GT              reduce using rule 21 (expression -> MINUS expression .)
    GE              reduce using rule 21 (expression -> MINUS expression .)
    LT              reduce using rule 21 (expression -> MINUS expression .)
    LE              reduce using rule 21 (expression -> MINUS expression .)
    AND             reduce using rule 21 (expression -> MINUS expression .)
    OR              reduce using rule 21 (expression -> MINUS expression .)
    DOT             reduce using rule 21 (expression -> MINUS expression .)
    ID              reduce using rule 21 (expression -> MINUS expression .)
    DEF             reduce using rule 21 (expression -> MINUS expression .)
    RETURN          reduce using rule 21 (expression -> MINUS expression .)
    TYPE            reduce using rule 21 (expression -> MINUS expression .)
    INT             reduce using rule 21 (expression -> MINUS expression .)
    FLOAT           reduce using rule 21 (expression -> MINUS expression .)
    CHAR            reduce using rule 21 (expression -> MINUS expression .)
    BOOL            reduce using rule 21 (expression -> MINUS expression .)
    $end            reduce using rule 21 (expression -> MINUS expression .)
    RBRACE          reduce using rule 21 (expression -> MINUS expression .)
    RPAREN          reduce using rule 21 (expression -> MINUS expression .)
    COMMA           reduce using rule 21 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 44

    (22) expression -> NOT expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    AND             reduce using rule 22 (expression -> NOT expression .)
    OR              reduce using rule 22 (expression -> NOT expression .)
    DOT             reduce using rule 22 (expression -> NOT expression .)
    ID              reduce using rule 22 (expression -> NOT expression .)
    DEF             reduce using rule 22 (expression -> NOT expression .)
    RETURN          reduce using rule 22 (expression -> NOT expression .)
    TYPE            reduce using rule 22 (expression -> NOT expression .)
    INT             reduce using rule 22 (expression -> NOT expression .)
    FLOAT           reduce using rule 22 (expression -> NOT expression .)
    CHAR            reduce using rule 22 (expression -> NOT expression .)
    BOOL            reduce using rule 22 (expression -> NOT expression .)
    $end            reduce using rule 22 (expression -> NOT expression .)
    RBRACE          reduce using rule 22 (expression -> NOT expression .)
    RPAREN          reduce using rule 22 (expression -> NOT expression .)
    COMMA           reduce using rule 22 (expression -> NOT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39

  ! PLUS            [ reduce using rule 22 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 22 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 22 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 22 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 22 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 45

    (23) expression -> LPAREN expression . RPAREN
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    RPAREN          shift and go to state 62
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    DOT             shift and go to state 42


state 46

    (36) expression -> ID LPAREN . arg_list RPAREN
    (37) arg_list -> . expression
    (38) arg_list -> . arg_list COMMA expression
    (39) arg_list -> . empty
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID
    (40) empty -> .

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26
    RPAREN          reduce using rule 40 (empty -> .)
    COMMA           reduce using rule 40 (empty -> .)

    arg_list                       shift and go to state 63
    expression                     shift and go to state 64
    empty                          shift and go to state 65

state 47

    (41) statement -> TYPE ID COLON . LBRACE field_list RBRACE

    LBRACE          shift and go to state 66


state 48

    (5) statement -> type ID ASSIGN expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    ID              reduce using rule 5 (statement -> type ID ASSIGN expression .)
    DEF             reduce using rule 5 (statement -> type ID ASSIGN expression .)
    RETURN          reduce using rule 5 (statement -> type ID ASSIGN expression .)
    TYPE            reduce using rule 5 (statement -> type ID ASSIGN expression .)
    INT             reduce using rule 5 (statement -> type ID ASSIGN expression .)
    FLOAT           reduce using rule 5 (statement -> type ID ASSIGN expression .)
    CHAR            reduce using rule 5 (statement -> type ID ASSIGN expression .)
    BOOL            reduce using rule 5 (statement -> type ID ASSIGN expression .)
    $end            reduce using rule 5 (statement -> type ID ASSIGN expression .)
    RBRACE          reduce using rule 5 (statement -> type ID ASSIGN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    DOT             shift and go to state 42


state 49

    (31) statement -> DEF type ID LPAREN . param_list RPAREN COLON LBRACE statement_list RBRACE
    (32) param_list -> . param
    (33) param_list -> . param_list SEMICOLON param
    (34) param -> . type ID
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . CHAR
    (9) type -> . BOOL

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    type                           shift and go to state 67
    param_list                     shift and go to state 68
    param                          shift and go to state 69

state 50

    (10) expression -> expression PLUS expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    PLUS            reduce using rule 10 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 10 (expression -> expression PLUS expression .)
    EQ              reduce using rule 10 (expression -> expression PLUS expression .)
    GT              reduce using rule 10 (expression -> expression PLUS expression .)
    GE              reduce using rule 10 (expression -> expression PLUS expression .)
    LT              reduce using rule 10 (expression -> expression PLUS expression .)
    LE              reduce using rule 10 (expression -> expression PLUS expression .)
    AND             reduce using rule 10 (expression -> expression PLUS expression .)
    OR              reduce using rule 10 (expression -> expression PLUS expression .)
    DOT             reduce using rule 10 (expression -> expression PLUS expression .)
    ID              reduce using rule 10 (expression -> expression PLUS expression .)
    DEF             reduce using rule 10 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 10 (expression -> expression PLUS expression .)
    TYPE            reduce using rule 10 (expression -> expression PLUS expression .)
    INT             reduce using rule 10 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 10 (expression -> expression PLUS expression .)
    CHAR            reduce using rule 10 (expression -> expression PLUS expression .)
    BOOL            reduce using rule 10 (expression -> expression PLUS expression .)
    $end            reduce using rule 10 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 10 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 10 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 10 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! TIMES           [ reduce using rule 10 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 51

    (11) expression -> expression MINUS expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    PLUS            reduce using rule 11 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 11 (expression -> expression MINUS expression .)
    EQ              reduce using rule 11 (expression -> expression MINUS expression .)
    GT              reduce using rule 11 (expression -> expression MINUS expression .)
    GE              reduce using rule 11 (expression -> expression MINUS expression .)
    LT              reduce using rule 11 (expression -> expression MINUS expression .)
    LE              reduce using rule 11 (expression -> expression MINUS expression .)
    AND             reduce using rule 11 (expression -> expression MINUS expression .)
    OR              reduce using rule 11 (expression -> expression MINUS expression .)
    DOT             reduce using rule 11 (expression -> expression MINUS expression .)
    ID              reduce using rule 11 (expression -> expression MINUS expression .)
    DEF             reduce using rule 11 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 11 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 11 (expression -> expression MINUS expression .)
    INT             reduce using rule 11 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 11 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 11 (expression -> expression MINUS expression .)
    BOOL            reduce using rule 11 (expression -> expression MINUS expression .)
    $end            reduce using rule 11 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 11 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 11 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 11 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! TIMES           [ reduce using rule 11 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 52

    (12) expression -> expression TIMES expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    PLUS            reduce using rule 12 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 12 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 12 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 12 (expression -> expression TIMES expression .)
    EQ              reduce using rule 12 (expression -> expression TIMES expression .)
    GT              reduce using rule 12 (expression -> expression TIMES expression .)
    GE              reduce using rule 12 (expression -> expression TIMES expression .)
    LT              reduce using rule 12 (expression -> expression TIMES expression .)
    LE              reduce using rule 12 (expression -> expression TIMES expression .)
    AND             reduce using rule 12 (expression -> expression TIMES expression .)
    OR              reduce using rule 12 (expression -> expression TIMES expression .)
    DOT             reduce using rule 12 (expression -> expression TIMES expression .)
    ID              reduce using rule 12 (expression -> expression TIMES expression .)
    DEF             reduce using rule 12 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 12 (expression -> expression TIMES expression .)
    TYPE            reduce using rule 12 (expression -> expression TIMES expression .)
    INT             reduce using rule 12 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 12 (expression -> expression TIMES expression .)
    CHAR            reduce using rule 12 (expression -> expression TIMES expression .)
    BOOL            reduce using rule 12 (expression -> expression TIMES expression .)
    $end            reduce using rule 12 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 12 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 12 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 12 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 53

    (13) expression -> expression DIVIDE expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    PLUS            reduce using rule 13 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 13 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 13 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 13 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 13 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 13 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 13 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 13 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 13 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 13 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 13 (expression -> expression DIVIDE expression .)
    DOT             reduce using rule 13 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 13 (expression -> expression DIVIDE expression .)
    DEF             reduce using rule 13 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 13 (expression -> expression DIVIDE expression .)
    TYPE            reduce using rule 13 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 13 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 13 (expression -> expression DIVIDE expression .)
    CHAR            reduce using rule 13 (expression -> expression DIVIDE expression .)
    BOOL            reduce using rule 13 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 13 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 13 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 13 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 13 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 54

    (14) expression -> expression EQ expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    EQ              reduce using rule 14 (expression -> expression EQ expression .)
    GT              reduce using rule 14 (expression -> expression EQ expression .)
    GE              reduce using rule 14 (expression -> expression EQ expression .)
    LT              reduce using rule 14 (expression -> expression EQ expression .)
    LE              reduce using rule 14 (expression -> expression EQ expression .)
    AND             reduce using rule 14 (expression -> expression EQ expression .)
    OR              reduce using rule 14 (expression -> expression EQ expression .)
    DOT             reduce using rule 14 (expression -> expression EQ expression .)
    ID              reduce using rule 14 (expression -> expression EQ expression .)
    DEF             reduce using rule 14 (expression -> expression EQ expression .)
    RETURN          reduce using rule 14 (expression -> expression EQ expression .)
    TYPE            reduce using rule 14 (expression -> expression EQ expression .)
    INT             reduce using rule 14 (expression -> expression EQ expression .)
    FLOAT           reduce using rule 14 (expression -> expression EQ expression .)
    CHAR            reduce using rule 14 (expression -> expression EQ expression .)
    BOOL            reduce using rule 14 (expression -> expression EQ expression .)
    $end            reduce using rule 14 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 14 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 14 (expression -> expression EQ expression .)
    COMMA           reduce using rule 14 (expression -> expression EQ expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 55

    (15) expression -> expression GT expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    EQ              reduce using rule 15 (expression -> expression GT expression .)
    GT              reduce using rule 15 (expression -> expression GT expression .)
    GE              reduce using rule 15 (expression -> expression GT expression .)
    LT              reduce using rule 15 (expression -> expression GT expression .)
    LE              reduce using rule 15 (expression -> expression GT expression .)
    AND             reduce using rule 15 (expression -> expression GT expression .)
    OR              reduce using rule 15 (expression -> expression GT expression .)
    DOT             reduce using rule 15 (expression -> expression GT expression .)
    ID              reduce using rule 15 (expression -> expression GT expression .)
    DEF             reduce using rule 15 (expression -> expression GT expression .)
    RETURN          reduce using rule 15 (expression -> expression GT expression .)
    TYPE            reduce using rule 15 (expression -> expression GT expression .)
    INT             reduce using rule 15 (expression -> expression GT expression .)
    FLOAT           reduce using rule 15 (expression -> expression GT expression .)
    CHAR            reduce using rule 15 (expression -> expression GT expression .)
    BOOL            reduce using rule 15 (expression -> expression GT expression .)
    $end            reduce using rule 15 (expression -> expression GT expression .)
    RBRACE          reduce using rule 15 (expression -> expression GT expression .)
    RPAREN          reduce using rule 15 (expression -> expression GT expression .)
    COMMA           reduce using rule 15 (expression -> expression GT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression GT expression .) ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 56

    (16) expression -> expression GE expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    EQ              reduce using rule 16 (expression -> expression GE expression .)
    GT              reduce using rule 16 (expression -> expression GE expression .)
    GE              reduce using rule 16 (expression -> expression GE expression .)
    LT              reduce using rule 16 (expression -> expression GE expression .)
    LE              reduce using rule 16 (expression -> expression GE expression .)
    AND             reduce using rule 16 (expression -> expression GE expression .)
    OR              reduce using rule 16 (expression -> expression GE expression .)
    DOT             reduce using rule 16 (expression -> expression GE expression .)
    ID              reduce using rule 16 (expression -> expression GE expression .)
    DEF             reduce using rule 16 (expression -> expression GE expression .)
    RETURN          reduce using rule 16 (expression -> expression GE expression .)
    TYPE            reduce using rule 16 (expression -> expression GE expression .)
    INT             reduce using rule 16 (expression -> expression GE expression .)
    FLOAT           reduce using rule 16 (expression -> expression GE expression .)
    CHAR            reduce using rule 16 (expression -> expression GE expression .)
    BOOL            reduce using rule 16 (expression -> expression GE expression .)
    $end            reduce using rule 16 (expression -> expression GE expression .)
    RBRACE          reduce using rule 16 (expression -> expression GE expression .)
    RPAREN          reduce using rule 16 (expression -> expression GE expression .)
    COMMA           reduce using rule 16 (expression -> expression GE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 16 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression GE expression .) ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 57

    (17) expression -> expression LT expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    EQ              reduce using rule 17 (expression -> expression LT expression .)
    GT              reduce using rule 17 (expression -> expression LT expression .)
    GE              reduce using rule 17 (expression -> expression LT expression .)
    LT              reduce using rule 17 (expression -> expression LT expression .)
    LE              reduce using rule 17 (expression -> expression LT expression .)
    AND             reduce using rule 17 (expression -> expression LT expression .)
    OR              reduce using rule 17 (expression -> expression LT expression .)
    DOT             reduce using rule 17 (expression -> expression LT expression .)
    ID              reduce using rule 17 (expression -> expression LT expression .)
    DEF             reduce using rule 17 (expression -> expression LT expression .)
    RETURN          reduce using rule 17 (expression -> expression LT expression .)
    TYPE            reduce using rule 17 (expression -> expression LT expression .)
    INT             reduce using rule 17 (expression -> expression LT expression .)
    FLOAT           reduce using rule 17 (expression -> expression LT expression .)
    CHAR            reduce using rule 17 (expression -> expression LT expression .)
    BOOL            reduce using rule 17 (expression -> expression LT expression .)
    $end            reduce using rule 17 (expression -> expression LT expression .)
    RBRACE          reduce using rule 17 (expression -> expression LT expression .)
    RPAREN          reduce using rule 17 (expression -> expression LT expression .)
    COMMA           reduce using rule 17 (expression -> expression LT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 17 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression LT expression .) ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 58

    (18) expression -> expression LE expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    EQ              reduce using rule 18 (expression -> expression LE expression .)
    GT              reduce using rule 18 (expression -> expression LE expression .)
    GE              reduce using rule 18 (expression -> expression LE expression .)
    LT              reduce using rule 18 (expression -> expression LE expression .)
    LE              reduce using rule 18 (expression -> expression LE expression .)
    AND             reduce using rule 18 (expression -> expression LE expression .)
    OR              reduce using rule 18 (expression -> expression LE expression .)
    DOT             reduce using rule 18 (expression -> expression LE expression .)
    ID              reduce using rule 18 (expression -> expression LE expression .)
    DEF             reduce using rule 18 (expression -> expression LE expression .)
    RETURN          reduce using rule 18 (expression -> expression LE expression .)
    TYPE            reduce using rule 18 (expression -> expression LE expression .)
    INT             reduce using rule 18 (expression -> expression LE expression .)
    FLOAT           reduce using rule 18 (expression -> expression LE expression .)
    CHAR            reduce using rule 18 (expression -> expression LE expression .)
    BOOL            reduce using rule 18 (expression -> expression LE expression .)
    $end            reduce using rule 18 (expression -> expression LE expression .)
    RBRACE          reduce using rule 18 (expression -> expression LE expression .)
    RPAREN          reduce using rule 18 (expression -> expression LE expression .)
    COMMA           reduce using rule 18 (expression -> expression LE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression LE expression .) ]
  ! EQ              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 38 ]
  ! LE              [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 59

    (19) expression -> expression AND expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    AND             reduce using rule 19 (expression -> expression AND expression .)
    OR              reduce using rule 19 (expression -> expression AND expression .)
    DOT             reduce using rule 19 (expression -> expression AND expression .)
    ID              reduce using rule 19 (expression -> expression AND expression .)
    DEF             reduce using rule 19 (expression -> expression AND expression .)
    RETURN          reduce using rule 19 (expression -> expression AND expression .)
    TYPE            reduce using rule 19 (expression -> expression AND expression .)
    INT             reduce using rule 19 (expression -> expression AND expression .)
    FLOAT           reduce using rule 19 (expression -> expression AND expression .)
    CHAR            reduce using rule 19 (expression -> expression AND expression .)
    BOOL            reduce using rule 19 (expression -> expression AND expression .)
    $end            reduce using rule 19 (expression -> expression AND expression .)
    RBRACE          reduce using rule 19 (expression -> expression AND expression .)
    RPAREN          reduce using rule 19 (expression -> expression AND expression .)
    COMMA           reduce using rule 19 (expression -> expression AND expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39

  ! PLUS            [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 60

    (20) expression -> expression OR expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    OR              reduce using rule 20 (expression -> expression OR expression .)
    DOT             reduce using rule 20 (expression -> expression OR expression .)
    ID              reduce using rule 20 (expression -> expression OR expression .)
    DEF             reduce using rule 20 (expression -> expression OR expression .)
    RETURN          reduce using rule 20 (expression -> expression OR expression .)
    TYPE            reduce using rule 20 (expression -> expression OR expression .)
    INT             reduce using rule 20 (expression -> expression OR expression .)
    FLOAT           reduce using rule 20 (expression -> expression OR expression .)
    CHAR            reduce using rule 20 (expression -> expression OR expression .)
    BOOL            reduce using rule 20 (expression -> expression OR expression .)
    $end            reduce using rule 20 (expression -> expression OR expression .)
    RBRACE          reduce using rule 20 (expression -> expression OR expression .)
    RPAREN          reduce using rule 20 (expression -> expression OR expression .)
    COMMA           reduce using rule 20 (expression -> expression OR expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40

  ! PLUS            [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 41 ]
  ! DOT             [ shift and go to state 42 ]


state 61

    (45) expression -> expression DOT ID .

    PLUS            reduce using rule 45 (expression -> expression DOT ID .)
    MINUS           reduce using rule 45 (expression -> expression DOT ID .)
    TIMES           reduce using rule 45 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 45 (expression -> expression DOT ID .)
    EQ              reduce using rule 45 (expression -> expression DOT ID .)
    GT              reduce using rule 45 (expression -> expression DOT ID .)
    GE              reduce using rule 45 (expression -> expression DOT ID .)
    LT              reduce using rule 45 (expression -> expression DOT ID .)
    LE              reduce using rule 45 (expression -> expression DOT ID .)
    AND             reduce using rule 45 (expression -> expression DOT ID .)
    OR              reduce using rule 45 (expression -> expression DOT ID .)
    DOT             reduce using rule 45 (expression -> expression DOT ID .)
    ID              reduce using rule 45 (expression -> expression DOT ID .)
    DEF             reduce using rule 45 (expression -> expression DOT ID .)
    RETURN          reduce using rule 45 (expression -> expression DOT ID .)
    TYPE            reduce using rule 45 (expression -> expression DOT ID .)
    INT             reduce using rule 45 (expression -> expression DOT ID .)
    FLOAT           reduce using rule 45 (expression -> expression DOT ID .)
    CHAR            reduce using rule 45 (expression -> expression DOT ID .)
    BOOL            reduce using rule 45 (expression -> expression DOT ID .)
    $end            reduce using rule 45 (expression -> expression DOT ID .)
    RBRACE          reduce using rule 45 (expression -> expression DOT ID .)
    RPAREN          reduce using rule 45 (expression -> expression DOT ID .)
    COMMA           reduce using rule 45 (expression -> expression DOT ID .)


state 62

    (23) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    DEF             reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    TYPE            reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    INT             reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    BOOL            reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 23 (expression -> LPAREN expression RPAREN .)


state 63

    (36) expression -> ID LPAREN arg_list . RPAREN
    (38) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 70
    COMMA           shift and go to state 71


state 64

    (37) arg_list -> expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    RPAREN          reduce using rule 37 (arg_list -> expression .)
    COMMA           reduce using rule 37 (arg_list -> expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    DOT             shift and go to state 42


state 65

    (39) arg_list -> empty .

    RPAREN          reduce using rule 39 (arg_list -> empty .)
    COMMA           reduce using rule 39 (arg_list -> empty .)


state 66

    (41) statement -> TYPE ID COLON LBRACE . field_list RBRACE
    (42) field_list -> . field
    (43) field_list -> . field_list field
    (44) field -> . type ID
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . CHAR
    (9) type -> . BOOL

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    field_list                     shift and go to state 72
    field                          shift and go to state 73
    type                           shift and go to state 74

state 67

    (34) param -> type . ID

    ID              shift and go to state 75


state 68

    (31) statement -> DEF type ID LPAREN param_list . RPAREN COLON LBRACE statement_list RBRACE
    (33) param_list -> param_list . SEMICOLON param

    RPAREN          shift and go to state 76
    SEMICOLON       shift and go to state 77


state 69

    (32) param_list -> param .

    RPAREN          reduce using rule 32 (param_list -> param .)
    SEMICOLON       reduce using rule 32 (param_list -> param .)


state 70

    (36) expression -> ID LPAREN arg_list RPAREN .

    PLUS            reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    EQ              reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    GT              reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    GE              reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    LT              reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    LE              reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    AND             reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    OR              reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    DOT             reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    ID              reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    DEF             reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    RETURN          reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    TYPE            reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    INT             reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    FLOAT           reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    CHAR            reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    BOOL            reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    $end            reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    RBRACE          reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 36 (expression -> ID LPAREN arg_list RPAREN .)


state 71

    (38) arg_list -> arg_list COMMA . expression
    (10) expression -> . expression PLUS expression
    (11) expression -> . expression MINUS expression
    (12) expression -> . expression TIMES expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression EQ expression
    (15) expression -> . expression GT expression
    (16) expression -> . expression GE expression
    (17) expression -> . expression LT expression
    (18) expression -> . expression LE expression
    (19) expression -> . expression AND expression
    (20) expression -> . expression OR expression
    (21) expression -> . MINUS expression
    (22) expression -> . NOT expression
    (23) expression -> . LPAREN expression RPAREN
    (24) expression -> . NUMBER
    (25) expression -> . FLOAT_NUMBER
    (26) expression -> . TRUE
    (27) expression -> . FALSE
    (28) expression -> . CHARACTER
    (29) expression -> . ID
    (36) expression -> . ID LPAREN arg_list RPAREN
    (45) expression -> . expression DOT ID

    MINUS           shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    FLOAT_NUMBER    shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    CHARACTER       shift and go to state 25
    ID              shift and go to state 26

    expression                     shift and go to state 78

state 72

    (41) statement -> TYPE ID COLON LBRACE field_list . RBRACE
    (43) field_list -> field_list . field
    (44) field -> . type ID
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . CHAR
    (9) type -> . BOOL

    RBRACE          shift and go to state 79
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    field                          shift and go to state 80
    type                           shift and go to state 74

state 73

    (42) field_list -> field .

    RBRACE          reduce using rule 42 (field_list -> field .)
    INT             reduce using rule 42 (field_list -> field .)
    FLOAT           reduce using rule 42 (field_list -> field .)
    CHAR            reduce using rule 42 (field_list -> field .)
    BOOL            reduce using rule 42 (field_list -> field .)


state 74

    (44) field -> type . ID

    ID              shift and go to state 81


state 75

    (34) param -> type ID .

    RPAREN          reduce using rule 34 (param -> type ID .)
    SEMICOLON       reduce using rule 34 (param -> type ID .)


state 76

    (31) statement -> DEF type ID LPAREN param_list RPAREN . COLON LBRACE statement_list RBRACE

    COLON           shift and go to state 82


state 77

    (33) param_list -> param_list SEMICOLON . param
    (34) param -> . type ID
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . CHAR
    (9) type -> . BOOL

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    param                          shift and go to state 83
    type                           shift and go to state 67

state 78

    (38) arg_list -> arg_list COMMA expression .
    (10) expression -> expression . PLUS expression
    (11) expression -> expression . MINUS expression
    (12) expression -> expression . TIMES expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . EQ expression
    (15) expression -> expression . GT expression
    (16) expression -> expression . GE expression
    (17) expression -> expression . LT expression
    (18) expression -> expression . LE expression
    (19) expression -> expression . AND expression
    (20) expression -> expression . OR expression
    (45) expression -> expression . DOT ID

    RPAREN          reduce using rule 38 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 38 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    EQ              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    LT              shift and go to state 38
    LE              shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    DOT             shift and go to state 42


state 79

    (41) statement -> TYPE ID COLON LBRACE field_list RBRACE .

    ID              reduce using rule 41 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    DEF             reduce using rule 41 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    RETURN          reduce using rule 41 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    TYPE            reduce using rule 41 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    INT             reduce using rule 41 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    FLOAT           reduce using rule 41 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    CHAR            reduce using rule 41 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    BOOL            reduce using rule 41 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    $end            reduce using rule 41 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)
    RBRACE          reduce using rule 41 (statement -> TYPE ID COLON LBRACE field_list RBRACE .)


state 80

    (43) field_list -> field_list field .

    RBRACE          reduce using rule 43 (field_list -> field_list field .)
    INT             reduce using rule 43 (field_list -> field_list field .)
    FLOAT           reduce using rule 43 (field_list -> field_list field .)
    CHAR            reduce using rule 43 (field_list -> field_list field .)
    BOOL            reduce using rule 43 (field_list -> field_list field .)


state 81

    (44) field -> type ID .

    RBRACE          reduce using rule 44 (field -> type ID .)
    INT             reduce using rule 44 (field -> type ID .)
    FLOAT           reduce using rule 44 (field -> type ID .)
    CHAR            reduce using rule 44 (field -> type ID .)
    BOOL            reduce using rule 44 (field -> type ID .)


state 82

    (31) statement -> DEF type ID LPAREN param_list RPAREN COLON . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 84


state 83

    (33) param_list -> param_list SEMICOLON param .

    RPAREN          reduce using rule 33 (param_list -> param_list SEMICOLON param .)
    SEMICOLON       reduce using rule 33 (param_list -> param_list SEMICOLON param .)


state 84

    (31) statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . type ID
    (5) statement -> . type ID ASSIGN expression
    (30) statement -> . ID ASSIGN expression
    (31) statement -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (35) statement -> . RETURN expression
    (41) statement -> . TYPE ID COLON LBRACE field_list RBRACE
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . CHAR
    (9) type -> . BOOL

    ID              shift and go to state 5
    DEF             shift and go to state 6
    RETURN          shift and go to state 7
    TYPE            shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    type                           shift and go to state 4
    statement_list                 shift and go to state 85
    statement                      shift and go to state 3

state 85

    (31) statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . type ID
    (5) statement -> . type ID ASSIGN expression
    (30) statement -> . ID ASSIGN expression
    (31) statement -> . DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE
    (35) statement -> . RETURN expression
    (41) statement -> . TYPE ID COLON LBRACE field_list RBRACE
    (6) type -> . INT
    (7) type -> . FLOAT
    (8) type -> . CHAR
    (9) type -> . BOOL

    RBRACE          shift and go to state 86
    ID              shift and go to state 5
    DEF             shift and go to state 6
    RETURN          shift and go to state 7
    TYPE            shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    type                           shift and go to state 4
    statement                      shift and go to state 13

state 86

    (31) statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .

    ID              reduce using rule 31 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    DEF             reduce using rule 31 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 31 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 31 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    INT             reduce using rule 31 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 31 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 31 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 31 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    $end            reduce using rule 31 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 31 (statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE .)

