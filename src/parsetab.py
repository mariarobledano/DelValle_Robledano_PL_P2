
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTnonassocEQGTGELTLEleftPLUSMINUSleftTIMESDIVIDErightUMINUSAND ASSIGN BOOL CHAR CHARACTER COLON COMMA DEF DIVIDE DOT ELSE EQ FALSE FLOAT FLOAT_NUMBER GE GT ID IF INT LBRACE LBRACKET LE LPAREN LT MINUS NOT NUMBER OR PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON TIMES TRUE TYPE WHILEprogram : statement_liststatement_list : statement\n                          | statement_list statement statement : statement_declaration\n                    | statement_assign\n                    | statement_function\n                    | statement_return\n                    | statement_if\n                    | statement_instance\n                    | statement_type_defstatement_declaration : type id_list\n                                | type id_list ASSIGN expressionstatement_assign : expression ASSIGN expressionstatement_function : DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACEstatement_return : RETURN expressionstatement_if : IF expression COLON LBRACE statement_list RBRACE\n                        | IF expression COLON LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACEstatement_instance : ID IDstatement : WHILE expression COLON LBRACE statement_list RBRACEstatement_type_def : TYPE ID COLON LBRACE field_list RBRACEid_list : IDid_list : id_list COMMA IDtype : base_type\n                | base_type LBRACKET NUMBER RBRACKETbase_type : INT\n                    | FLOAT\n                    | CHAR\n                    | BOOLexpression : expression_binaria\n                    | expression_comparacion\n                    | expression_logica\n                    | expression_unaria\n                    | expression_group\n                    | expression_number\n                    | expression_var\n                    | expression_array_access\n                    | expression_field_access\n                    | expression_func_callexpression_binaria : expression PLUS expression\n                            | expression MINUS expression\n                            | expression TIMES expression\n                            | expression DIVIDE expressionexpression_comparacion : expression EQ expression\n                                | expression GT expression\n                                | expression GE expression\n                                | expression LT expression\n                                | expression LE expressionexpression_logica : expression AND expression\n                            | expression OR expressionexpression_unaria : MINUS expression %prec UMINUS\n                            | NOT expressionexpression_group : LPAREN expression RPARENexpression_number : NUMBER\n                            | FLOAT_NUMBER\n                            | TRUE\n                            | FALSE\n                            | CHARACTERexpression_var : IDexpression_array_access : expression LBRACKET expression RBRACKETexpression_field_access : expression DOT IDexpression_func_call : ID LPAREN arg_list RPARENparam_list : param\n                      | param_list SEMICOLON paramparam : type IDarg_list : expression\n                    | arg_list COMMA expression\n                    | emptyfield_list : field\n                      | field_list fieldfield : type IDempty :'
    
_lr_action_items = {'WHILE':([0,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,96,97,98,99,101,103,106,111,115,119,120,126,127,128,129,130,131,],[11,11,-2,-4,-5,-6,-7,-8,-9,-10,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,11,-59,-12,-22,-61,11,11,11,-19,-16,-20,11,11,11,11,-14,-17,]),'DEF':([0,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,96,97,98,99,101,103,106,111,115,119,120,126,127,128,129,130,131,],[14,14,-2,-4,-5,-6,-7,-8,-9,-10,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,14,-59,-12,-22,-61,14,14,14,-19,-16,-20,14,14,14,14,-14,-17,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,96,97,98,99,101,103,106,111,115,119,120,126,127,128,129,130,131,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,17,-59,-12,-22,-61,17,17,17,-19,-16,-20,17,17,17,17,-14,-17,]),'IF':([0,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,96,97,98,99,101,103,106,111,115,119,120,126,127,128,129,130,131,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,18,-59,-12,-22,-61,18,18,18,-19,-16,-20,18,18,18,18,-14,-17,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,92,96,97,98,99,101,102,103,105,106,107,111,114,115,119,120,126,127,128,129,130,131,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,44,60,62,44,44,44,67,-23,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-25,-26,-27,-28,44,44,-54,-55,-56,-57,-3,-58,44,44,44,44,44,44,44,44,44,44,44,44,44,85,-11,-21,88,-18,44,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,44,99,-52,15,-59,-12,-22,-61,44,15,-24,15,116,15,122,-19,-16,-20,15,15,15,15,-14,-17,]),'TYPE':([0,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,96,97,98,99,101,103,106,111,115,119,120,126,127,128,129,130,131,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,19,-59,-12,-22,-61,19,19,19,-19,-16,-20,19,19,19,19,-14,-17,]),'INT':([0,2,3,4,5,6,7,8,9,10,14,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,96,97,98,99,100,101,103,104,106,111,112,113,115,118,119,120,121,122,126,127,128,129,130,131,],[32,32,-2,-4,-5,-6,-7,-8,-9,-10,32,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,32,-59,-12,-22,32,-61,32,32,32,32,32,-68,-19,32,-16,-20,-69,-70,32,32,32,32,-14,-17,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,14,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,96,97,98,99,100,101,103,104,106,111,112,113,115,118,119,120,121,122,126,127,128,129,130,131,],[33,33,-2,-4,-5,-6,-7,-8,-9,-10,33,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,33,-59,-12,-22,33,-61,33,33,33,33,33,-68,-19,33,-16,-20,-69,-70,33,33,33,33,-14,-17,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,14,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,96,97,98,99,100,101,103,104,106,111,112,113,115,118,119,120,121,122,126,127,128,129,130,131,],[34,34,-2,-4,-5,-6,-7,-8,-9,-10,34,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,34,-59,-12,-22,34,-61,34,34,34,34,34,-68,-19,34,-16,-20,-69,-70,34,34,34,34,-14,-17,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,14,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,96,97,98,99,100,101,103,104,106,111,112,113,115,118,119,120,121,122,126,127,128,129,130,131,],[35,35,-2,-4,-5,-6,-7,-8,-9,-10,35,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,35,-59,-12,-22,35,-61,35,35,35,35,35,-68,-19,35,-16,-20,-69,-70,35,35,35,35,-14,-17,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,63,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,92,96,97,98,99,101,102,103,106,110,111,115,119,120,126,127,128,129,130,131,],[36,36,-2,-4,-5,-6,-7,-8,-9,-10,36,47,-58,36,36,36,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,36,36,-54,-55,-56,-57,-3,47,-58,36,36,36,36,36,36,36,36,36,36,36,36,36,-11,-21,-18,36,47,47,47,-50,47,47,-39,-40,-41,-42,47,47,47,47,47,47,47,47,-60,36,47,-52,36,-59,47,-22,-61,36,36,36,47,36,-19,-16,-20,36,36,36,36,-14,-17,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,16,17,18,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,63,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,92,96,97,98,99,101,102,103,106,111,115,119,120,126,127,128,129,130,131,],[37,37,-2,-4,-5,-6,-7,-8,-9,-10,37,37,37,37,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,37,37,-54,-55,-56,-57,-3,-58,37,37,37,37,37,37,37,37,37,37,37,37,37,-11,-21,-18,37,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,37,-52,37,-59,-12,-22,-61,37,37,37,37,-19,-16,-20,37,37,37,37,-14,-17,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,63,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,92,96,97,98,99,101,102,103,106,111,115,119,120,126,127,128,129,130,131,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,16,63,16,16,16,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,16,16,-54,-55,-56,-57,-3,63,16,16,16,16,16,16,16,16,16,16,16,16,16,-11,-21,-18,16,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,16,100,-52,16,-59,-12,-22,-61,16,16,16,16,-19,-16,-20,16,16,16,16,-14,-17,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,16,17,18,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,63,65,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,92,96,97,98,99,101,102,103,106,111,115,119,120,126,127,128,129,130,131,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,21,21,21,21,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,21,21,-54,-55,-56,-57,-3,-58,21,21,21,21,21,21,21,21,21,21,21,21,21,-11,-21,-18,21,-15,95,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,21,-52,21,-59,-12,-22,-61,21,21,21,21,-19,-16,-20,21,21,21,21,-14,-17,]),'FLOAT_NUMBER':([0,2,3,4,5,6,7,8,9,10,11,16,17,18,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,63,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,92,96,97,98,99,101,102,103,106,111,115,119,120,126,127,128,129,130,131,],[38,38,-2,-4,-5,-6,-7,-8,-9,-10,38,38,38,38,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,38,38,-54,-55,-56,-57,-3,-58,38,38,38,38,38,38,38,38,38,38,38,38,38,-11,-21,-18,38,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,38,-52,38,-59,-12,-22,-61,38,38,38,38,-19,-16,-20,38,38,38,38,-14,-17,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,16,17,18,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,63,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,92,96,97,98,99,101,102,103,106,111,115,119,120,126,127,128,129,130,131,],[39,39,-2,-4,-5,-6,-7,-8,-9,-10,39,39,39,39,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,39,39,-54,-55,-56,-57,-3,-58,39,39,39,39,39,39,39,39,39,39,39,39,39,-11,-21,-18,39,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,39,-52,39,-59,-12,-22,-61,39,39,39,39,-19,-16,-20,39,39,39,39,-14,-17,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,16,17,18,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,63,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,92,96,97,98,99,101,102,103,106,111,115,119,120,126,127,128,129,130,131,],[40,40,-2,-4,-5,-6,-7,-8,-9,-10,40,40,40,40,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,40,40,-54,-55,-56,-57,-3,-58,40,40,40,40,40,40,40,40,40,40,40,40,40,-11,-21,-18,40,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,40,-52,40,-59,-12,-22,-61,40,40,40,40,-19,-16,-20,40,40,40,40,-14,-17,]),'CHARACTER':([0,2,3,4,5,6,7,8,9,10,11,16,17,18,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,63,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,86,92,96,97,98,99,101,102,103,106,111,115,119,120,126,127,128,129,130,131,],[41,41,-2,-4,-5,-6,-7,-8,-9,-10,41,41,41,41,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,41,41,-54,-55,-56,-57,-3,-58,41,41,41,41,41,41,41,41,41,41,41,41,41,-11,-21,-18,41,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,41,-52,41,-59,-12,-22,-61,41,41,41,41,-19,-16,-20,41,41,41,41,-14,-17,]),'$end':([1,2,3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,97,98,99,101,115,119,120,130,131,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,-59,-12,-22,-61,-19,-16,-20,-14,-17,]),'RBRACE':([3,4,5,6,7,8,9,10,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,44,59,60,62,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,85,92,97,98,99,101,106,111,112,113,115,119,120,121,122,128,129,130,131,],[-2,-4,-5,-6,-7,-8,-9,-10,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-3,-58,-11,-21,-18,-15,-50,-51,-13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,-59,-12,-22,-61,115,119,120,-68,-19,-16,-20,-69,-70,130,131,-14,-17,]),'ASSIGN':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,44,59,60,69,70,73,74,75,76,77,78,79,80,81,82,83,85,92,97,99,101,],[45,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-58,86,-21,-50,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,-59,-22,-61,]),'PLUS':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[46,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,46,-58,46,46,46,-50,46,46,-39,-40,-41,-42,46,46,46,46,46,46,46,46,-60,46,-52,-59,46,-61,46,]),'TIMES':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[48,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,48,-58,48,48,48,-50,48,48,48,48,-41,-42,48,48,48,48,48,48,48,48,-60,48,-52,-59,48,-61,48,]),'DIVIDE':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[49,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,49,-58,49,49,49,-50,49,49,49,49,-41,-42,49,49,49,49,49,49,49,49,-60,49,-52,-59,49,-61,49,]),'EQ':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[50,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,50,-58,50,50,50,-50,50,50,-39,-40,-41,-42,None,None,None,None,None,50,50,50,-60,50,-52,-59,50,-61,50,]),'GT':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[51,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,51,-58,51,51,51,-50,51,51,-39,-40,-41,-42,None,None,None,None,None,51,51,51,-60,51,-52,-59,51,-61,51,]),'GE':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[52,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,52,-58,52,52,52,-50,52,52,-39,-40,-41,-42,None,None,None,None,None,52,52,52,-60,52,-52,-59,52,-61,52,]),'LT':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[53,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,53,-58,53,53,53,-50,53,53,-39,-40,-41,-42,None,None,None,None,None,53,53,53,-60,53,-52,-59,53,-61,53,]),'LE':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[54,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,54,-58,54,54,54,-50,54,54,-39,-40,-41,-42,None,None,None,None,None,54,54,54,-60,54,-52,-59,54,-61,54,]),'AND':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[55,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,55,-58,55,55,55,-50,-51,55,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,55,55,-60,55,-52,-59,55,-61,55,]),'OR':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[56,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,56,-58,56,56,56,-50,-51,56,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,56,-60,56,-52,-59,56,-61,56,]),'LBRACKET':([12,15,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[57,-58,68,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-25,-26,-27,-28,-54,-55,-56,-57,57,-58,57,57,57,-50,-51,57,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,57,-60,57,-52,-59,57,-61,57,]),'DOT':([12,15,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,97,98,101,110,],[58,-58,-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,58,-58,58,58,58,-50,-51,58,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,58,-60,58,-52,-59,58,-61,58,]),'COLON':([21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,43,44,66,67,69,70,73,74,75,76,77,78,79,80,81,82,83,85,92,97,101,117,],[-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,71,-58,93,94,-50,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,-52,-59,-61,123,]),'RPAREN':([21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,44,63,64,69,70,73,74,75,76,77,78,79,80,81,82,83,85,89,90,91,92,97,101,108,109,110,116,124,],[-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-58,-71,92,-50,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,101,-65,-67,-52,-59,-61,117,-62,-66,-64,-63,]),'RBRACKET':([21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,44,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,92,95,97,101,],[-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-58,-50,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,97,-60,-52,105,-59,-61,]),'COMMA':([21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,44,59,60,63,69,70,73,74,75,76,77,78,79,80,81,82,83,85,89,90,91,92,97,99,101,110,],[-53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-54,-55,-56,-57,-58,87,-21,-71,-50,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-60,102,-65,-67,-52,-59,-22,-61,-66,]),'LBRACE':([71,93,94,123,125,],[96,103,104,126,127,]),'SEMICOLON':([108,109,116,124,],[118,-62,-64,-63,]),'ELSE':([119,],[125,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,96,103,126,127,],[2,106,111,128,129,]),'statement':([0,2,96,103,106,111,126,127,128,129,],[3,42,3,3,42,42,3,3,42,42,]),'statement_declaration':([0,2,96,103,106,111,126,127,128,129,],[4,4,4,4,4,4,4,4,4,4,]),'statement_assign':([0,2,96,103,106,111,126,127,128,129,],[5,5,5,5,5,5,5,5,5,5,]),'statement_function':([0,2,96,103,106,111,126,127,128,129,],[6,6,6,6,6,6,6,6,6,6,]),'statement_return':([0,2,96,103,106,111,126,127,128,129,],[7,7,7,7,7,7,7,7,7,7,]),'statement_if':([0,2,96,103,106,111,126,127,128,129,],[8,8,8,8,8,8,8,8,8,8,]),'statement_instance':([0,2,96,103,106,111,126,127,128,129,],[9,9,9,9,9,9,9,9,9,9,]),'statement_type_def':([0,2,96,103,106,111,126,127,128,129,],[10,10,10,10,10,10,10,10,10,10,]),'expression':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[12,12,43,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,90,98,12,110,12,12,12,12,12,12,12,]),'type':([0,2,14,96,100,103,104,106,111,112,118,126,127,128,129,],[13,13,61,13,107,13,114,13,13,114,107,13,13,13,13,]),'base_type':([0,2,14,96,100,103,104,106,111,112,118,126,127,128,129,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'expression_binaria':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'expression_comparacion':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'expression_logica':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'expression_unaria':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'expression_group':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expression_number':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expression_var':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expression_array_access':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'expression_field_access':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'expression_func_call':([0,2,11,16,17,18,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,63,86,96,102,103,106,111,126,127,128,129,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'id_list':([13,],[59,]),'arg_list':([63,],[89,]),'empty':([63,],[91,]),'param_list':([100,],[108,]),'param':([100,118,],[109,124,]),'field_list':([104,],[112,]),'field':([104,112,],[113,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',26),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',32),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',33),
  ('statement -> statement_declaration','statement',1,'p_statement','parser.py',41),
  ('statement -> statement_assign','statement',1,'p_statement','parser.py',42),
  ('statement -> statement_function','statement',1,'p_statement','parser.py',43),
  ('statement -> statement_return','statement',1,'p_statement','parser.py',44),
  ('statement -> statement_if','statement',1,'p_statement','parser.py',45),
  ('statement -> statement_instance','statement',1,'p_statement','parser.py',46),
  ('statement -> statement_type_def','statement',1,'p_statement','parser.py',47),
  ('statement_declaration -> type id_list','statement_declaration',2,'p_statement_declaration','parser.py',51),
  ('statement_declaration -> type id_list ASSIGN expression','statement_declaration',4,'p_statement_declaration','parser.py',52),
  ('statement_assign -> expression ASSIGN expression','statement_assign',3,'p_statement_assign','parser.py',59),
  ('statement_function -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE','statement_function',10,'p_statement_function','parser.py',64),
  ('statement_return -> RETURN expression','statement_return',2,'p_statement_return','parser.py',71),
  ('statement_if -> IF expression COLON LBRACE statement_list RBRACE','statement_if',6,'p_statement_if','parser.py',80),
  ('statement_if -> IF expression COLON LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','statement_if',10,'p_statement_if','parser.py',81),
  ('statement_instance -> ID ID','statement_instance',2,'p_statement_instance','parser.py',90),
  ('statement -> WHILE expression COLON LBRACE statement_list RBRACE','statement',6,'p_statement_while','parser.py',95),
  ('statement_type_def -> TYPE ID COLON LBRACE field_list RBRACE','statement_type_def',6,'p_statement_type_def','parser.py',100),
  ('id_list -> ID','id_list',1,'p_id_list_single','parser.py',104),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list_rec','parser.py',108),
  ('type -> base_type','type',1,'p_type','parser.py',112),
  ('type -> base_type LBRACKET NUMBER RBRACKET','type',4,'p_type','parser.py',113),
  ('base_type -> INT','base_type',1,'p_base_type','parser.py',120),
  ('base_type -> FLOAT','base_type',1,'p_base_type','parser.py',121),
  ('base_type -> CHAR','base_type',1,'p_base_type','parser.py',122),
  ('base_type -> BOOL','base_type',1,'p_base_type','parser.py',123),
  ('expression -> expression_binaria','expression',1,'p_expression','parser.py',129),
  ('expression -> expression_comparacion','expression',1,'p_expression','parser.py',130),
  ('expression -> expression_logica','expression',1,'p_expression','parser.py',131),
  ('expression -> expression_unaria','expression',1,'p_expression','parser.py',132),
  ('expression -> expression_group','expression',1,'p_expression','parser.py',133),
  ('expression -> expression_number','expression',1,'p_expression','parser.py',134),
  ('expression -> expression_var','expression',1,'p_expression','parser.py',135),
  ('expression -> expression_array_access','expression',1,'p_expression','parser.py',136),
  ('expression -> expression_field_access','expression',1,'p_expression','parser.py',137),
  ('expression -> expression_func_call','expression',1,'p_expression','parser.py',138),
  ('expression_binaria -> expression PLUS expression','expression_binaria',3,'p_expression_binaria','parser.py',142),
  ('expression_binaria -> expression MINUS expression','expression_binaria',3,'p_expression_binaria','parser.py',143),
  ('expression_binaria -> expression TIMES expression','expression_binaria',3,'p_expression_binaria','parser.py',144),
  ('expression_binaria -> expression DIVIDE expression','expression_binaria',3,'p_expression_binaria','parser.py',145),
  ('expression_comparacion -> expression EQ expression','expression_comparacion',3,'p_expression_comparacion','parser.py',150),
  ('expression_comparacion -> expression GT expression','expression_comparacion',3,'p_expression_comparacion','parser.py',151),
  ('expression_comparacion -> expression GE expression','expression_comparacion',3,'p_expression_comparacion','parser.py',152),
  ('expression_comparacion -> expression LT expression','expression_comparacion',3,'p_expression_comparacion','parser.py',153),
  ('expression_comparacion -> expression LE expression','expression_comparacion',3,'p_expression_comparacion','parser.py',154),
  ('expression_logica -> expression AND expression','expression_logica',3,'p_expression_logica','parser.py',159),
  ('expression_logica -> expression OR expression','expression_logica',3,'p_expression_logica','parser.py',160),
  ('expression_unaria -> MINUS expression','expression_unaria',2,'p_expression_unaria','parser.py',164),
  ('expression_unaria -> NOT expression','expression_unaria',2,'p_expression_unaria','parser.py',165),
  ('expression_group -> LPAREN expression RPAREN','expression_group',3,'p_expression_group','parser.py',169),
  ('expression_number -> NUMBER','expression_number',1,'p_expression_number','parser.py',173),
  ('expression_number -> FLOAT_NUMBER','expression_number',1,'p_expression_number','parser.py',174),
  ('expression_number -> TRUE','expression_number',1,'p_expression_number','parser.py',175),
  ('expression_number -> FALSE','expression_number',1,'p_expression_number','parser.py',176),
  ('expression_number -> CHARACTER','expression_number',1,'p_expression_number','parser.py',177),
  ('expression_var -> ID','expression_var',1,'p_expression_var','parser.py',182),
  ('expression_array_access -> expression LBRACKET expression RBRACKET','expression_array_access',4,'p_expression_array_access','parser.py',187),
  ('expression_field_access -> expression DOT ID','expression_field_access',3,'p_expression_field_access','parser.py',192),
  ('expression_func_call -> ID LPAREN arg_list RPAREN','expression_func_call',4,'p_expression_func_call','parser.py',196),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',202),
  ('param_list -> param_list SEMICOLON param','param_list',3,'p_param_list','parser.py',203),
  ('param -> type ID','param',2,'p_param','parser.py',210),
  ('arg_list -> expression','arg_list',1,'p_arg_list','parser.py',214),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','parser.py',215),
  ('arg_list -> empty','arg_list',1,'p_arg_list','parser.py',216),
  ('field_list -> field','field_list',1,'p_field_list','parser.py',227),
  ('field_list -> field_list field','field_list',2,'p_field_list','parser.py',228),
  ('field -> type ID','field',2,'p_field','parser.py',235),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',241),
]
