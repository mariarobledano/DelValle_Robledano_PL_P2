
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTnonassocEQGTGELTLEleftPLUSMINUSleftTIMESDIVIDErightUMINUSAND ASSIGN BOOL CHAR CHARACTER COLON COMMA DEF DIVIDE DOT ELSE EQ FALSE FLOAT FLOAT_NUMBER GE GT ID IF INT LBRACE LBRACKET LE LPAREN LT MINUS NEWLINE NOT NUMBER OR PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON TIMES TRUE TYPE WHILEprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : type ID\n                 | type ID ASSIGN expressiontype : INT\n            | FLOAT\n            | CHAR\n            | BOOLexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EQ expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression LT expression\n                  | expression LE expression\n                  | expression AND expression\n                  | expression OR expressionexpression : MINUS expression %prec UMINUS\n                  | NOT expressionexpression : LPAREN expression RPARENexpression : NUMBER\n                  | FLOAT_NUMBER\n                  | TRUE\n                  | FALSE\n                  | CHARACTERexpression : IDstatement : ID ASSIGN expressionstatement : DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACEparam_list : param\n                  | param_list SEMICOLON paramparam : type IDstatement : RETURN expressionexpression : ID LPAREN arg_list RPARENarg_list : expression\n                | arg_list COMMA expression\n                | emptyempty :statement : TYPE ID COLON LBRACE field_list RBRACEfield_list : field\n                  | field_list fieldfield : type IDexpression : expression DOT ID'
    
_lr_action_items = {'ID':([0,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,67,70,71,74,79,84,85,86,],[5,5,-2,14,26,27,-6,-7,-8,-9,-3,-4,26,30,-35,26,26,26,-24,-25,-26,-27,-28,-29,26,-30,26,26,26,26,26,26,26,26,26,26,26,61,-21,-22,26,-5,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,75,-36,26,81,-41,5,5,-31,]),'DEF':([0,2,3,13,14,17,21,22,23,24,25,26,29,43,44,48,50,51,52,53,54,55,56,57,58,59,60,61,62,70,79,84,85,86,],[6,6,-2,-3,-4,-35,-24,-25,-26,-27,-28,-29,-30,-21,-22,-5,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,-36,-41,6,6,-31,]),'RETURN':([0,2,3,13,14,17,21,22,23,24,25,26,29,43,44,48,50,51,52,53,54,55,56,57,58,59,60,61,62,70,79,84,85,86,],[7,7,-2,-3,-4,-35,-24,-25,-26,-27,-28,-29,-30,-21,-22,-5,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,-36,-41,7,7,-31,]),'TYPE':([0,2,3,13,14,17,21,22,23,24,25,26,29,43,44,48,50,51,52,53,54,55,56,57,58,59,60,61,62,70,79,84,85,86,],[8,8,-2,-3,-4,-35,-24,-25,-26,-27,-28,-29,-30,-21,-22,-5,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,-36,-41,8,8,-31,]),'INT':([0,2,3,6,13,14,17,21,22,23,24,25,26,29,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,70,72,73,77,79,80,81,84,85,86,],[9,9,-2,9,-3,-4,-35,-24,-25,-26,-27,-28,-29,-30,-21,-22,-5,9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,9,-36,9,-42,9,-41,-43,-44,9,9,-31,]),'FLOAT':([0,2,3,6,13,14,17,21,22,23,24,25,26,29,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,70,72,73,77,79,80,81,84,85,86,],[10,10,-2,10,-3,-4,-35,-24,-25,-26,-27,-28,-29,-30,-21,-22,-5,10,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,10,-36,10,-42,10,-41,-43,-44,10,10,-31,]),'CHAR':([0,2,3,6,13,14,17,21,22,23,24,25,26,29,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,70,72,73,77,79,80,81,84,85,86,],[11,11,-2,11,-3,-4,-35,-24,-25,-26,-27,-28,-29,-30,-21,-22,-5,11,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,11,-36,11,-42,11,-41,-43,-44,11,11,-31,]),'BOOL':([0,2,3,6,13,14,17,21,22,23,24,25,26,29,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,70,72,73,77,79,80,81,84,85,86,],[12,12,-2,12,-3,-4,-35,-24,-25,-26,-27,-28,-29,-30,-21,-22,-5,12,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,12,-36,12,-42,12,-41,-43,-44,12,12,-31,]),'$end':([1,2,3,13,14,17,21,22,23,24,25,26,29,43,44,48,50,51,52,53,54,55,56,57,58,59,60,61,62,70,79,86,],[0,-1,-2,-3,-4,-35,-24,-25,-26,-27,-28,-29,-30,-21,-22,-5,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,-36,-41,-31,]),'RBRACE':([3,13,14,17,21,22,23,24,25,26,29,43,44,48,50,51,52,53,54,55,56,57,58,59,60,61,62,70,72,73,79,80,81,85,86,],[-2,-3,-4,-35,-24,-25,-26,-27,-28,-29,-30,-21,-22,-5,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,-36,79,-42,-41,-43,-44,86,-31,]),'ASSIGN':([5,14,],[15,28,]),'MINUS':([7,15,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,71,78,],[18,18,32,18,18,18,-24,-25,-26,-27,-28,-29,18,32,18,18,18,18,18,18,18,18,18,18,18,-21,32,32,18,32,-10,-11,-12,-13,32,32,32,32,32,32,32,-45,-23,32,-36,18,32,]),'NOT':([7,15,18,19,20,28,31,32,33,34,35,36,37,38,39,40,41,46,71,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LPAREN':([7,15,18,19,20,26,28,30,31,32,33,34,35,36,37,38,39,40,41,46,71,],[20,20,20,20,20,46,20,49,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'NUMBER':([7,15,18,19,20,28,31,32,33,34,35,36,37,38,39,40,41,46,71,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'FLOAT_NUMBER':([7,15,18,19,20,28,31,32,33,34,35,36,37,38,39,40,41,46,71,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'TRUE':([7,15,18,19,20,28,31,32,33,34,35,36,37,38,39,40,41,46,71,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'FALSE':([7,15,18,19,20,28,31,32,33,34,35,36,37,38,39,40,41,46,71,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'CHARACTER':([7,15,18,19,20,28,31,32,33,34,35,36,37,38,39,40,41,46,71,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'PLUS':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[31,-24,-25,-26,-27,-28,-29,31,-21,31,31,31,-10,-11,-12,-13,31,31,31,31,31,31,31,-45,-23,31,-36,31,]),'TIMES':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[33,-24,-25,-26,-27,-28,-29,33,-21,33,33,33,33,33,-12,-13,33,33,33,33,33,33,33,-45,-23,33,-36,33,]),'DIVIDE':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[34,-24,-25,-26,-27,-28,-29,34,-21,34,34,34,34,34,-12,-13,34,34,34,34,34,34,34,-45,-23,34,-36,34,]),'EQ':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[35,-24,-25,-26,-27,-28,-29,35,-21,35,35,35,-10,-11,-12,-13,None,None,None,None,None,35,35,-45,-23,35,-36,35,]),'GT':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[36,-24,-25,-26,-27,-28,-29,36,-21,36,36,36,-10,-11,-12,-13,None,None,None,None,None,36,36,-45,-23,36,-36,36,]),'GE':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[37,-24,-25,-26,-27,-28,-29,37,-21,37,37,37,-10,-11,-12,-13,None,None,None,None,None,37,37,-45,-23,37,-36,37,]),'LT':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[38,-24,-25,-26,-27,-28,-29,38,-21,38,38,38,-10,-11,-12,-13,None,None,None,None,None,38,38,-45,-23,38,-36,38,]),'LE':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[39,-24,-25,-26,-27,-28,-29,39,-21,39,39,39,-10,-11,-12,-13,None,None,None,None,None,39,39,-45,-23,39,-36,39,]),'AND':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[40,-24,-25,-26,-27,-28,-29,40,-21,-22,40,40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,40,-45,-23,40,-36,40,]),'OR':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[41,-24,-25,-26,-27,-28,-29,41,-21,-22,41,41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,41,-36,41,]),'DOT':([17,21,22,23,24,25,26,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,70,78,],[42,-24,-25,-26,-27,-28,-29,42,-21,-22,42,42,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,42,-36,42,]),'RPAREN':([21,22,23,24,25,26,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,75,78,83,],[-24,-25,-26,-27,-28,-29,-21,-22,62,-40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,70,-37,-39,76,-32,-36,-34,-38,-33,]),'COMMA':([21,22,23,24,25,26,43,44,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,78,],[-24,-25,-26,-27,-28,-29,-21,-22,-40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-45,-23,71,-37,-39,-36,-38,]),'COLON':([27,76,],[47,82,]),'LBRACE':([47,82,],[66,84,]),'SEMICOLON':([68,69,75,83,],[77,-32,-34,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,84,],[2,85,]),'statement':([0,2,84,85,],[3,13,3,13,]),'type':([0,2,6,49,66,72,77,84,85,],[4,4,16,67,74,74,67,4,4,]),'expression':([7,15,18,19,20,28,31,32,33,34,35,36,37,38,39,40,41,46,71,],[17,29,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,64,78,]),'arg_list':([46,],[63,]),'empty':([46,],[65,]),'param_list':([49,],[68,]),'param':([49,77,],[69,83,]),'field_list':([66,],[72,]),'field':([66,72,],[73,80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',16),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',20),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',21),
  ('statement -> type ID','statement',2,'p_statement_declaration','parser.py',30),
  ('statement -> type ID ASSIGN expression','statement',4,'p_statement_declaration','parser.py',31),
  ('type -> INT','type',1,'p_type','parser.py',38),
  ('type -> FLOAT','type',1,'p_type','parser.py',39),
  ('type -> CHAR','type',1,'p_type','parser.py',40),
  ('type -> BOOL','type',1,'p_type','parser.py',41),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binaria','parser.py',46),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binaria','parser.py',47),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binaria','parser.py',48),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binaria','parser.py',49),
  ('expression -> expression EQ expression','expression',3,'p_expression_binaria','parser.py',50),
  ('expression -> expression GT expression','expression',3,'p_expression_binaria','parser.py',51),
  ('expression -> expression GE expression','expression',3,'p_expression_binaria','parser.py',52),
  ('expression -> expression LT expression','expression',3,'p_expression_binaria','parser.py',53),
  ('expression -> expression LE expression','expression',3,'p_expression_binaria','parser.py',54),
  ('expression -> expression AND expression','expression',3,'p_expression_binaria','parser.py',55),
  ('expression -> expression OR expression','expression',3,'p_expression_binaria','parser.py',56),
  ('expression -> MINUS expression','expression',2,'p_expression_unaria','parser.py',60),
  ('expression -> NOT expression','expression',2,'p_expression_unaria','parser.py',61),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',65),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',69),
  ('expression -> FLOAT_NUMBER','expression',1,'p_expression_number','parser.py',70),
  ('expression -> TRUE','expression',1,'p_expression_number','parser.py',71),
  ('expression -> FALSE','expression',1,'p_expression_number','parser.py',72),
  ('expression -> CHARACTER','expression',1,'p_expression_number','parser.py',73),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',79),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','parser.py',84),
  ('statement -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE','statement',10,'p_statement_function','parser.py',88),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',92),
  ('param_list -> param_list SEMICOLON param','param_list',3,'p_param_list','parser.py',93),
  ('param -> type ID','param',2,'p_param','parser.py',100),
  ('statement -> RETURN expression','statement',2,'p_statement_return','parser.py',104),
  ('expression -> ID LPAREN arg_list RPAREN','expression',4,'p_expression_func_call','parser.py',108),
  ('arg_list -> expression','arg_list',1,'p_arg_list','parser.py',112),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','parser.py',113),
  ('arg_list -> empty','arg_list',1,'p_arg_list','parser.py',114),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',124),
  ('statement -> TYPE ID COLON LBRACE field_list RBRACE','statement',6,'p_statement_type_def','parser.py',128),
  ('field_list -> field','field_list',1,'p_field_list','parser.py',132),
  ('field_list -> field_list field','field_list',2,'p_field_list','parser.py',133),
  ('field -> type ID','field',2,'p_field','parser.py',140),
  ('expression -> expression DOT ID','expression',3,'p_expression_field_access','parser.py',145),
]
