
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTnonassocEQGTGELTLEleftPLUSMINUSleftTIMESDIVIDErightUMINUSAND ASSIGN BOOL CHAR CHARACTER COLON COMMA DEF DIVIDE DOT ELSE EQ FALSE FLOAT FLOAT_NUMBER GE GT ID IF INT LBRACE LBRACKET LE LPAREN LT MINUS NOT NUMBER OR PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON TIMES TRUE TYPEprogram : statement_liststatement_list : statement\n                          | statement_list statement statement : statement_declaration\n                    | statement_assign\n                    | statement_function\n                    | statement_return\n                    | statement_if\n                    | statement_instance\n                    | statement_type_defstatement_declaration : type id_list\n                                | type id_list ASSIGN expressionstatement_assign : expression ASSIGN expressionstatement_function : DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACEstatement_return : RETURN expressionstatement_if : IF expression statement ELSE statementstatement_instance : ID IDstatement_type_def : TYPE ID COLON LBRACE field_list RBRACEid_list : IDid_list : id_list COMMA IDtype : base_type\n                | base_type LBRACKET NUMBER RBRACKETbase_type : INT\n                    | FLOAT\n                    | CHAR\n                    | BOOLexpression : expression_binaria\n                    | expression_comparacion\n                    | expression_logica\n                    | expression_unaria\n                    | expression_group\n                    | expression_number\n                    | expression_var\n                    | expression_array_access\n                    | expression_field_access\n                    | expression_func_callexpression_binaria : expression PLUS expression\n                            | expression MINUS expression\n                            | expression TIMES expression\n                            | expression DIVIDE expressionexpression_comparacion : expression EQ expression\n                                | expression GT expression\n                                | expression GE expression\n                                | expression LT expression\n                                | expression LE expressionexpression_logica : expression AND expression\n                            | expression OR expressionexpression_unaria : MINUS expression %prec UMINUS\n                            | NOT expressionexpression_group : LPAREN expression RPARENexpression_number : NUMBER\n                            | FLOAT_NUMBER\n                            | TRUE\n                            | FALSE\n                            | CHARACTERexpression_var : IDexpression_array_access : expression LBRACKET expression RBRACKETexpression_field_access : expression DOT IDexpression_func_call : ID LPAREN arg_list RPARENparam_list : param\n                      | param_list SEMICOLON paramparam : type IDarg_list : expression\n                    | arg_list COMMA expression\n                    | emptyfield_list : field\n                      | field_list fieldfield : type IDempty :'
    
_lr_action_items = {'DEF':([0,2,3,4,5,6,7,8,9,10,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,59,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,94,95,96,98,100,101,108,115,120,121,122,],[13,13,-2,-4,-5,-6,-7,-8,-9,-10,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-3,-11,-19,-17,-56,-15,13,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-12,-20,-57,-59,13,-38,-16,-18,13,13,-14,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,59,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,94,95,96,98,100,101,108,115,120,121,122,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-3,-11,-19,-17,-56,-15,16,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-12,-20,-57,-59,16,-38,-16,-18,16,16,-14,]),'IF':([0,2,3,4,5,6,7,8,9,10,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,59,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,94,95,96,98,100,101,108,115,120,121,122,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-3,-11,-19,-17,-56,-15,17,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-12,-20,-57,-59,17,-38,-16,-18,17,17,-14,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,89,91,94,95,96,98,99,100,101,103,104,108,111,115,120,121,122,],[14,14,-2,-4,-5,-6,-7,-8,-9,-10,43,59,62,62,62,65,-21,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-23,-24,-25,-26,62,62,-52,-53,-54,-55,-3,-11,-19,62,62,62,62,62,62,62,62,62,62,62,62,62,84,85,-17,62,-56,-15,14,-48,-49,62,95,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,62,-12,-20,-57,-59,62,14,-38,-22,112,-16,117,-18,14,14,-14,]),'TYPE':([0,2,3,4,5,6,7,8,9,10,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,59,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,94,95,96,98,100,101,108,115,120,121,122,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-3,-11,-19,-17,-56,-15,18,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-12,-20,-57,-59,18,-38,-16,-18,18,18,-14,]),'INT':([0,2,3,4,5,6,7,8,9,10,13,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,59,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,94,95,96,97,98,100,101,102,108,109,110,114,115,116,117,120,121,122,],[31,31,-2,-4,-5,-6,-7,-8,-9,-10,31,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-3,-11,-19,-17,-56,-15,31,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-12,-20,-57,31,-59,31,-38,31,-16,31,-66,31,-18,-67,-68,31,31,-14,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,13,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,59,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,94,95,96,97,98,100,101,102,108,109,110,114,115,116,117,120,121,122,],[32,32,-2,-4,-5,-6,-7,-8,-9,-10,32,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-3,-11,-19,-17,-56,-15,32,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-12,-20,-57,32,-59,32,-38,32,-16,32,-66,32,-18,-67,-68,32,32,-14,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,13,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,59,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,94,95,96,97,98,100,101,102,108,109,110,114,115,116,117,120,121,122,],[33,33,-2,-4,-5,-6,-7,-8,-9,-10,33,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-3,-11,-19,-17,-56,-15,33,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-12,-20,-57,33,-59,33,-38,33,-16,33,-66,33,-18,-67,-68,33,33,-14,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,13,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,59,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,94,95,96,97,98,100,101,102,108,109,110,114,115,116,117,120,121,122,],[34,34,-2,-4,-5,-6,-7,-8,-9,-10,34,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-3,-11,-19,-17,-56,-15,34,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-12,-20,-57,34,-59,34,-38,34,-16,34,-66,34,-18,-67,-68,34,34,-14,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,12,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,91,94,95,96,98,99,100,101,107,108,115,120,121,122,],[35,35,-2,-4,-5,-6,-7,-8,-9,-10,46,-56,35,35,35,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,35,35,-52,-53,-54,-55,-3,-11,-19,35,35,35,35,35,35,35,35,35,35,35,35,35,-17,35,46,-56,46,91,-48,46,35,46,-37,-38,-39,-40,46,46,46,46,46,46,46,46,-58,46,-50,35,46,-20,-57,-59,35,35,-38,46,-16,-18,35,35,-14,]),'NOT':([0,2,3,4,5,6,7,8,9,10,15,16,17,20,21,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,62,63,64,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,84,89,91,94,95,96,98,99,100,101,108,115,120,121,122,],[36,36,-2,-4,-5,-6,-7,-8,-9,-10,36,36,36,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,36,36,-52,-53,-54,-55,-3,-11,-19,36,36,36,36,36,36,36,36,36,36,36,36,36,-17,36,-56,-15,36,-48,-49,36,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,36,-12,-20,-57,-59,36,36,-38,-16,-18,36,36,-14,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,62,63,64,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,84,85,89,91,94,95,96,98,99,100,101,108,115,120,121,122,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,60,15,15,15,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,15,15,-52,-53,-54,-55,-3,-11,-19,15,15,15,15,15,15,15,15,15,15,15,15,15,-17,15,60,-15,15,-48,-49,15,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,97,-50,15,-12,-20,-57,-59,15,15,-38,-16,-18,15,15,-14,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,15,16,17,20,21,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,62,63,64,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,84,89,91,94,95,96,98,99,100,101,108,115,120,121,122,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,20,20,20,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,20,20,-52,-53,-54,-55,-3,-11,-19,20,20,20,20,20,20,20,20,20,20,20,20,20,-17,20,-56,-15,20,93,-48,-49,20,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,20,-12,-20,-57,-59,20,20,-38,-16,-18,20,20,-14,]),'FLOAT_NUMBER':([0,2,3,4,5,6,7,8,9,10,15,16,17,20,21,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,62,63,64,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,84,89,91,94,95,96,98,99,100,101,108,115,120,121,122,],[37,37,-2,-4,-5,-6,-7,-8,-9,-10,37,37,37,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,37,37,-52,-53,-54,-55,-3,-11,-19,37,37,37,37,37,37,37,37,37,37,37,37,37,-17,37,-56,-15,37,-48,-49,37,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,37,-12,-20,-57,-59,37,37,-38,-16,-18,37,37,-14,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,15,16,17,20,21,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,62,63,64,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,84,89,91,94,95,96,98,99,100,101,108,115,120,121,122,],[38,38,-2,-4,-5,-6,-7,-8,-9,-10,38,38,38,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,38,38,-52,-53,-54,-55,-3,-11,-19,38,38,38,38,38,38,38,38,38,38,38,38,38,-17,38,-56,-15,38,-48,-49,38,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,38,-12,-20,-57,-59,38,38,-38,-16,-18,38,38,-14,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,15,16,17,20,21,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,62,63,64,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,84,89,91,94,95,96,98,99,100,101,108,115,120,121,122,],[39,39,-2,-4,-5,-6,-7,-8,-9,-10,39,39,39,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,39,39,-52,-53,-54,-55,-3,-11,-19,39,39,39,39,39,39,39,39,39,39,39,39,39,-17,39,-56,-15,39,-48,-49,39,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,39,-12,-20,-57,-59,39,39,-38,-16,-18,39,39,-14,]),'CHARACTER':([0,2,3,4,5,6,7,8,9,10,15,16,17,20,21,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,62,63,64,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,84,89,91,94,95,96,98,99,100,101,108,115,120,121,122,],[40,40,-2,-4,-5,-6,-7,-8,-9,-10,40,40,40,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,40,40,-52,-53,-54,-55,-3,-11,-19,40,40,40,40,40,40,40,40,40,40,40,40,40,-17,40,-56,-15,40,-48,-49,40,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,40,-12,-20,-57,-59,40,40,-38,-16,-18,40,40,-14,]),'$end':([1,2,3,4,5,6,7,8,9,10,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,59,62,63,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,94,95,96,98,108,115,122,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-3,-11,-19,-17,-56,-15,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-12,-20,-57,-59,-16,-18,-14,]),'RBRACE':([3,4,5,6,7,8,9,10,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,59,62,63,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,94,95,96,98,108,109,110,115,116,117,121,122,],[-2,-4,-5,-6,-7,-8,-9,-10,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-3,-11,-19,-17,-56,-15,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-12,-20,-57,-59,-16,115,-66,-18,-67,-68,122,-14,]),'ELSE':([4,5,6,7,8,9,10,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,42,43,59,62,63,67,68,71,72,73,74,75,76,77,78,79,80,81,82,84,89,90,94,95,96,98,108,115,122,],[-4,-5,-6,-7,-8,-9,-10,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-11,-19,-17,-56,-15,-48,-49,-13,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,100,-12,-20,-57,-59,-16,-18,-14,]),'ASSIGN':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,42,43,62,67,68,72,73,74,75,76,77,78,79,80,81,82,84,89,95,96,98,101,],[44,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,69,-19,-56,-48,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,-50,-20,-57,-59,-48,]),'PLUS':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[45,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,45,-56,45,45,-48,45,45,-37,-38,-39,-40,45,45,45,45,45,45,45,45,-58,45,-50,45,-57,-59,-38,45,]),'TIMES':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[47,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,47,-56,47,47,-48,47,47,47,47,-39,-40,47,47,47,47,47,47,47,47,-58,47,-50,47,-57,-59,47,47,]),'DIVIDE':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[48,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,48,-56,48,48,-48,48,48,48,48,-39,-40,48,48,48,48,48,48,48,48,-58,48,-50,48,-57,-59,48,48,]),'EQ':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[49,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,49,-56,49,49,-48,49,49,-37,-38,-39,-40,None,None,None,None,None,49,49,49,-58,49,-50,49,-57,-59,-38,49,]),'GT':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[50,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,50,-56,50,50,-48,50,50,-37,-38,-39,-40,None,None,None,None,None,50,50,50,-58,50,-50,50,-57,-59,-38,50,]),'GE':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[51,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,51,-56,51,51,-48,51,51,-37,-38,-39,-40,None,None,None,None,None,51,51,51,-58,51,-50,51,-57,-59,-38,51,]),'LT':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[52,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,52,-56,52,52,-48,52,52,-37,-38,-39,-40,None,None,None,None,None,52,52,52,-58,52,-50,52,-57,-59,-38,52,]),'LE':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[53,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,53,-56,53,53,-48,53,53,-37,-38,-39,-40,None,None,None,None,None,53,53,53,-58,53,-50,53,-57,-59,-38,53,]),'AND':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[54,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,54,-56,54,54,-48,-49,54,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,54,54,-58,54,-50,54,-57,-59,-38,54,]),'OR':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[55,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,55,-56,55,55,-48,-49,55,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,55,-58,55,-50,55,-57,-59,-38,55,]),'LBRACKET':([12,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[56,-56,66,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-23,-24,-25,-26,-52,-53,-54,-55,56,-56,56,56,-48,-49,56,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,56,-58,56,-50,56,-57,-59,-38,56,]),'DOT':([12,14,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,61,62,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,94,96,98,101,107,],[57,-56,-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,57,-56,57,57,-48,-49,57,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,57,-58,57,-50,57,-57,-59,-38,57,]),'RPAREN':([20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,60,61,62,67,68,72,73,74,75,76,77,78,79,80,81,82,84,86,87,88,89,96,98,105,106,107,112,119,],[-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-69,89,-56,-48,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,98,-63,-65,-50,-57,-59,113,-60,-64,-62,-61,]),'RBRACKET':([20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,62,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,89,93,96,98,],[-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,-56,-48,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,96,-58,-50,103,-57,-59,]),'COMMA':([20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,42,43,60,62,67,68,72,73,74,75,76,77,78,79,80,81,82,84,86,87,88,89,95,96,98,107,],[-51,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-53,-54,-55,70,-19,-69,-56,-48,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-58,99,-63,-65,-50,-20,-57,-59,-64,]),'COLON':([65,113,],[92,118,]),'LBRACE':([92,118,],[102,120,]),'SEMICOLON':([105,106,112,119,],[114,-60,-62,-61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,120,],[2,121,]),'statement':([0,2,64,100,120,121,],[3,41,90,108,3,41,]),'statement_declaration':([0,2,64,100,120,121,],[4,4,4,4,4,4,]),'statement_assign':([0,2,64,100,120,121,],[5,5,5,5,5,5,]),'statement_function':([0,2,64,100,120,121,],[6,6,6,6,6,6,]),'statement_return':([0,2,64,100,120,121,],[7,7,7,7,7,7,]),'statement_if':([0,2,64,100,120,121,],[8,8,8,8,8,8,]),'statement_instance':([0,2,64,100,120,121,],[9,9,9,9,9,9,]),'statement_type_def':([0,2,64,100,120,121,],[10,10,10,10,10,10,]),'type':([0,2,13,64,97,100,102,109,114,120,121,],[11,11,58,11,104,11,111,111,104,11,11,]),'expression':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[12,12,61,63,64,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,87,12,94,101,107,12,12,12,]),'base_type':([0,2,13,64,97,100,102,109,114,120,121,],[19,19,19,19,19,19,19,19,19,19,19,]),'expression_binaria':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'expression_comparacion':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'expression_logica':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'expression_unaria':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'expression_group':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'expression_number':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expression_var':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expression_array_access':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expression_field_access':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'expression_func_call':([0,2,15,16,17,35,36,44,45,46,47,48,49,50,51,52,53,54,55,56,60,64,69,91,99,100,120,121,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'id_list':([11,],[42,]),'arg_list':([60,],[86,]),'empty':([60,],[88,]),'param_list':([97,],[105,]),'param':([97,114,],[106,119,]),'field_list':([102,],[109,]),'field':([102,109,],[110,116,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',26),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',32),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',33),
  ('statement -> statement_declaration','statement',1,'p_statement','parser.py',41),
  ('statement -> statement_assign','statement',1,'p_statement','parser.py',42),
  ('statement -> statement_function','statement',1,'p_statement','parser.py',43),
  ('statement -> statement_return','statement',1,'p_statement','parser.py',44),
  ('statement -> statement_if','statement',1,'p_statement','parser.py',45),
  ('statement -> statement_instance','statement',1,'p_statement','parser.py',46),
  ('statement -> statement_type_def','statement',1,'p_statement','parser.py',47),
  ('statement_declaration -> type id_list','statement_declaration',2,'p_statement_declaration','parser.py',51),
  ('statement_declaration -> type id_list ASSIGN expression','statement_declaration',4,'p_statement_declaration','parser.py',52),
  ('statement_assign -> expression ASSIGN expression','statement_assign',3,'p_statement_assign','parser.py',59),
  ('statement_function -> DEF type ID LPAREN param_list RPAREN COLON LBRACE statement_list RBRACE','statement_function',10,'p_statement_function','parser.py',64),
  ('statement_return -> RETURN expression','statement_return',2,'p_statement_return','parser.py',71),
  ('statement_if -> IF expression statement ELSE statement','statement_if',5,'p_statement_if','parser.py',80),
  ('statement_instance -> ID ID','statement_instance',2,'p_statement_instance','parser.py',85),
  ('statement_type_def -> TYPE ID COLON LBRACE field_list RBRACE','statement_type_def',6,'p_statement_type_def','parser.py',90),
  ('id_list -> ID','id_list',1,'p_id_list_single','parser.py',94),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list_rec','parser.py',98),
  ('type -> base_type','type',1,'p_type','parser.py',102),
  ('type -> base_type LBRACKET NUMBER RBRACKET','type',4,'p_type','parser.py',103),
  ('base_type -> INT','base_type',1,'p_base_type','parser.py',110),
  ('base_type -> FLOAT','base_type',1,'p_base_type','parser.py',111),
  ('base_type -> CHAR','base_type',1,'p_base_type','parser.py',112),
  ('base_type -> BOOL','base_type',1,'p_base_type','parser.py',113),
  ('expression -> expression_binaria','expression',1,'p_expression','parser.py',119),
  ('expression -> expression_comparacion','expression',1,'p_expression','parser.py',120),
  ('expression -> expression_logica','expression',1,'p_expression','parser.py',121),
  ('expression -> expression_unaria','expression',1,'p_expression','parser.py',122),
  ('expression -> expression_group','expression',1,'p_expression','parser.py',123),
  ('expression -> expression_number','expression',1,'p_expression','parser.py',124),
  ('expression -> expression_var','expression',1,'p_expression','parser.py',125),
  ('expression -> expression_array_access','expression',1,'p_expression','parser.py',126),
  ('expression -> expression_field_access','expression',1,'p_expression','parser.py',127),
  ('expression -> expression_func_call','expression',1,'p_expression','parser.py',128),
  ('expression_binaria -> expression PLUS expression','expression_binaria',3,'p_expression_binaria','parser.py',132),
  ('expression_binaria -> expression MINUS expression','expression_binaria',3,'p_expression_binaria','parser.py',133),
  ('expression_binaria -> expression TIMES expression','expression_binaria',3,'p_expression_binaria','parser.py',134),
  ('expression_binaria -> expression DIVIDE expression','expression_binaria',3,'p_expression_binaria','parser.py',135),
  ('expression_comparacion -> expression EQ expression','expression_comparacion',3,'p_expression_comparacion','parser.py',140),
  ('expression_comparacion -> expression GT expression','expression_comparacion',3,'p_expression_comparacion','parser.py',141),
  ('expression_comparacion -> expression GE expression','expression_comparacion',3,'p_expression_comparacion','parser.py',142),
  ('expression_comparacion -> expression LT expression','expression_comparacion',3,'p_expression_comparacion','parser.py',143),
  ('expression_comparacion -> expression LE expression','expression_comparacion',3,'p_expression_comparacion','parser.py',144),
  ('expression_logica -> expression AND expression','expression_logica',3,'p_expression_logica','parser.py',149),
  ('expression_logica -> expression OR expression','expression_logica',3,'p_expression_logica','parser.py',150),
  ('expression_unaria -> MINUS expression','expression_unaria',2,'p_expression_unaria','parser.py',154),
  ('expression_unaria -> NOT expression','expression_unaria',2,'p_expression_unaria','parser.py',155),
  ('expression_group -> LPAREN expression RPAREN','expression_group',3,'p_expression_group','parser.py',159),
  ('expression_number -> NUMBER','expression_number',1,'p_expression_number','parser.py',163),
  ('expression_number -> FLOAT_NUMBER','expression_number',1,'p_expression_number','parser.py',164),
  ('expression_number -> TRUE','expression_number',1,'p_expression_number','parser.py',165),
  ('expression_number -> FALSE','expression_number',1,'p_expression_number','parser.py',166),
  ('expression_number -> CHARACTER','expression_number',1,'p_expression_number','parser.py',167),
  ('expression_var -> ID','expression_var',1,'p_expression_var','parser.py',172),
  ('expression_array_access -> expression LBRACKET expression RBRACKET','expression_array_access',4,'p_expression_array_access','parser.py',177),
  ('expression_field_access -> expression DOT ID','expression_field_access',3,'p_expression_field_access','parser.py',182),
  ('expression_func_call -> ID LPAREN arg_list RPAREN','expression_func_call',4,'p_expression_func_call','parser.py',186),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',192),
  ('param_list -> param_list SEMICOLON param','param_list',3,'p_param_list','parser.py',193),
  ('param -> type ID','param',2,'p_param','parser.py',200),
  ('arg_list -> expression','arg_list',1,'p_arg_list','parser.py',204),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','parser.py',205),
  ('arg_list -> empty','arg_list',1,'p_arg_list','parser.py',206),
  ('field_list -> field','field_list',1,'p_field_list','parser.py',217),
  ('field_list -> field_list field','field_list',2,'p_field_list','parser.py',218),
  ('field -> type ID','field',2,'p_field','parser.py',225),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',231),
]
